<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1110" onload="init(evt)" viewBox="0 0 1200 1110" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1110.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1093" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1093" > </text>
<g id="frames">
<g >
<title>ngtcp2_addr_eq (20 samples, 0.72%)</title><rect x="1008.9" y="965" width="8.5" height="15.0" fill="rgb(239,67,41)" rx="2" ry="2" />
<text  x="1011.92" y="975.5" ></text>
</g>
<g >
<title>command_substitute (1 samples, 0.04%)</title><rect x="69.2" y="293" width="0.5" height="15.0" fill="rgb(206,131,40)" rx="2" ry="2" />
<text  x="72.23" y="303.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.04%)</title><rect x="1121.5" y="933" width="0.4" height="15.0" fill="rgb(209,215,41)" rx="2" ry="2" />
<text  x="1124.46" y="943.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="69.2" y="837" width="0.5" height="15.0" fill="rgb(217,201,46)" rx="2" ry="2" />
<text  x="72.23" y="847.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1137.1" y="917" width="0.4" height="15.0" fill="rgb(233,154,15)" rx="2" ry="2" />
<text  x="1140.11" y="927.5" ></text>
</g>
<g >
<title>ngtcp2_pkt_verify_reserved_bits (3 samples, 0.11%)</title><rect x="927.7" y="949" width="1.3" height="15.0" fill="rgb(239,168,19)" rx="2" ry="2" />
<text  x="930.68" y="959.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (4 samples, 0.14%)</title><rect x="271.5" y="837" width="1.7" height="15.0" fill="rgb(232,106,3)" rx="2" ry="2" />
<text  x="274.47" y="847.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.0 (3 samples, 0.11%)</title><rect x="1031.8" y="709" width="1.2" height="15.0" fill="rgb(219,182,47)" rx="2" ry="2" />
<text  x="1034.76" y="719.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.04%)</title><rect x="431.0" y="933" width="0.4" height="15.0" fill="rgb(221,57,1)" rx="2" ry="2" />
<text  x="433.98" y="943.5" ></text>
</g>
<g >
<title>ngtcp2_path_eq (7 samples, 0.25%)</title><rect x="995.8" y="965" width="3.0" height="15.0" fill="rgb(214,214,25)" rx="2" ry="2" />
<text  x="998.80" y="975.5" ></text>
</g>
<g >
<title>__GI___default_morecore (1 samples, 0.04%)</title><rect x="71.8" y="133" width="0.4" height="15.0" fill="rgb(231,68,49)" rx="2" ry="2" />
<text  x="74.77" y="143.5" ></text>
</g>
<g >
<title>cgroup_path_ns_locked (1 samples, 0.04%)</title><rect x="1132.9" y="773" width="0.4" height="15.0" fill="rgb(251,53,53)" rx="2" ry="2" />
<text  x="1135.88" y="783.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="69.2" y="197" width="0.5" height="15.0" fill="rgb(243,24,30)" rx="2" ry="2" />
<text  x="72.23" y="207.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;h2load::main (46 samples, 1.65%)</title><rect x="1071.1" y="981" width="19.5" height="15.0" fill="rgb(233,193,21)" rx="2" ry="2" />
<text  x="1074.11" y="991.5" ></text>
</g>
<g >
<title>ngtcp2_crypto_encrypt_unsecure_cb (2 samples, 0.07%)</title><rect x="1058.0" y="933" width="0.8" height="15.0" fill="rgb(205,157,45)" rx="2" ry="2" />
<text  x="1061.00" y="943.5" ></text>
</g>
<g >
<title>write_number (1 samples, 0.04%)</title><rect x="57.8" y="997" width="0.4" height="15.0" fill="rgb(215,128,49)" rx="2" ry="2" />
<text  x="60.81" y="1007.5" ></text>
</g>
<g >
<title>[ls] (1 samples, 0.04%)</title><rect x="1135.0" y="997" width="0.4" height="15.0" fill="rgb(221,159,32)" rx="2" ry="2" />
<text  x="1138.00" y="1007.5" ></text>
</g>
<g >
<title>[bash] (2 samples, 0.07%)</title><rect x="1094.4" y="469" width="0.8" height="15.0" fill="rgb(219,121,47)" rx="2" ry="2" />
<text  x="1097.38" y="479.5" ></text>
</g>
<g >
<title>ngtcp2_ppe_final (3 samples, 0.11%)</title><rect x="1057.6" y="949" width="1.2" height="15.0" fill="rgb(213,109,25)" rx="2" ry="2" />
<text  x="1060.57" y="959.5" ></text>
</g>
<g >
<title>do_wait (1 samples, 0.04%)</title><rect x="1096.9" y="389" width="0.4" height="15.0" fill="rgb(253,168,27)" rx="2" ry="2" />
<text  x="1099.92" y="399.5" ></text>
</g>
<g >
<title>ngtcp2_qlog_metrics_updated (6 samples, 0.22%)</title><rect x="929.0" y="949" width="2.5" height="15.0" fill="rgb(235,61,33)" rx="2" ry="2" />
<text  x="931.95" y="959.5" ></text>
</g>
<g >
<title>__x64_sys_wait4 (1 samples, 0.04%)</title><rect x="1094.0" y="805" width="0.4" height="15.0" fill="rgb(233,186,1)" rx="2" ry="2" />
<text  x="1096.96" y="815.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="69.2" y="373" width="0.5" height="15.0" fill="rgb(217,173,24)" rx="2" ry="2" />
<text  x="72.23" y="383.5" ></text>
</g>
<g >
<title>[bash] (2 samples, 0.07%)</title><rect x="1096.5" y="709" width="0.8" height="15.0" fill="rgb(221,24,35)" rx="2" ry="2" />
<text  x="1099.50" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1096.9" y="469" width="0.4" height="15.0" fill="rgb(223,92,35)" rx="2" ry="2" />
<text  x="1099.92" y="479.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="69.2" y="565" width="0.5" height="15.0" fill="rgb(228,196,41)" rx="2" ry="2" />
<text  x="72.23" y="575.5" ></text>
</g>
<g >
<title>ossl_init_config_ossl_ (1 samples, 0.04%)</title><rect x="1093.1" y="885" width="0.4" height="15.0" fill="rgb(251,71,26)" rx="2" ry="2" />
<text  x="1096.11" y="895.5" ></text>
</g>
<g >
<title>[libngtcp2.so.0.0.0] (2 samples, 0.07%)</title><rect x="66.7" y="1029" width="0.8" height="15.0" fill="rgb(211,165,31)" rx="2" ry="2" />
<text  x="69.69" y="1039.5" ></text>
</g>
<g >
<title>read_command (2 samples, 0.07%)</title><rect x="1097.8" y="965" width="0.8" height="15.0" fill="rgb(238,128,16)" rx="2" ry="2" />
<text  x="1100.77" y="975.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (52 samples, 1.86%)</title><rect x="1026.3" y="949" width="22.0" height="15.0" fill="rgb(216,179,6)" rx="2" ry="2" />
<text  x="1029.26" y="959.5" >e..</text>
</g>
<g >
<title>opendir_tail (1 samples, 0.04%)</title><rect x="71.8" y="213" width="0.4" height="15.0" fill="rgb(227,95,3)" rx="2" ry="2" />
<text  x="74.77" y="223.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.04%)</title><rect x="1091.4" y="805" width="0.4" height="15.0" fill="rgb(222,161,29)" rx="2" ry="2" />
<text  x="1094.42" y="815.5" ></text>
</g>
<g >
<title>conn_recv_handshake_pkt (1 samples, 0.04%)</title><rect x="450.4" y="965" width="0.5" height="15.0" fill="rgb(205,210,13)" rx="2" ry="2" />
<text  x="453.44" y="975.5" ></text>
</g>
<g >
<title>nghttp3_conn_read_bidi (7 samples, 0.25%)</title><rect x="37.5" y="1013" width="3.0" height="15.0" fill="rgb(227,59,32)" rx="2" ry="2" />
<text  x="40.50" y="1023.5" ></text>
</g>
<g >
<title>__bswap_64 (1 samples, 0.04%)</title><rect x="677.2" y="821" width="0.4" height="15.0" fill="rgb(224,197,41)" rx="2" ry="2" />
<text  x="680.21" y="831.5" ></text>
</g>
<g >
<title>_dl_relocate_object (1 samples, 0.04%)</title><rect x="1133.7" y="949" width="0.5" height="15.0" fill="rgb(226,136,31)" rx="2" ry="2" />
<text  x="1136.73" y="959.5" ></text>
</g>
<g >
<title>__slab_free (15 samples, 0.54%)</title><rect x="378.1" y="805" width="6.3" height="15.0" fill="rgb(240,129,42)" rx="2" ry="2" />
<text  x="381.09" y="815.5" ></text>
</g>
<g >
<title>execute_command_internal (9 samples, 0.32%)</title><rect x="1094.0" y="949" width="3.8" height="15.0" fill="rgb(211,13,41)" rx="2" ry="2" />
<text  x="1096.96" y="959.5" ></text>
</g>
<g >
<title>pktns_commit_recv_pkt_num (57 samples, 2.04%)</title><rect x="940.0" y="949" width="24.1" height="15.0" fill="rgb(243,106,53)" rx="2" ry="2" />
<text  x="942.95" y="959.5" >p..</text>
</g>
<g >
<title>__do_sys_wait4 (1 samples, 0.04%)</title><rect x="1096.9" y="421" width="0.4" height="15.0" fill="rgb(229,113,0)" rx="2" ry="2" />
<text  x="1099.92" y="431.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="1133.3" y="805" width="0.4" height="15.0" fill="rgb(236,211,2)" rx="2" ry="2" />
<text  x="1136.31" y="815.5" ></text>
</g>
<g >
<title>activate_task (6 samples, 0.22%)</title><rect x="1184.5" y="933" width="2.5" height="15.0" fill="rgb(223,163,50)" rx="2" ry="2" />
<text  x="1187.50" y="943.5" ></text>
</g>
<g >
<title>conn_ppe_write_frame_hd_log (1 samples, 0.04%)</title><rect x="1055.9" y="933" width="0.4" height="15.0" fill="rgb(250,91,32)" rx="2" ry="2" />
<text  x="1058.88" y="943.5" ></text>
</g>
<g >
<title>log_pkt_hd (1 samples, 0.04%)</title><rect x="36.2" y="1013" width="0.5" height="15.0" fill="rgb(241,127,37)" rx="2" ry="2" />
<text  x="39.23" y="1023.5" ></text>
</g>
<g >
<title>execute_command_internal (3 samples, 0.11%)</title><rect x="1096.1" y="757" width="1.2" height="15.0" fill="rgb(207,32,30)" rx="2" ry="2" />
<text  x="1099.07" y="767.5" ></text>
</g>
<g >
<title>h2load::Client::quic_restart_pkt_timer (2 samples, 0.07%)</title><rect x="1024.1" y="997" width="0.9" height="15.0" fill="rgb(228,154,16)" rx="2" ry="2" />
<text  x="1027.15" y="1007.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="71.8" y="677" width="0.4" height="15.0" fill="rgb(242,99,47)" rx="2" ry="2" />
<text  x="74.77" y="687.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.04%)</title><rect x="1184.5" y="901" width="0.4" height="15.0" fill="rgb(238,159,41)" rx="2" ry="2" />
<text  x="1187.50" y="911.5" ></text>
</g>
<g >
<title>sock_recvmsg (3 samples, 0.11%)</title><rect x="435.2" y="933" width="1.3" height="15.0" fill="rgb(208,124,30)" rx="2" ry="2" />
<text  x="438.21" y="943.5" ></text>
</g>
<g >
<title>conn_recv_handshake_pkt (1 samples, 0.04%)</title><rect x="450.4" y="949" width="0.5" height="15.0" fill="rgb(205,71,46)" rx="2" ry="2" />
<text  x="453.44" y="959.5" ></text>
</g>
<g >
<title>_dl_relocate_object (2 samples, 0.07%)</title><rect x="1136.3" y="949" width="0.8" height="15.0" fill="rgb(224,73,11)" rx="2" ry="2" />
<text  x="1139.27" y="959.5" ></text>
</g>
<g >
<title>[h2load] (1 samples, 0.04%)</title><rect x="1025.4" y="981" width="0.4" height="15.0" fill="rgb(222,163,42)" rx="2" ry="2" />
<text  x="1028.42" y="991.5" ></text>
</g>
<g >
<title>ngtcp2_conn_extend_max_stream_offset (39 samples, 1.40%)</title><rect x="641.3" y="757" width="16.5" height="15.0" fill="rgb(242,11,52)" rx="2" ry="2" />
<text  x="644.25" y="767.5" ></text>
</g>
<g >
<title>command_substitute (1 samples, 0.04%)</title><rect x="1097.3" y="853" width="0.5" height="15.0" fill="rgb(240,161,17)" rx="2" ry="2" />
<text  x="1100.34" y="863.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (28 samples, 1.00%)</title><rect x="399.2" y="901" width="11.9" height="15.0" fill="rgb(228,47,24)" rx="2" ry="2" />
<text  x="402.24" y="911.5" ></text>
</g>
<g >
<title>do_syscall_64 (51 samples, 1.83%)</title><rect x="1026.7" y="933" width="21.6" height="15.0" fill="rgb(232,207,42)" rx="2" ry="2" />
<text  x="1029.69" y="943.5" >d..</text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="71.8" y="853" width="0.4" height="15.0" fill="rgb(245,53,3)" rx="2" ry="2" />
<text  x="74.77" y="863.5" ></text>
</g>
<g >
<title>hrtimer_init_sleeper (1 samples, 0.04%)</title><rect x="1080.4" y="389" width="0.4" height="15.0" fill="rgb(245,72,52)" rx="2" ry="2" />
<text  x="1083.42" y="399.5" ></text>
</g>
<g >
<title>nghttp3_map_find (36 samples, 1.29%)</title><rect x="548.2" y="837" width="15.2" height="15.0" fill="rgb(246,81,34)" rx="2" ry="2" />
<text  x="551.17" y="847.5" ></text>
</g>
<g >
<title>__perf_event_enable (5 samples, 0.18%)</title><rect x="1138.0" y="821" width="2.1" height="15.0" fill="rgb(205,215,51)" rx="2" ry="2" />
<text  x="1140.96" y="831.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="1094.4" y="293" width="0.4" height="15.0" fill="rgb(209,155,43)" rx="2" ry="2" />
<text  x="1097.38" y="303.5" ></text>
</g>
<g >
<title>execute_command (4 samples, 0.14%)</title><rect x="1094.4" y="837" width="1.7" height="15.0" fill="rgb(207,21,17)" rx="2" ry="2" />
<text  x="1097.38" y="847.5" ></text>
</g>
<g >
<title>command_substitute (2 samples, 0.07%)</title><rect x="1096.5" y="613" width="0.8" height="15.0" fill="rgb(227,46,24)" rx="2" ry="2" />
<text  x="1099.50" y="623.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.04%)</title><rect x="1121.5" y="981" width="0.4" height="15.0" fill="rgb(244,125,11)" rx="2" ry="2" />
<text  x="1124.46" y="991.5" ></text>
</g>
<g >
<title>nghttp3_conn_writev_stream (4 samples, 0.14%)</title><rect x="1048.3" y="981" width="1.7" height="15.0" fill="rgb(253,148,52)" rx="2" ry="2" />
<text  x="1051.26" y="991.5" ></text>
</g>
<g >
<title>conn_create_ack_frame (2 samples, 0.07%)</title><rect x="1055.0" y="949" width="0.9" height="15.0" fill="rgb(242,117,53)" rx="2" ry="2" />
<text  x="1058.03" y="959.5" ></text>
</g>
<g >
<title>decrypt_hp (61 samples, 2.19%)</title><rect x="777.1" y="949" width="25.8" height="15.0" fill="rgb(225,128,13)" rx="2" ry="2" />
<text  x="780.06" y="959.5" >d..</text>
</g>
<g >
<title>sock_poll (2 samples, 0.07%)</title><rect x="1074.9" y="421" width="0.9" height="15.0" fill="rgb(239,41,1)" rx="2" ry="2" />
<text  x="1077.92" y="431.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="71.8" y="485" width="0.4" height="15.0" fill="rgb(221,163,0)" rx="2" ry="2" />
<text  x="74.77" y="495.5" ></text>
</g>
<g >
<title>ls (2 samples, 0.07%)</title><rect x="1135.0" y="1045" width="0.8" height="15.0" fill="rgb(207,68,44)" rx="2" ry="2" />
<text  x="1138.00" y="1055.5" ></text>
</g>
<g >
<title>ksl_node_set_key (2 samples, 0.07%)</title><rect x="956.9" y="901" width="0.8" height="15.0" fill="rgb(225,176,41)" rx="2" ry="2" />
<text  x="959.88" y="911.5" ></text>
</g>
<g >
<title>__alloc_skb (5 samples, 0.18%)</title><rect x="1031.3" y="725" width="2.2" height="15.0" fill="rgb(205,205,53)" rx="2" ry="2" />
<text  x="1034.34" y="735.5" ></text>
</g>
<g >
<title>[libngtcp2.so.0.0.0] (2 samples, 0.07%)</title><rect x="67.5" y="1013" width="0.9" height="15.0" fill="rgb(227,221,23)" rx="2" ry="2" />
<text  x="70.54" y="1023.5" ></text>
</g>
<g >
<title>ngtcp2_cid_less (41 samples, 1.47%)</title><rect x="759.7" y="901" width="17.4" height="15.0" fill="rgb(243,95,41)" rx="2" ry="2" />
<text  x="762.72" y="911.5" ></text>
</g>
<g >
<title>_IO_new_file_underflow (1 samples, 0.04%)</title><rect x="1132.9" y="949" width="0.4" height="15.0" fill="rgb(239,151,52)" rx="2" ry="2" />
<text  x="1135.88" y="959.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (10 samples, 0.36%)</title><rect x="1080.4" y="405" width="4.3" height="15.0" fill="rgb(235,202,51)" rx="2" ry="2" />
<text  x="1083.42" y="415.5" ></text>
</g>
<g >
<title>change_protection_range (1 samples, 0.04%)</title><rect x="1136.3" y="805" width="0.4" height="15.0" fill="rgb(219,154,45)" rx="2" ry="2" />
<text  x="1139.27" y="815.5" ></text>
</g>
<g >
<title>execute_command (3 samples, 0.11%)</title><rect x="1096.1" y="773" width="1.2" height="15.0" fill="rgb(218,31,52)" rx="2" ry="2" />
<text  x="1099.07" y="783.5" ></text>
</g>
<g >
<title>__fdget (2 samples, 0.07%)</title><rect x="1073.7" y="453" width="0.8" height="15.0" fill="rgb(209,121,28)" rx="2" ry="2" />
<text  x="1076.65" y="463.5" ></text>
</g>
<g >
<title>__vma_adjust (1 samples, 0.04%)</title><rect x="1133.7" y="789" width="0.5" height="15.0" fill="rgb(253,3,48)" rx="2" ry="2" />
<text  x="1136.73" y="799.5" ></text>
</g>
<g >
<title>[bash] (2 samples, 0.07%)</title><rect x="1095.2" y="325" width="0.9" height="15.0" fill="rgb(241,94,44)" rx="2" ry="2" />
<text  x="1098.23" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="71.8" y="181" width="0.4" height="15.0" fill="rgb(241,52,48)" rx="2" ry="2" />
<text  x="74.77" y="191.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="1132.9" y="741" width="0.4" height="15.0" fill="rgb(241,117,25)" rx="2" ry="2" />
<text  x="1135.88" y="751.5" ></text>
</g>
<g >
<title>ngtcp2_crypto_read_write_crypto_data (1 samples, 0.04%)</title><rect x="450.4" y="869" width="0.5" height="15.0" fill="rgb(234,222,38)" rx="2" ry="2" />
<text  x="453.44" y="879.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;h2load::Session, std::default_delete&lt;h2load::Session&gt; &gt;::get (71 samples, 2.55%)</title><rect x="677.6" y="885" width="30.1" height="15.0" fill="rgb(229,189,7)" rx="2" ry="2" />
<text  x="680.64" y="895.5" >st..</text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.04%)</title><rect x="1186.2" y="869" width="0.4" height="15.0" fill="rgb(243,22,10)" rx="2" ry="2" />
<text  x="1189.19" y="879.5" ></text>
</g>
<g >
<title>ngtcp2_cid_less (1 samples, 0.04%)</title><rect x="67.1" y="1013" width="0.4" height="15.0" fill="rgb(254,34,23)" rx="2" ry="2" />
<text  x="70.12" y="1023.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;h2load::main (1 samples, 0.04%)</title><rect x="1093.5" y="853" width="0.5" height="15.0" fill="rgb(244,18,2)" rx="2" ry="2" />
<text  x="1096.54" y="863.5" ></text>
</g>
<g >
<title>ngtcp2_conn_extend_max_offset (3 samples, 0.11%)</title><rect x="640.0" y="757" width="1.3" height="15.0" fill="rgb(249,15,8)" rx="2" ry="2" />
<text  x="642.98" y="767.5" ></text>
</g>
<g >
<title>ksl_bsearch (3 samples, 0.11%)</title><rect x="951.0" y="901" width="1.2" height="15.0" fill="rgb(252,48,4)" rx="2" ry="2" />
<text  x="953.95" y="911.5" ></text>
</g>
<g >
<title>pagecache_get_page (1 samples, 0.04%)</title><rect x="1098.6" y="677" width="0.4" height="15.0" fill="rgb(221,56,37)" rx="2" ry="2" />
<text  x="1101.61" y="687.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.04%)</title><rect x="1135.4" y="853" width="0.4" height="15.0" fill="rgb(243,166,42)" rx="2" ry="2" />
<text  x="1138.42" y="863.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (1 samples, 0.04%)</title><rect x="1062.6" y="997" width="0.5" height="15.0" fill="rgb(241,118,15)" rx="2" ry="2" />
<text  x="1065.65" y="1007.5" ></text>
</g>
<g >
<title>_dl_start_user (1 samples, 0.04%)</title><rect x="1135.4" y="1029" width="0.4" height="15.0" fill="rgb(252,99,30)" rx="2" ry="2" />
<text  x="1138.42" y="1039.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.04%)</title><rect x="1094.0" y="725" width="0.4" height="15.0" fill="rgb(252,13,48)" rx="2" ry="2" />
<text  x="1096.96" y="735.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.04%)</title><rect x="1083.0" y="357" width="0.4" height="15.0" fill="rgb(254,228,20)" rx="2" ry="2" />
<text  x="1085.96" y="367.5" ></text>
</g>
<g >
<title>err_cleanup (1 samples, 0.04%)</title><rect x="1091.8" y="949" width="0.5" height="15.0" fill="rgb(229,194,14)" rx="2" ry="2" />
<text  x="1094.84" y="959.5" ></text>
</g>
<g >
<title>key_equal (2 samples, 0.07%)</title><rect x="953.9" y="901" width="0.9" height="15.0" fill="rgb(235,182,13)" rx="2" ry="2" />
<text  x="956.92" y="911.5" ></text>
</g>
<g >
<title>[h2load] (1 samples, 0.04%)</title><rect x="1089.7" y="485" width="0.5" height="15.0" fill="rgb(212,6,13)" rx="2" ry="2" />
<text  x="1092.73" y="495.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.04%)</title><rect x="1030.1" y="757" width="0.4" height="15.0" fill="rgb(218,63,49)" rx="2" ry="2" />
<text  x="1033.07" y="767.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.04%)</title><rect x="1184.1" y="773" width="0.4" height="15.0" fill="rgb(212,50,29)" rx="2" ry="2" />
<text  x="1187.08" y="783.5" ></text>
</g>
<g >
<title>copy_user_generic_string (1 samples, 0.04%)</title><rect x="1047.0" y="837" width="0.4" height="15.0" fill="rgb(247,142,36)" rx="2" ry="2" />
<text  x="1050.00" y="847.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned char, 65536ul&gt;::size (3 samples, 0.11%)</title><rect x="60.8" y="1013" width="1.2" height="15.0" fill="rgb(252,109,9)" rx="2" ry="2" />
<text  x="63.77" y="1023.5" ></text>
</g>
<g >
<title>conn_write_ack_pkt (1 samples, 0.04%)</title><rect x="1051.6" y="965" width="0.5" height="15.0" fill="rgb(252,31,9)" rx="2" ry="2" />
<text  x="1054.65" y="975.5" ></text>
</g>
<g >
<title>ensure_decrypt_buffer (1 samples, 0.04%)</title><rect x="517.7" y="933" width="0.4" height="15.0" fill="rgb(250,79,51)" rx="2" ry="2" />
<text  x="520.71" y="943.5" ></text>
</g>
<g >
<title>_start (21 samples, 0.75%)</title><rect x="1091.8" y="1029" width="8.9" height="15.0" fill="rgb(206,148,28)" rx="2" ry="2" />
<text  x="1094.84" y="1039.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (6 samples, 0.22%)</title><rect x="618.8" y="725" width="2.6" height="15.0" fill="rgb(212,213,0)" rx="2" ry="2" />
<text  x="621.83" y="735.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (2 samples, 0.07%)</title><rect x="1042.8" y="629" width="0.8" height="15.0" fill="rgb(209,193,16)" rx="2" ry="2" />
<text  x="1045.76" y="639.5" ></text>
</g>
<g >
<title>elf_machine_rela (2 samples, 0.07%)</title><rect x="1099.5" y="917" width="0.8" height="15.0" fill="rgb(219,42,44)" rx="2" ry="2" />
<text  x="1102.46" y="927.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="71.8" y="725" width="0.4" height="15.0" fill="rgb(247,208,16)" rx="2" ry="2" />
<text  x="74.77" y="735.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash_rcu (7 samples, 0.25%)</title><rect x="1034.3" y="773" width="3.0" height="15.0" fill="rgb(248,211,47)" rx="2" ry="2" />
<text  x="1037.30" y="783.5" ></text>
</g>
<g >
<title>datagram_poll (1 samples, 0.04%)</title><rect x="1075.3" y="389" width="0.5" height="15.0" fill="rgb(221,53,22)" rx="2" ry="2" />
<text  x="1078.34" y="399.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="71.8" y="757" width="0.4" height="15.0" fill="rgb(253,96,2)" rx="2" ry="2" />
<text  x="74.77" y="767.5" ></text>
</g>
<g >
<title>__do_execve_file.isra.0 (1 samples, 0.04%)</title><rect x="1121.0" y="981" width="0.5" height="15.0" fill="rgb(238,195,1)" rx="2" ry="2" />
<text  x="1124.04" y="991.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.04%)</title><rect x="187.3" y="885" width="0.4" height="15.0" fill="rgb(209,176,38)" rx="2" ry="2" />
<text  x="190.28" y="895.5" ></text>
</g>
<g >
<title>__GI___libc_dlopen_mode (1 samples, 0.04%)</title><rect x="1135.0" y="821" width="0.4" height="15.0" fill="rgb(209,40,0)" rx="2" ry="2" />
<text  x="1138.00" y="831.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.04%)</title><rect x="1129.9" y="1013" width="0.4" height="15.0" fill="rgb(253,122,14)" rx="2" ry="2" />
<text  x="1132.92" y="1023.5" ></text>
</g>
<g >
<title>sed (3 samples, 0.11%)</title><rect x="1135.8" y="1045" width="1.3" height="15.0" fill="rgb(245,27,20)" rx="2" ry="2" />
<text  x="1138.84" y="1055.5" ></text>
</g>
<g >
<title>ngtcp2_log_info (17 samples, 0.61%)</title><rect x="998.8" y="981" width="7.2" height="15.0" fill="rgb(205,48,28)" rx="2" ry="2" />
<text  x="1001.76" y="991.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set (46 samples, 1.65%)</title><rect x="1071.1" y="741" width="19.5" height="15.0" fill="rgb(207,188,20)" rx="2" ry="2" />
<text  x="1074.11" y="751.5" ></text>
</g>
<g >
<title>insert_work (1 samples, 0.04%)</title><rect x="1189.2" y="805" width="0.4" height="15.0" fill="rgb(217,148,33)" rx="2" ry="2" />
<text  x="1192.15" y="815.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="71.8" y="533" width="0.4" height="15.0" fill="rgb(211,68,40)" rx="2" ry="2" />
<text  x="74.77" y="543.5" ></text>
</g>
<g >
<title>[bash] (2 samples, 0.07%)</title><rect x="1096.5" y="629" width="0.8" height="15.0" fill="rgb(241,77,32)" rx="2" ry="2" />
<text  x="1099.50" y="639.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (1 samples, 0.04%)</title><rect x="1135.0" y="725" width="0.4" height="15.0" fill="rgb(218,156,22)" rx="2" ry="2" />
<text  x="1138.00" y="735.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="69.2" y="677" width="0.5" height="15.0" fill="rgb(253,156,50)" rx="2" ry="2" />
<text  x="72.23" y="687.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (1 samples, 0.04%)</title><rect x="1121.0" y="837" width="0.5" height="15.0" fill="rgb(243,59,9)" rx="2" ry="2" />
<text  x="1124.04" y="847.5" ></text>
</g>
<g >
<title>ngtcp2_gaptr_push (4 samples, 0.14%)</title><rect x="47.7" y="1013" width="1.6" height="15.0" fill="rgb(242,171,0)" rx="2" ry="2" />
<text  x="50.66" y="1023.5" ></text>
</g>
<g >
<title>check_match (1 samples, 0.04%)</title><rect x="1136.7" y="869" width="0.4" height="15.0" fill="rgb(232,188,39)" rx="2" ry="2" />
<text  x="1139.69" y="879.5" ></text>
</g>
<g >
<title>std::async&lt;h2load::main (1 samples, 0.04%)</title><rect x="1093.5" y="965" width="0.5" height="15.0" fill="rgb(249,98,4)" rx="2" ry="2" />
<text  x="1096.54" y="975.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="1091.4" y="949" width="0.4" height="15.0" fill="rgb(250,136,36)" rx="2" ry="2" />
<text  x="1094.42" y="959.5" ></text>
</g>
<g >
<title>__queue_work (1 samples, 0.04%)</title><rect x="1189.2" y="821" width="0.4" height="15.0" fill="rgb(212,151,49)" rx="2" ry="2" />
<text  x="1192.15" y="831.5" ></text>
</g>
<g >
<title>ngtcp2_conn_get_expiry (1 samples, 0.04%)</title><rect x="1024.6" y="981" width="0.4" height="15.0" fill="rgb(205,134,51)" rx="2" ry="2" />
<text  x="1027.57" y="991.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.04%)</title><rect x="631.5" y="677" width="0.4" height="15.0" fill="rgb(224,31,39)" rx="2" ry="2" />
<text  x="634.52" y="687.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned char, 65536ul&gt;::data (3 samples, 0.11%)</title><rect x="1123.6" y="1013" width="1.2" height="15.0" fill="rgb(238,17,53)" rx="2" ry="2" />
<text  x="1126.57" y="1023.5" ></text>
</g>
<g >
<title>ngtcp2_crypto_decrypt_unsecure_cb (66 samples, 2.37%)</title><rect x="817.3" y="933" width="27.9" height="15.0" fill="rgb(206,125,37)" rx="2" ry="2" />
<text  x="820.26" y="943.5" >n..</text>
</g>
<g >
<title>h2load::Client::do_read (2 samples, 0.07%)</title><rect x="1088.0" y="501" width="0.9" height="15.0" fill="rgb(226,152,49)" rx="2" ry="2" />
<text  x="1091.04" y="511.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="71.8" y="709" width="0.4" height="15.0" fill="rgb(207,51,6)" rx="2" ry="2" />
<text  x="74.77" y="719.5" ></text>
</g>
<g >
<title>ngtcp2_gaptr_is_pushed (1 samples, 0.04%)</title><rect x="47.2" y="1013" width="0.5" height="15.0" fill="rgb(254,1,33)" rx="2" ry="2" />
<text  x="50.23" y="1023.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1096.9" y="453" width="0.4" height="15.0" fill="rgb(251,92,39)" rx="2" ry="2" />
<text  x="1099.92" y="463.5" ></text>
</g>
<g >
<title>irq_work_run (1 samples, 0.04%)</title><rect x="631.5" y="613" width="0.4" height="15.0" fill="rgb(227,75,53)" rx="2" ry="2" />
<text  x="634.52" y="623.5" ></text>
</g>
<g >
<title>[h2load] (1 samples, 0.04%)</title><rect x="539.7" y="885" width="0.4" height="15.0" fill="rgb(246,114,21)" rx="2" ry="2" />
<text  x="542.71" y="895.5" ></text>
</g>
<g >
<title>__switch_to (1 samples, 0.04%)</title><rect x="1090.6" y="1029" width="0.4" height="15.0" fill="rgb(216,63,18)" rx="2" ry="2" />
<text  x="1093.57" y="1039.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rcx (1 samples, 0.04%)</title><rect x="271.0" y="853" width="0.5" height="15.0" fill="rgb(221,89,15)" rx="2" ry="2" />
<text  x="274.05" y="863.5" ></text>
</g>
<g >
<title>h2load::(anonymous namespace)::readcb (6 samples, 0.22%)</title><rect x="1087.6" y="517" width="2.6" height="15.0" fill="rgb(236,78,28)" rx="2" ry="2" />
<text  x="1090.61" y="527.5" ></text>
</g>
<g >
<title>dl_main (5 samples, 0.18%)</title><rect x="1098.6" y="965" width="2.1" height="15.0" fill="rgb(239,84,50)" rx="2" ry="2" />
<text  x="1101.61" y="975.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;h2load::main (1 samples, 0.04%)</title><rect x="1093.5" y="885" width="0.5" height="15.0" fill="rgb(215,29,24)" rx="2" ry="2" />
<text  x="1096.54" y="895.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned (17 samples, 0.61%)</title><rect x="909.1" y="901" width="7.2" height="15.0" fill="rgb(216,179,7)" rx="2" ry="2" />
<text  x="912.07" y="911.5" ></text>
</g>
<g >
<title>__GI___mbrtowc (1 samples, 0.04%)</title><rect x="1096.1" y="581" width="0.4" height="15.0" fill="rgb(205,5,27)" rx="2" ry="2" />
<text  x="1099.07" y="591.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="69.2" y="949" width="0.5" height="15.0" fill="rgb(206,184,5)" rx="2" ry="2" />
<text  x="72.23" y="959.5" ></text>
</g>
<g >
<title>reader_loop (1 samples, 0.04%)</title><rect x="69.2" y="981" width="0.5" height="15.0" fill="rgb(209,217,2)" rx="2" ry="2" />
<text  x="72.23" y="991.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="71.8" y="613" width="0.4" height="15.0" fill="rgb(214,204,23)" rx="2" ry="2" />
<text  x="74.77" y="623.5" ></text>
</g>
<g >
<title>conn_call_recv_stream_data (2 samples, 0.07%)</title><rect x="20.2" y="981" width="0.8" height="15.0" fill="rgb(251,74,50)" rx="2" ry="2" />
<text  x="23.15" y="991.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="71.8" y="789" width="0.4" height="15.0" fill="rgb(236,48,41)" rx="2" ry="2" />
<text  x="74.77" y="799.5" ></text>
</g>
<g >
<title>std::call_once&lt;void  (46 samples, 1.65%)</title><rect x="1071.1" y="869" width="19.5" height="15.0" fill="rgb(238,138,42)" rx="2" ry="2" />
<text  x="1074.11" y="879.5" ></text>
</g>
<g >
<title>ngtcp2_crypto_create_nonce (26 samples, 0.93%)</title><rect x="806.3" y="933" width="11.0" height="15.0" fill="rgb(241,180,25)" rx="2" ry="2" />
<text  x="809.26" y="943.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.04%)</title><rect x="1129.9" y="1029" width="0.4" height="15.0" fill="rgb(240,22,53)" rx="2" ry="2" />
<text  x="1132.92" y="1039.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="1026.3" y="933" width="0.4" height="15.0" fill="rgb(216,180,16)" rx="2" ry="2" />
<text  x="1029.26" y="943.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (2 samples, 0.07%)</title><rect x="916.3" y="901" width="0.8" height="15.0" fill="rgb(212,94,12)" rx="2" ry="2" />
<text  x="919.26" y="911.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="71.8" y="341" width="0.4" height="15.0" fill="rgb(235,19,22)" rx="2" ry="2" />
<text  x="74.77" y="351.5" ></text>
</g>
<g >
<title>ngtcp2_ksl_lower_bound (1 samples, 0.04%)</title><rect x="1066.9" y="1013" width="0.4" height="15.0" fill="rgb(216,171,29)" rx="2" ry="2" />
<text  x="1069.88" y="1023.5" ></text>
</g>
<g >
<title>conn_read_handshake (1 samples, 0.04%)</title><rect x="450.4" y="997" width="0.5" height="15.0" fill="rgb(249,158,9)" rx="2" ry="2" />
<text  x="453.44" y="1007.5" ></text>
</g>
<g >
<title>[libev.so.4.0.0] (34 samples, 1.22%)</title><rect x="1072.0" y="533" width="14.3" height="15.0" fill="rgb(247,99,8)" rx="2" ry="2" />
<text  x="1074.96" y="543.5" ></text>
</g>
<g >
<title>ngtcp2_conn_sched_ack (57 samples, 2.04%)</title><rect x="850.7" y="949" width="24.1" height="15.0" fill="rgb(224,112,19)" rx="2" ry="2" />
<text  x="853.68" y="959.5" >n..</text>
</g>
<g >
<title>kworker/1:1-eve (2 samples, 0.07%)</title><rect x="1134.2" y="1045" width="0.8" height="15.0" fill="rgb(238,178,12)" rx="2" ry="2" />
<text  x="1137.15" y="1055.5" ></text>
</g>
<g >
<title>ngtcp2_get_varint (7 samples, 0.25%)</title><rect x="923.0" y="933" width="3.0" height="15.0" fill="rgb(238,72,43)" rx="2" ry="2" />
<text  x="926.03" y="943.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="631.5" y="661" width="0.4" height="15.0" fill="rgb(251,177,34)" rx="2" ry="2" />
<text  x="634.52" y="671.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="1094.8" y="373" width="0.4" height="15.0" fill="rgb(236,197,7)" rx="2" ry="2" />
<text  x="1097.80" y="383.5" ></text>
</g>
<g >
<title>call_cpuidle (107 samples, 3.84%)</title><rect x="1137.1" y="965" width="45.3" height="15.0" fill="rgb(208,187,49)" rx="2" ry="2" />
<text  x="1140.11" y="975.5" >call..</text>
</g>
<g >
<title>ngtcp2_buf_init (2 samples, 0.07%)</title><rect x="1059.3" y="933" width="0.8" height="15.0" fill="rgb(214,21,10)" rx="2" ry="2" />
<text  x="1062.26" y="943.5" ></text>
</g>
<g >
<title>__GI__IO_default_uflow (1 samples, 0.04%)</title><rect x="1132.9" y="965" width="0.4" height="15.0" fill="rgb(244,67,44)" rx="2" ry="2" />
<text  x="1135.88" y="975.5" ></text>
</g>
<g >
<title>[libngtcp2.so.0.0.0] (2 samples, 0.07%)</title><rect x="893.8" y="933" width="0.9" height="15.0" fill="rgb(220,190,48)" rx="2" ry="2" />
<text  x="896.84" y="943.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.22%)</title><rect x="1073.2" y="501" width="2.6" height="15.0" fill="rgb(233,223,0)" rx="2" ry="2" />
<text  x="1076.23" y="511.5" ></text>
</g>
<g >
<title>conn_compute_ack_delay (1 samples, 0.04%)</title><rect x="1054.6" y="949" width="0.4" height="15.0" fill="rgb(226,8,18)" rx="2" ry="2" />
<text  x="1057.61" y="959.5" ></text>
</g>
<g >
<title>__GI___close_nocancel (1 samples, 0.04%)</title><rect x="1133.3" y="869" width="0.4" height="15.0" fill="rgb(209,78,18)" rx="2" ry="2" />
<text  x="1136.31" y="879.5" ></text>
</g>
<g >
<title>activate_task (1 samples, 0.04%)</title><rect x="1184.1" y="757" width="0.4" height="15.0" fill="rgb(225,190,3)" rx="2" ry="2" />
<text  x="1187.08" y="767.5" ></text>
</g>
<g >
<title>__free_pages (1 samples, 0.04%)</title><rect x="383.6" y="741" width="0.4" height="15.0" fill="rgb(226,56,39)" rx="2" ry="2" />
<text  x="386.59" y="751.5" ></text>
</g>
<g >
<title>nghttp3_http_on_data_chunk (16 samples, 0.57%)</title><rect x="657.8" y="821" width="6.7" height="15.0" fill="rgb(207,148,32)" rx="2" ry="2" />
<text  x="660.75" y="831.5" ></text>
</g>
<g >
<title>may_open.isra.0 (1 samples, 0.04%)</title><rect x="1092.3" y="773" width="0.4" height="15.0" fill="rgb(232,151,42)" rx="2" ry="2" />
<text  x="1095.27" y="783.5" ></text>
</g>
<g >
<title>udp_rmem_release (3 samples, 0.11%)</title><rect x="266.0" y="837" width="1.2" height="15.0" fill="rgb(209,21,19)" rx="2" ry="2" />
<text  x="268.97" y="847.5" ></text>
</g>
<g >
<title>__x64_sys_openat (1 samples, 0.04%)</title><rect x="1092.3" y="853" width="0.4" height="15.0" fill="rgb(225,74,10)" rx="2" ry="2" />
<text  x="1095.27" y="863.5" ></text>
</g>
<g >
<title>init_nss_interface (1 samples, 0.04%)</title><rect x="1135.0" y="869" width="0.4" height="15.0" fill="rgb(233,125,40)" rx="2" ry="2" />
<text  x="1138.00" y="879.5" ></text>
</g>
<g >
<title>__libc_recvfrom (1 samples, 0.04%)</title><rect x="1123.2" y="1013" width="0.4" height="15.0" fill="rgb(213,80,8)" rx="2" ry="2" />
<text  x="1126.15" y="1023.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (44 samples, 1.58%)</title><rect x="126.8" y="981" width="18.6" height="15.0" fill="rgb(246,41,33)" rx="2" ry="2" />
<text  x="129.77" y="991.5" ></text>
</g>
<g >
<title>execute_command (3 samples, 0.11%)</title><rect x="1096.1" y="821" width="1.2" height="15.0" fill="rgb(252,223,45)" rx="2" ry="2" />
<text  x="1099.07" y="831.5" ></text>
</g>
<g >
<title>[libngtcp2_crypto_openssl.so.0.0.0] (1 samples, 0.04%)</title><rect x="1058.0" y="917" width="0.4" height="15.0" fill="rgb(234,148,51)" rx="2" ry="2" />
<text  x="1061.00" y="927.5" ></text>
</g>
<g >
<title>parse_and_execute (1 samples, 0.04%)</title><rect x="69.2" y="277" width="0.5" height="15.0" fill="rgb(244,139,12)" rx="2" ry="2" />
<text  x="72.23" y="287.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="69.2" y="165" width="0.5" height="15.0" fill="rgb(207,185,2)" rx="2" ry="2" />
<text  x="72.23" y="175.5" ></text>
</g>
<g >
<title>_raw_write_lock_irq (1 samples, 0.04%)</title><rect x="1078.7" y="421" width="0.5" height="15.0" fill="rgb(211,191,32)" rx="2" ry="2" />
<text  x="1081.73" y="431.5" ></text>
</g>
<g >
<title>__libc_open64 (1 samples, 0.04%)</title><rect x="1092.3" y="901" width="0.4" height="15.0" fill="rgb(233,108,42)" rx="2" ry="2" />
<text  x="1095.27" y="911.5" ></text>
</g>
<g >
<title>OPENSSL_init_crypto (1 samples, 0.04%)</title><rect x="1093.1" y="757" width="0.4" height="15.0" fill="rgb(221,76,25)" rx="2" ry="2" />
<text  x="1096.11" y="767.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="71.8" y="821" width="0.4" height="15.0" fill="rgb(234,60,15)" rx="2" ry="2" />
<text  x="74.77" y="831.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (9 samples, 0.32%)</title><rect x="195.7" y="901" width="3.8" height="15.0" fill="rgb(240,190,40)" rx="2" ry="2" />
<text  x="198.74" y="911.5" ></text>
</g>
<g >
<title>copyout (2 samples, 0.07%)</title><rect x="368.4" y="869" width="0.8" height="15.0" fill="rgb(220,35,18)" rx="2" ry="2" />
<text  x="371.36" y="879.5" ></text>
</g>
<g >
<title>irq_work_needs_cpu (1 samples, 0.04%)</title><rect x="1182.8" y="917" width="0.4" height="15.0" fill="rgb(222,170,1)" rx="2" ry="2" />
<text  x="1185.81" y="927.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;h2load::main (1 samples, 0.04%)</title><rect x="1093.5" y="901" width="0.5" height="15.0" fill="rgb(241,124,15)" rx="2" ry="2" />
<text  x="1096.54" y="911.5" ></text>
</g>
<g >
<title>allocate_stack (1 samples, 0.04%)</title><rect x="1093.5" y="741" width="0.5" height="15.0" fill="rgb(221,51,51)" rx="2" ry="2" />
<text  x="1096.54" y="751.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (7 samples, 0.25%)</title><rect x="783.4" y="901" width="3.0" height="15.0" fill="rgb(239,162,7)" rx="2" ry="2" />
<text  x="786.41" y="911.5" ></text>
</g>
<g >
<title>__get_user_4 (1 samples, 0.04%)</title><rect x="178.4" y="917" width="0.4" height="15.0" fill="rgb(214,31,34)" rx="2" ry="2" />
<text  x="181.39" y="927.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="1091.4" y="901" width="0.4" height="15.0" fill="rgb(213,78,29)" rx="2" ry="2" />
<text  x="1094.42" y="911.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="69.2" y="469" width="0.5" height="15.0" fill="rgb(215,226,17)" rx="2" ry="2" />
<text  x="72.23" y="479.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="1096.5" y="517" width="0.4" height="15.0" fill="rgb(249,181,5)" rx="2" ry="2" />
<text  x="1099.50" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (21 samples, 0.75%)</title><rect x="1077.0" y="469" width="8.9" height="15.0" fill="rgb(234,225,32)" rx="2" ry="2" />
<text  x="1080.03" y="479.5" ></text>
</g>
<g >
<title>getrn (1 samples, 0.04%)</title><rect x="1092.7" y="837" width="0.4" height="15.0" fill="rgb(211,156,26)" rx="2" ry="2" />
<text  x="1095.69" y="847.5" ></text>
</g>
<g >
<title>ngtcp2_conn_extend_max_stream_offset (14 samples, 0.50%)</title><rect x="671.7" y="885" width="5.9" height="15.0" fill="rgb(205,185,24)" rx="2" ry="2" />
<text  x="674.71" y="895.5" ></text>
</g>
<g >
<title>memcpy (64 samples, 2.29%)</title><rect x="818.1" y="901" width="27.1" height="15.0" fill="rgb(242,97,28)" rx="2" ry="2" />
<text  x="821.10" y="911.5" >m..</text>
</g>
<g >
<title>[h2load] (1 samples, 0.04%)</title><rect x="639.6" y="757" width="0.4" height="15.0" fill="rgb(218,152,14)" rx="2" ry="2" />
<text  x="642.56" y="767.5" ></text>
</g>
<g >
<title>__fdget (32 samples, 1.15%)</title><rect x="412.4" y="901" width="13.5" height="15.0" fill="rgb(240,85,12)" rx="2" ry="2" />
<text  x="415.36" y="911.5" ></text>
</g>
<g >
<title>shell_execve (1 samples, 0.04%)</title><rect x="1096.5" y="501" width="0.4" height="15.0" fill="rgb(233,54,21)" rx="2" ry="2" />
<text  x="1099.50" y="511.5" ></text>
</g>
<g >
<title>_dl_start (3 samples, 0.11%)</title><rect x="1135.8" y="1013" width="1.3" height="15.0" fill="rgb(242,201,41)" rx="2" ry="2" />
<text  x="1138.84" y="1023.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1137.1" y="901" width="0.4" height="15.0" fill="rgb(218,130,53)" rx="2" ry="2" />
<text  x="1140.11" y="911.5" ></text>
</g>
<g >
<title>yyparse (2 samples, 0.07%)</title><rect x="1097.8" y="933" width="0.8" height="15.0" fill="rgb(219,176,19)" rx="2" ry="2" />
<text  x="1100.77" y="943.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (4 samples, 0.14%)</title><rect x="271.5" y="853" width="1.7" height="15.0" fill="rgb(207,175,25)" rx="2" ry="2" />
<text  x="274.47" y="863.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1 samples, 0.04%)</title><rect x="1096.5" y="437" width="0.4" height="15.0" fill="rgb(222,188,3)" rx="2" ry="2" />
<text  x="1099.50" y="447.5" ></text>
</g>
<g >
<title>main (1 samples, 0.04%)</title><rect x="69.2" y="997" width="0.5" height="15.0" fill="rgb(235,9,42)" rx="2" ry="2" />
<text  x="72.23" y="1007.5" ></text>
</g>
<g >
<title>ngtcp2_ksl_update_key (13 samples, 0.47%)</title><rect x="952.2" y="917" width="5.5" height="15.0" fill="rgb(250,5,7)" rx="2" ry="2" />
<text  x="955.22" y="927.5" ></text>
</g>
<g >
<title>dst_release (1 samples, 0.04%)</title><rect x="1033.9" y="789" width="0.4" height="15.0" fill="rgb(233,186,12)" rx="2" ry="2" />
<text  x="1036.88" y="799.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="69.2" y="533" width="0.5" height="15.0" fill="rgb(237,51,31)" rx="2" ry="2" />
<text  x="72.23" y="543.5" ></text>
</g>
<g >
<title>[h2load] (17 samples, 0.61%)</title><rect x="91.2" y="997" width="7.2" height="15.0" fill="rgb(238,83,46)" rx="2" ry="2" />
<text  x="94.23" y="1007.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="71.8" y="517" width="0.4" height="15.0" fill="rgb(225,137,10)" rx="2" ry="2" />
<text  x="74.77" y="527.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.04%)</title><rect x="1080.0" y="421" width="0.4" height="15.0" fill="rgb(242,41,44)" rx="2" ry="2" />
<text  x="1083.00" y="431.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, h2load::Session*, false&gt;::_M_head (1 samples, 0.04%)</title><rect x="700.5" y="821" width="0.4" height="15.0" fill="rgb(237,101,51)" rx="2" ry="2" />
<text  x="703.48" y="831.5" ></text>
</g>
<g >
<title>[bash] (2 samples, 0.07%)</title><rect x="1095.2" y="421" width="0.9" height="15.0" fill="rgb(213,111,54)" rx="2" ry="2" />
<text  x="1098.23" y="431.5" ></text>
</g>
<g >
<title>udp_send_skb.isra.0 (20 samples, 0.72%)</title><rect x="1037.3" y="805" width="8.4" height="15.0" fill="rgb(246,161,3)" rx="2" ry="2" />
<text  x="1040.26" y="815.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.04%)</title><rect x="1187.5" y="933" width="0.4" height="15.0" fill="rgb(225,101,43)" rx="2" ry="2" />
<text  x="1190.46" y="943.5" ></text>
</g>
<g >
<title>ngtcp2_crypto_decrypt_unsecure (65 samples, 2.33%)</title><rect x="817.7" y="917" width="27.5" height="15.0" fill="rgb(209,207,35)" rx="2" ry="2" />
<text  x="820.68" y="927.5" >n..</text>
</g>
<g >
<title>udp_poll (1 samples, 0.04%)</title><rect x="1079.2" y="357" width="0.4" height="15.0" fill="rgb(222,31,48)" rx="2" ry="2" />
<text  x="1082.15" y="367.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.04%)</title><rect x="1187.5" y="949" width="0.4" height="15.0" fill="rgb(236,173,2)" rx="2" ry="2" />
<text  x="1190.46" y="959.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (1 samples, 0.04%)</title><rect x="1092.3" y="965" width="0.4" height="15.0" fill="rgb(211,21,46)" rx="2" ry="2" />
<text  x="1095.27" y="975.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="1094.8" y="245" width="0.4" height="15.0" fill="rgb(207,139,35)" rx="2" ry="2" />
<text  x="1097.80" y="255.5" ></text>
</g>
<g >
<title>std::__array_traits&lt;unsigned char, 65536ul&gt;::_S_ptr (1 samples, 0.04%)</title><rect x="1020.3" y="981" width="0.5" height="15.0" fill="rgb(218,172,36)" rx="2" ry="2" />
<text  x="1023.34" y="991.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (1 samples, 0.04%)</title><rect x="62.0" y="1013" width="0.5" height="15.0" fill="rgb(218,128,36)" rx="2" ry="2" />
<text  x="65.04" y="1023.5" ></text>
</g>
<g >
<title>ngtcp2_cid_init (18 samples, 0.65%)</title><rect x="894.7" y="933" width="7.6" height="15.0" fill="rgb(216,180,22)" rx="2" ry="2" />
<text  x="897.68" y="943.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="71.8" y="69" width="0.4" height="15.0" fill="rgb(207,199,6)" rx="2" ry="2" />
<text  x="74.77" y="79.5" ></text>
</g>
<g >
<title>dbs_irq_work (1 samples, 0.04%)</title><rect x="631.5" y="581" width="0.4" height="15.0" fill="rgb(228,96,28)" rx="2" ry="2" />
<text  x="634.52" y="591.5" ></text>
</g>
<g >
<title>flush_old_exec (1 samples, 0.04%)</title><rect x="1121.0" y="933" width="0.5" height="15.0" fill="rgb(228,174,33)" rx="2" ry="2" />
<text  x="1124.04" y="943.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.14%)</title><rect x="1094.4" y="725" width="1.7" height="15.0" fill="rgb(212,160,34)" rx="2" ry="2" />
<text  x="1097.38" y="735.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (6 samples, 0.22%)</title><rect x="1073.2" y="469" width="2.6" height="15.0" fill="rgb(254,195,19)" rx="2" ry="2" />
<text  x="1076.23" y="479.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I__ZN6h2load6Client24quic_handshake_completedEv (1 samples, 0.04%)</title><rect x="1092.3" y="981" width="0.4" height="15.0" fill="rgb(227,185,43)" rx="2" ry="2" />
<text  x="1095.27" y="991.5" ></text>
</g>
<g >
<title>__GI___libc_read (1 samples, 0.04%)</title><rect x="1132.9" y="933" width="0.4" height="15.0" fill="rgb(213,218,35)" rx="2" ry="2" />
<text  x="1135.88" y="943.5" ></text>
</g>
<g >
<title>hash (10 samples, 0.36%)</title><rect x="720.4" y="901" width="4.2" height="15.0" fill="rgb(252,215,1)" rx="2" ry="2" />
<text  x="723.37" y="911.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1132.9" y="901" width="0.4" height="15.0" fill="rgb(235,182,36)" rx="2" ry="2" />
<text  x="1135.88" y="911.5" ></text>
</g>
<g >
<title>_start (3 samples, 0.11%)</title><rect x="1135.8" y="1029" width="1.3" height="15.0" fill="rgb(236,121,12)" rx="2" ry="2" />
<text  x="1138.84" y="1039.5" ></text>
</g>
<g >
<title>call_init (1 samples, 0.04%)</title><rect x="1135.4" y="981" width="0.4" height="15.0" fill="rgb(243,100,1)" rx="2" ry="2" />
<text  x="1138.42" y="991.5" ></text>
</g>
<g >
<title>cpu_startup_entry (125 samples, 4.48%)</title><rect x="1137.1" y="997" width="52.9" height="15.0" fill="rgb(239,159,51)" rx="2" ry="2" />
<text  x="1140.11" y="1007.5" >cpu_s..</text>
</g>
<g >
<title>__libc_start_main (16 samples, 0.57%)</title><rect x="1091.8" y="1013" width="6.8" height="15.0" fill="rgb(243,74,10)" rx="2" ry="2" />
<text  x="1094.84" y="1023.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned (1 samples, 0.04%)</title><rect x="783.0" y="901" width="0.4" height="15.0" fill="rgb(206,77,46)" rx="2" ry="2" />
<text  x="785.99" y="911.5" ></text>
</g>
<g >
<title>adjust_shell_level (1 samples, 0.04%)</title><rect x="69.2" y="181" width="0.5" height="15.0" fill="rgb(224,223,4)" rx="2" ry="2" />
<text  x="72.23" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;h2load::main (1 samples, 0.04%)</title><rect x="1093.5" y="837" width="0.5" height="15.0" fill="rgb(246,183,33)" rx="2" ry="2" />
<text  x="1096.54" y="847.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="69.2" y="437" width="0.5" height="15.0" fill="rgb(218,105,39)" rx="2" ry="2" />
<text  x="72.23" y="447.5" ></text>
</g>
<g >
<title>__libc_start_main (1 samples, 0.04%)</title><rect x="1135.0" y="1013" width="0.4" height="15.0" fill="rgb(232,43,18)" rx="2" ry="2" />
<text  x="1138.00" y="1023.5" ></text>
</g>
<g >
<title>native_flush_tlb_one_user (1 samples, 0.04%)</title><rect x="1136.3" y="757" width="0.4" height="15.0" fill="rgb(207,120,45)" rx="2" ry="2" />
<text  x="1139.27" y="767.5" ></text>
</g>
<g >
<title>__sys_recvfrom (6 samples, 0.22%)</title><rect x="166.5" y="949" width="2.6" height="15.0" fill="rgb(206,48,11)" rx="2" ry="2" />
<text  x="169.54" y="959.5" ></text>
</g>
<g >
<title>_dl_protect_relro (1 samples, 0.04%)</title><rect x="1136.3" y="933" width="0.4" height="15.0" fill="rgb(234,10,24)" rx="2" ry="2" />
<text  x="1139.27" y="943.5" ></text>
</g>
<g >
<title>ngtcp2_map_find (1 samples, 0.04%)</title><rect x="1070.3" y="1013" width="0.4" height="15.0" fill="rgb(235,107,20)" rx="2" ry="2" />
<text  x="1073.27" y="1023.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="69.2" y="213" width="0.5" height="15.0" fill="rgb(237,32,11)" rx="2" ry="2" />
<text  x="72.23" y="223.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.04%)</title><rect x="1121.5" y="901" width="0.4" height="15.0" fill="rgb(222,114,11)" rx="2" ry="2" />
<text  x="1124.46" y="911.5" ></text>
</g>
<g >
<title>wait_for (1 samples, 0.04%)</title><rect x="1096.9" y="517" width="0.4" height="15.0" fill="rgb(211,198,33)" rx="2" ry="2" />
<text  x="1099.92" y="527.5" ></text>
</g>
<g >
<title>copy_user_generic_string (1 samples, 0.04%)</title><rect x="1046.6" y="853" width="0.4" height="15.0" fill="rgb(219,126,20)" rx="2" ry="2" />
<text  x="1049.57" y="863.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.04%)</title><rect x="1121.5" y="917" width="0.4" height="15.0" fill="rgb(219,227,38)" rx="2" ry="2" />
<text  x="1124.46" y="927.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.04%)</title><rect x="1093.5" y="869" width="0.5" height="15.0" fill="rgb(210,63,18)" rx="2" ry="2" />
<text  x="1096.54" y="879.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (3 samples, 0.11%)</title><rect x="1135.8" y="981" width="1.3" height="15.0" fill="rgb(247,66,17)" rx="2" ry="2" />
<text  x="1138.84" y="991.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (1 samples, 0.04%)</title><rect x="1135.0" y="645" width="0.4" height="15.0" fill="rgb(226,48,4)" rx="2" ry="2" />
<text  x="1138.00" y="655.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (15 samples, 0.54%)</title><rect x="119.6" y="981" width="6.3" height="15.0" fill="rgb(229,83,29)" rx="2" ry="2" />
<text  x="122.58" y="991.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (2 samples, 0.07%)</title><rect x="1042.8" y="613" width="0.8" height="15.0" fill="rgb(246,174,35)" rx="2" ry="2" />
<text  x="1045.76" y="623.5" ></text>
</g>
<g >
<title>inode_permission (1 samples, 0.04%)</title><rect x="1092.3" y="757" width="0.4" height="15.0" fill="rgb(242,186,32)" rx="2" ry="2" />
<text  x="1095.27" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;h2load::main (1 samples, 0.04%)</title><rect x="1093.5" y="821" width="0.5" height="15.0" fill="rgb(206,76,23)" rx="2" ry="2" />
<text  x="1096.54" y="831.5" ></text>
</g>
<g >
<title>execute_command_internal (2 samples, 0.07%)</title><rect x="1095.2" y="501" width="0.9" height="15.0" fill="rgb(211,178,0)" rx="2" ry="2" />
<text  x="1098.23" y="511.5" ></text>
</g>
<g >
<title>kmem_cache_free (22 samples, 0.79%)</title><rect x="375.6" y="821" width="9.3" height="15.0" fill="rgb(236,223,21)" rx="2" ry="2" />
<text  x="378.55" y="831.5" ></text>
</g>
<g >
<title>h2load::main (46 samples, 1.65%)</title><rect x="1071.1" y="581" width="19.5" height="15.0" fill="rgb(205,171,6)" rx="2" ry="2" />
<text  x="1074.11" y="591.5" ></text>
</g>
<g >
<title>__libc_recvfrom (1 samples, 0.04%)</title><rect x="68.8" y="1013" width="0.4" height="15.0" fill="rgb(251,86,16)" rx="2" ry="2" />
<text  x="71.81" y="1023.5" ></text>
</g>
<g >
<title>ngtcp2_rtb_recv_ack (1 samples, 0.04%)</title><rect x="519.0" y="933" width="0.4" height="15.0" fill="rgb(228,166,26)" rx="2" ry="2" />
<text  x="521.98" y="943.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="71.8" y="357" width="0.4" height="15.0" fill="rgb(236,25,41)" rx="2" ry="2" />
<text  x="74.77" y="367.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash (7 samples, 0.25%)</title><rect x="1034.3" y="789" width="3.0" height="15.0" fill="rgb(231,200,33)" rx="2" ry="2" />
<text  x="1037.30" y="799.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.22%)</title><rect x="1073.2" y="485" width="2.6" height="15.0" fill="rgb(239,93,21)" rx="2" ry="2" />
<text  x="1076.23" y="495.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (46 samples, 1.65%)</title><rect x="1071.1" y="725" width="19.5" height="15.0" fill="rgb(231,35,6)" rx="2" ry="2" />
<text  x="1074.11" y="735.5" ></text>
</g>
<g >
<title>CRYPTO_THREAD_run_once (1 samples, 0.04%)</title><rect x="1093.1" y="917" width="0.4" height="15.0" fill="rgb(245,135,23)" rx="2" ry="2" />
<text  x="1096.11" y="927.5" ></text>
</g>
<g >
<title>conn_call_recv_crypto_data (1 samples, 0.04%)</title><rect x="450.4" y="901" width="0.5" height="15.0" fill="rgb(211,13,44)" rx="2" ry="2" />
<text  x="453.44" y="911.5" ></text>
</g>
<g >
<title>OPENSSL_init_crypto (1 samples, 0.04%)</title><rect x="1093.1" y="853" width="0.4" height="15.0" fill="rgb(238,153,7)" rx="2" ry="2" />
<text  x="1096.11" y="863.5" ></text>
</g>
<g >
<title>__do_sys_wait4 (1 samples, 0.04%)</title><rect x="1094.0" y="789" width="0.4" height="15.0" fill="rgb(221,151,43)" rx="2" ry="2" />
<text  x="1096.96" y="799.5" ></text>
</g>
<g >
<title>ngtcp2_log_tx_fr (1 samples, 0.04%)</title><rect x="1055.9" y="917" width="0.4" height="15.0" fill="rgb(241,78,25)" rx="2" ry="2" />
<text  x="1058.88" y="927.5" ></text>
</g>
<g >
<title>conn_recv_stream (503 samples, 18.04%)</title><rect x="519.4" y="949" width="212.8" height="15.0" fill="rgb(218,136,18)" rx="2" ry="2" />
<text  x="522.40" y="959.5" >conn_recv_stream</text>
</g>
<g >
<title>delayed_put_pid (1 samples, 0.04%)</title><rect x="1137.1" y="821" width="0.4" height="15.0" fill="rgb(214,68,11)" rx="2" ry="2" />
<text  x="1140.11" y="831.5" ></text>
</g>
<g >
<title>__GI_execve (1 samples, 0.04%)</title><rect x="1096.5" y="485" width="0.4" height="15.0" fill="rgb(238,222,6)" rx="2" ry="2" />
<text  x="1099.50" y="495.5" ></text>
</g>
<g >
<title>ngtcp2_log_rx_fr (7 samples, 0.25%)</title><rect x="874.8" y="949" width="3.0" height="15.0" fill="rgb(246,14,21)" rx="2" ry="2" />
<text  x="877.80" y="959.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned char, 65536ul&gt;::data (8 samples, 0.29%)</title><rect x="1017.4" y="997" width="3.4" height="15.0" fill="rgb(206,213,11)" rx="2" ry="2" />
<text  x="1020.38" y="1007.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="1137.1" y="869" width="0.4" height="15.0" fill="rgb(218,68,36)" rx="2" ry="2" />
<text  x="1140.11" y="879.5" ></text>
</g>
<g >
<title>free_pages.part.0 (1 samples, 0.04%)</title><rect x="1094.0" y="645" width="0.4" height="15.0" fill="rgb(219,72,41)" rx="2" ry="2" />
<text  x="1096.96" y="655.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="1121.0" y="1013" width="0.9" height="15.0" fill="rgb(213,64,45)" rx="2" ry="2" />
<text  x="1124.04" y="1023.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="1096.1" y="661" width="0.4" height="15.0" fill="rgb(217,145,21)" rx="2" ry="2" />
<text  x="1099.07" y="671.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;h2load::main (46 samples, 1.65%)</title><rect x="1071.1" y="629" width="19.5" height="15.0" fill="rgb(224,175,11)" rx="2" ry="2" />
<text  x="1074.11" y="639.5" ></text>
</g>
<g >
<title>kernfs_path_from_node (1 samples, 0.04%)</title><rect x="1132.9" y="757" width="0.4" height="15.0" fill="rgb(210,139,26)" rx="2" ry="2" />
<text  x="1135.88" y="767.5" ></text>
</g>
<g >
<title>ngtcp2_ksl_range_compar (2 samples, 0.07%)</title><rect x="956.0" y="885" width="0.9" height="15.0" fill="rgb(232,155,13)" rx="2" ry="2" />
<text  x="959.03" y="895.5" ></text>
</g>
<g >
<title>ev_invoke_pending (8 samples, 0.29%)</title><rect x="1087.2" y="533" width="3.4" height="15.0" fill="rgb(223,132,51)" rx="2" ry="2" />
<text  x="1090.19" y="543.5" ></text>
</g>
<g >
<title>ngtcp2_log_info (3 samples, 0.11%)</title><rect x="52.3" y="1013" width="1.3" height="15.0" fill="rgb(253,143,23)" rx="2" ry="2" />
<text  x="55.31" y="1023.5" ></text>
</g>
<g >
<title>sch_direct_xmit (6 samples, 0.22%)</title><rect x="1042.8" y="661" width="2.5" height="15.0" fill="rgb(243,8,39)" rx="2" ry="2" />
<text  x="1045.76" y="671.5" ></text>
</g>
<g >
<title>[libngtcp2_crypto_openssl.so.0.0.0] (7 samples, 0.25%)</title><rect x="791.0" y="917" width="3.0" height="15.0" fill="rgb(206,27,33)" rx="2" ry="2" />
<text  x="794.03" y="927.5" ></text>
</g>
<g >
<title>conn_ensure_decrypt_hp_buffer (1 samples, 0.04%)</title><rect x="517.7" y="949" width="0.4" height="15.0" fill="rgb(207,148,14)" rx="2" ry="2" />
<text  x="520.71" y="959.5" ></text>
</g>
<g >
<title>ngtcp2_ksl_len (1 samples, 0.04%)</title><rect x="861.3" y="917" width="0.4" height="15.0" fill="rgb(211,3,35)" rx="2" ry="2" />
<text  x="864.26" y="927.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.04%)</title><rect x="816.8" y="901" width="0.5" height="15.0" fill="rgb(241,85,6)" rx="2" ry="2" />
<text  x="819.83" y="911.5" ></text>
</g>
<g >
<title>move_addr_to_user (26 samples, 0.93%)</title><rect x="182.2" y="917" width="11.0" height="15.0" fill="rgb(234,172,14)" rx="2" ry="2" />
<text  x="185.20" y="927.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (1 samples, 0.04%)</title><rect x="740.3" y="853" width="0.4" height="15.0" fill="rgb(221,61,28)" rx="2" ry="2" />
<text  x="743.25" y="863.5" ></text>
</g>
<g >
<title>call_init (1 samples, 0.04%)</title><rect x="1091.4" y="981" width="0.4" height="15.0" fill="rgb(229,223,39)" rx="2" ry="2" />
<text  x="1094.42" y="991.5" ></text>
</g>
<g >
<title>udp_poll (1 samples, 0.04%)</title><rect x="1079.6" y="373" width="0.4" height="15.0" fill="rgb(248,211,38)" rx="2" ry="2" />
<text  x="1082.57" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (1 samples, 0.04%)</title><rect x="1121.5" y="997" width="0.4" height="15.0" fill="rgb(218,209,24)" rx="2" ry="2" />
<text  x="1124.46" y="1007.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.04%)</title><rect x="1135.4" y="805" width="0.4" height="15.0" fill="rgb(226,35,19)" rx="2" ry="2" />
<text  x="1138.42" y="815.5" ></text>
</g>
<g >
<title>ip_local_out (18 samples, 0.65%)</title><rect x="1037.7" y="773" width="7.6" height="15.0" fill="rgb(210,8,30)" rx="2" ry="2" />
<text  x="1040.69" y="783.5" ></text>
</g>
<g >
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="399.2" y="885" width="0.5" height="15.0" fill="rgb(224,131,33)" rx="2" ry="2" />
<text  x="402.24" y="895.5" ></text>
</g>
<g >
<title>__ksize (1 samples, 0.04%)</title><rect x="1033.0" y="693" width="0.5" height="15.0" fill="rgb(247,124,29)" rx="2" ry="2" />
<text  x="1036.03" y="703.5" ></text>
</g>
<g >
<title>ngtcp2_pkt_decode_stream_frame (1 samples, 0.04%)</title><rect x="55.3" y="1013" width="0.4" height="15.0" fill="rgb(240,157,21)" rx="2" ry="2" />
<text  x="58.27" y="1023.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="740.3" y="933" width="0.4" height="15.0" fill="rgb(231,77,18)" rx="2" ry="2" />
<text  x="743.25" y="943.5" ></text>
</g>
<g >
<title>_copy_to_iter (195 samples, 6.99%)</title><rect x="275.7" y="869" width="82.5" height="15.0" fill="rgb(219,119,23)" rx="2" ry="2" />
<text  x="278.70" y="879.5" >_copy_to_..</text>
</g>
<g >
<title>read_tsc (2 samples, 0.07%)</title><rect x="1085.1" y="405" width="0.8" height="15.0" fill="rgb(219,146,18)" rx="2" ry="2" />
<text  x="1088.07" y="415.5" ></text>
</g>
<g >
<title>h2load::Client::signal_write (2 samples, 0.07%)</title><rect x="1089.3" y="501" width="0.9" height="15.0" fill="rgb(211,41,0)" rx="2" ry="2" />
<text  x="1092.30" y="511.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (3 samples, 0.11%)</title><rect x="1182.4" y="933" width="1.3" height="15.0" fill="rgb(215,226,21)" rx="2" ry="2" />
<text  x="1185.38" y="943.5" ></text>
</g>
<g >
<title>memset (1 samples, 0.04%)</title><rect x="1058.4" y="901" width="0.4" height="15.0" fill="rgb(206,91,7)" rx="2" ry="2" />
<text  x="1061.42" y="911.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="1095.2" y="245" width="0.5" height="15.0" fill="rgb(221,168,9)" rx="2" ry="2" />
<text  x="1098.23" y="255.5" ></text>
</g>
<g >
<title>udp_rmem_release (9 samples, 0.32%)</title><rect x="267.2" y="821" width="3.8" height="15.0" fill="rgb(212,49,36)" rx="2" ry="2" />
<text  x="270.24" y="831.5" ></text>
</g>
<g >
<title>ngtcp2_ksl_lower_bound_compar (5 samples, 0.18%)</title><rect x="950.1" y="917" width="2.1" height="15.0" fill="rgb(242,94,40)" rx="2" ry="2" />
<text  x="953.11" y="927.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_set_result (46 samples, 1.65%)</title><rect x="1071.1" y="885" width="19.5" height="15.0" fill="rgb(245,188,6)" rx="2" ry="2" />
<text  x="1074.11" y="895.5" ></text>
</g>
<g >
<title>native_write_msr (5 samples, 0.18%)</title><rect x="1138.0" y="741" width="2.1" height="15.0" fill="rgb(211,102,38)" rx="2" ry="2" />
<text  x="1140.96" y="751.5" ></text>
</g>
<g >
<title>mprotect_fixup (1 samples, 0.04%)</title><rect x="1099.0" y="837" width="0.5" height="15.0" fill="rgb(206,58,45)" rx="2" ry="2" />
<text  x="1102.04" y="847.5" ></text>
</g>
<g >
<title>ngtcp2_path_eq (27 samples, 0.97%)</title><rect x="1006.0" y="981" width="11.4" height="15.0" fill="rgb(221,184,2)" rx="2" ry="2" />
<text  x="1008.96" y="991.5" ></text>
</g>
<g >
<title>__mprotect (1 samples, 0.04%)</title><rect x="1133.7" y="917" width="0.5" height="15.0" fill="rgb(230,31,12)" rx="2" ry="2" />
<text  x="1136.73" y="927.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="1091.4" y="885" width="0.4" height="15.0" fill="rgb(222,75,7)" rx="2" ry="2" />
<text  x="1094.42" y="895.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;h2load::Session, std::default_delete&lt;h2load::Session&gt; &gt;::_M_ptr (56 samples, 2.01%)</title><rect x="684.0" y="869" width="23.7" height="15.0" fill="rgb(239,196,4)" rx="2" ry="2" />
<text  x="686.98" y="879.5" >s..</text>
</g>
<g >
<title>ngtcp2_ksl_it_get (3 samples, 0.11%)</title><rect x="860.0" y="917" width="1.3" height="15.0" fill="rgb(247,20,17)" rx="2" ry="2" />
<text  x="862.99" y="927.5" ></text>
</g>
<g >
<title>_dl_runtime_resolve_fxsave (1 samples, 0.04%)</title><rect x="1093.5" y="725" width="0.5" height="15.0" fill="rgb(235,114,36)" rx="2" ry="2" />
<text  x="1096.54" y="735.5" ></text>
</g>
<g >
<title>[anon] (133 samples, 4.77%)</title><rect x="10.0" y="1029" width="56.3" height="15.0" fill="rgb(227,8,14)" rx="2" ry="2" />
<text  x="13.00" y="1039.5" >[anon]</text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="1098.6" y="805" width="0.4" height="15.0" fill="rgb(240,88,36)" rx="2" ry="2" />
<text  x="1101.61" y="815.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (107 samples, 3.84%)</title><rect x="1137.1" y="933" width="45.3" height="15.0" fill="rgb(217,192,0)" rx="2" ry="2" />
<text  x="1140.11" y="943.5" >cpui..</text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="1094.8" y="405" width="0.4" height="15.0" fill="rgb(240,23,37)" rx="2" ry="2" />
<text  x="1097.80" y="415.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;h2load::main (46 samples, 1.65%)</title><rect x="1071.1" y="901" width="19.5" height="15.0" fill="rgb(226,129,52)" rx="2" ry="2" />
<text  x="1074.11" y="911.5" ></text>
</g>
<g >
<title>ngtcp2_range_intersect (12 samples, 0.43%)</title><rect x="989.5" y="917" width="5.0" height="15.0" fill="rgb(250,18,0)" rx="2" ry="2" />
<text  x="992.46" y="927.5" ></text>
</g>
<g >
<title>ngtcp2_conn_read_pkt (1,284 samples, 46.04%)</title><rect x="474.1" y="997" width="543.3" height="15.0" fill="rgb(221,134,15)" rx="2" ry="2" />
<text  x="477.13" y="1007.5" >ngtcp2_conn_read_pkt</text>
</g>
<g >
<title>calloc (2 samples, 0.07%)</title><rect x="1060.1" y="933" width="0.9" height="15.0" fill="rgb(209,127,2)" rx="2" ry="2" />
<text  x="1063.11" y="943.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.14%)</title><rect x="1094.4" y="629" width="1.7" height="15.0" fill="rgb(250,3,5)" rx="2" ry="2" />
<text  x="1097.38" y="639.5" ></text>
</g>
<g >
<title>mark_page_accessed (1 samples, 0.04%)</title><rect x="1121.5" y="869" width="0.4" height="15.0" fill="rgb(244,202,3)" rx="2" ry="2" />
<text  x="1124.46" y="879.5" ></text>
</g>
<g >
<title>fput_many (1 samples, 0.04%)</title><rect x="1047.8" y="885" width="0.5" height="15.0" fill="rgb(252,141,54)" rx="2" ry="2" />
<text  x="1050.84" y="895.5" ></text>
</g>
<g >
<title>move_addr_to_kernel.part.0 (1 samples, 0.04%)</title><rect x="1047.0" y="853" width="0.4" height="15.0" fill="rgb(209,227,33)" rx="2" ry="2" />
<text  x="1050.00" y="863.5" ></text>
</g>
<g >
<title>expand_string_assignment (2 samples, 0.07%)</title><rect x="1096.5" y="661" width="0.8" height="15.0" fill="rgb(211,88,29)" rx="2" ry="2" />
<text  x="1099.50" y="671.5" ></text>
</g>
<g >
<title>conn_restart_timer_on_read (1 samples, 0.04%)</title><rect x="732.2" y="949" width="0.4" height="15.0" fill="rgb(231,11,23)" rx="2" ry="2" />
<text  x="735.22" y="959.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.04%)</title><rect x="1134.2" y="965" width="0.4" height="15.0" fill="rgb(245,44,27)" rx="2" ry="2" />
<text  x="1137.15" y="975.5" ></text>
</g>
<g >
<title>__pthread_once_slow (1 samples, 0.04%)</title><rect x="1093.1" y="901" width="0.4" height="15.0" fill="rgb(233,69,28)" rx="2" ry="2" />
<text  x="1096.11" y="911.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (2 samples, 0.07%)</title><rect x="1074.9" y="437" width="0.9" height="15.0" fill="rgb(222,58,10)" rx="2" ry="2" />
<text  x="1077.92" y="447.5" ></text>
</g>
<g >
<title>__bswap_64 (1 samples, 0.04%)</title><rect x="724.2" y="885" width="0.4" height="15.0" fill="rgb(236,65,24)" rx="2" ry="2" />
<text  x="727.18" y="895.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.0 (2 samples, 0.07%)</title><rect x="1079.2" y="421" width="0.8" height="15.0" fill="rgb(252,179,21)" rx="2" ry="2" />
<text  x="1082.15" y="431.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (20 samples, 0.72%)</title><rect x="625.2" y="725" width="8.4" height="15.0" fill="rgb(241,34,30)" rx="2" ry="2" />
<text  x="628.17" y="735.5" ></text>
</g>
<g >
<title>h2load::Client::quic_recv_stream_data (412 samples, 14.77%)</title><rect x="533.4" y="901" width="174.3" height="15.0" fill="rgb(247,185,1)" rx="2" ry="2" />
<text  x="536.36" y="911.5" >h2load::Client::quic_r..</text>
</g>
<g >
<title>do_syscall_64 (671 samples, 24.06%)</title><rect x="153.9" y="965" width="283.8" height="15.0" fill="rgb(252,173,30)" rx="2" ry="2" />
<text  x="156.85" y="975.5" >do_syscall_64</text>
</g>
<g >
<title>import_iovec (1 samples, 0.04%)</title><rect x="1047.4" y="869" width="0.4" height="15.0" fill="rgb(248,197,24)" rx="2" ry="2" />
<text  x="1050.42" y="879.5" ></text>
</g>
<g >
<title>greater (1 samples, 0.04%)</title><rect x="874.0" y="885" width="0.4" height="15.0" fill="rgb(236,132,38)" rx="2" ry="2" />
<text  x="876.95" y="895.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="256.2" y="869" width="0.5" height="15.0" fill="rgb(218,159,49)" rx="2" ry="2" />
<text  x="259.24" y="879.5" ></text>
</g>
<g >
<title>[bash] (3 samples, 0.11%)</title><rect x="1096.1" y="837" width="1.2" height="15.0" fill="rgb(252,114,34)" rx="2" ry="2" />
<text  x="1099.07" y="847.5" ></text>
</g>
<g >
<title>sockaddr_eq (1 samples, 0.04%)</title><rect x="1017.0" y="949" width="0.4" height="15.0" fill="rgb(227,163,34)" rx="2" ry="2" />
<text  x="1019.96" y="959.5" ></text>
</g>
<g >
<title>__fdget (2 samples, 0.07%)</title><rect x="1077.0" y="437" width="0.9" height="15.0" fill="rgb(209,126,12)" rx="2" ry="2" />
<text  x="1080.03" y="447.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (6 samples, 0.22%)</title><rect x="1137.5" y="885" width="2.6" height="15.0" fill="rgb(242,205,25)" rx="2" ry="2" />
<text  x="1140.54" y="895.5" ></text>
</g>
<g >
<title>conn_verify_dcid (105 samples, 3.76%)</title><rect x="732.6" y="949" width="44.5" height="15.0" fill="rgb(216,0,53)" rx="2" ry="2" />
<text  x="735.64" y="959.5" >conn..</text>
</g>
<g >
<title>getrn (1 samples, 0.04%)</title><rect x="1093.1" y="629" width="0.4" height="15.0" fill="rgb(244,189,2)" rx="2" ry="2" />
<text  x="1096.11" y="639.5" ></text>
</g>
<g >
<title>conn_writev_stream (2 samples, 0.07%)</title><rect x="1048.3" y="965" width="0.8" height="15.0" fill="rgb(214,221,38)" rx="2" ry="2" />
<text  x="1051.26" y="975.5" ></text>
</g>
<g >
<title>h2load::main (3 samples, 0.11%)</title><rect x="1092.7" y="981" width="1.3" height="15.0" fill="rgb(213,215,54)" rx="2" ry="2" />
<text  x="1095.69" y="991.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (1 samples, 0.04%)</title><rect x="1182.4" y="917" width="0.4" height="15.0" fill="rgb(240,198,9)" rx="2" ry="2" />
<text  x="1185.38" y="927.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (2 samples, 0.07%)</title><rect x="1133.3" y="981" width="0.9" height="15.0" fill="rgb(207,105,53)" rx="2" ry="2" />
<text  x="1136.31" y="991.5" ></text>
</g>
<g >
<title>[bash] (7 samples, 0.25%)</title><rect x="1094.4" y="901" width="2.9" height="15.0" fill="rgb(250,207,3)" rx="2" ry="2" />
<text  x="1097.38" y="911.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;h2load::main (46 samples, 1.65%)</title><rect x="1071.1" y="933" width="19.5" height="15.0" fill="rgb(224,139,20)" rx="2" ry="2" />
<text  x="1074.11" y="943.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (1 samples, 0.04%)</title><rect x="1076.6" y="485" width="0.4" height="15.0" fill="rgb(251,213,24)" rx="2" ry="2" />
<text  x="1079.61" y="495.5" ></text>
</g>
<g >
<title>_dl_check_all_versions (1 samples, 0.04%)</title><rect x="1135.8" y="917" width="0.5" height="15.0" fill="rgb(209,215,53)" rx="2" ry="2" />
<text  x="1138.84" y="927.5" ></text>
</g>
<g >
<title>expand_word_leave_quoted (1 samples, 0.04%)</title><rect x="1097.3" y="901" width="0.5" height="15.0" fill="rgb(231,129,4)" rx="2" ry="2" />
<text  x="1100.34" y="911.5" ></text>
</g>
<g >
<title>ngtcp2_conn_find_stream (36 samples, 1.29%)</title><rect x="709.4" y="933" width="15.2" height="15.0" fill="rgb(254,45,54)" rx="2" ry="2" />
<text  x="712.37" y="943.5" ></text>
</g>
<g >
<title>ngtcp2_log_info (2 samples, 0.07%)</title><rect x="995.0" y="965" width="0.8" height="15.0" fill="rgb(215,69,12)" rx="2" ry="2" />
<text  x="997.96" y="975.5" ></text>
</g>
<g >
<title>ngtcp2_ksl_lower_bound_compar (5 samples, 0.18%)</title><rect x="1067.3" y="1013" width="2.1" height="15.0" fill="rgb(254,57,20)" rx="2" ry="2" />
<text  x="1070.30" y="1023.5" ></text>
</g>
<g >
<title>[bash] (2 samples, 0.07%)</title><rect x="1095.2" y="453" width="0.9" height="15.0" fill="rgb(211,159,24)" rx="2" ry="2" />
<text  x="1098.23" y="463.5" ></text>
</g>
<g >
<title>event_function (6 samples, 0.22%)</title><rect x="1137.5" y="837" width="2.6" height="15.0" fill="rgb(250,210,35)" rx="2" ry="2" />
<text  x="1140.54" y="847.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="71.8" y="293" width="0.4" height="15.0" fill="rgb(248,92,19)" rx="2" ry="2" />
<text  x="74.77" y="303.5" ></text>
</g>
<g >
<title>h2load::(anonymous namespace)::recorded (76 samples, 2.72%)</title><rect x="606.6" y="757" width="32.1" height="15.0" fill="rgb(252,118,39)" rx="2" ry="2" />
<text  x="609.56" y="767.5" >h2..</text>
</g>
<g >
<title>_local_bh_enable (1 samples, 0.04%)</title><rect x="1188.7" y="885" width="0.5" height="15.0" fill="rgb(237,188,42)" rx="2" ry="2" />
<text  x="1191.73" y="895.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1096.5" y="453" width="0.4" height="15.0" fill="rgb(252,127,3)" rx="2" ry="2" />
<text  x="1099.50" y="463.5" ></text>
</g>
<g >
<title>dev_queue_xmit (10 samples, 0.36%)</title><rect x="1041.1" y="693" width="4.2" height="15.0" fill="rgb(233,185,22)" rx="2" ry="2" />
<text  x="1044.07" y="703.5" ></text>
</g>
<g >
<title>search_binary_handler (1 samples, 0.04%)</title><rect x="1121.0" y="965" width="0.5" height="15.0" fill="rgb(208,32,18)" rx="2" ry="2" />
<text  x="1124.04" y="975.5" ></text>
</g>
<g >
<title>load_elf_binary (1 samples, 0.04%)</title><rect x="1121.0" y="949" width="0.5" height="15.0" fill="rgb(245,96,52)" rx="2" ry="2" />
<text  x="1124.04" y="959.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="71.8" y="661" width="0.4" height="15.0" fill="rgb(231,165,52)" rx="2" ry="2" />
<text  x="74.77" y="671.5" ></text>
</g>
<g >
<title>__GI___clone (46 samples, 1.65%)</title><rect x="1071.1" y="1029" width="19.5" height="15.0" fill="rgb(226,211,43)" rx="2" ry="2" />
<text  x="1074.11" y="1039.5" ></text>
</g>
<g >
<title>ngtcp2_map_find (23 samples, 0.82%)</title><rect x="648.0" y="725" width="9.8" height="15.0" fill="rgb(234,32,9)" rx="2" ry="2" />
<text  x="651.02" y="735.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (1 samples, 0.04%)</title><rect x="1187.0" y="933" width="0.5" height="15.0" fill="rgb(223,109,33)" rx="2" ry="2" />
<text  x="1190.04" y="943.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (1 samples, 0.04%)</title><rect x="1183.2" y="917" width="0.5" height="15.0" fill="rgb(227,134,41)" rx="2" ry="2" />
<text  x="1186.23" y="927.5" ></text>
</g>
<g >
<title>elf_machine_rela (1 samples, 0.04%)</title><rect x="1135.0" y="661" width="0.4" height="15.0" fill="rgb(214,29,20)" rx="2" ry="2" />
<text  x="1138.00" y="671.5" ></text>
</g>
<g >
<title>ip_generic_getfrag (3 samples, 0.11%)</title><rect x="1029.2" y="773" width="1.3" height="15.0" fill="rgb(236,51,40)" rx="2" ry="2" />
<text  x="1032.23" y="783.5" ></text>
</g>
<g >
<title>__GI___sbrk (1 samples, 0.04%)</title><rect x="71.8" y="101" width="0.4" height="15.0" fill="rgb(219,130,3)" rx="2" ry="2" />
<text  x="74.77" y="111.5" ></text>
</g>
<g >
<title>inet_recvmsg (472 samples, 16.92%)</title><rect x="199.5" y="901" width="199.7" height="15.0" fill="rgb(220,226,6)" rx="2" ry="2" />
<text  x="202.54" y="911.5" >inet_recvmsg</text>
</g>
<g >
<title>ip_finish_output2 (11 samples, 0.39%)</title><rect x="1040.6" y="709" width="4.7" height="15.0" fill="rgb(215,167,49)" rx="2" ry="2" />
<text  x="1043.65" y="719.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.07%)</title><rect x="1039.4" y="725" width="0.8" height="15.0" fill="rgb(219,66,19)" rx="2" ry="2" />
<text  x="1042.38" y="735.5" ></text>
</g>
<g >
<title>h2load::(anonymous namespace)::recv_stream_data (3 samples, 0.11%)</title><rect x="1121.9" y="1029" width="1.3" height="15.0" fill="rgb(217,154,8)" rx="2" ry="2" />
<text  x="1124.88" y="1039.5" ></text>
</g>
<g >
<title>udp_sendmsg (42 samples, 1.51%)</title><rect x="1028.0" y="821" width="17.7" height="15.0" fill="rgb(247,88,3)" rx="2" ry="2" />
<text  x="1030.96" y="831.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="1091.4" y="869" width="0.4" height="15.0" fill="rgb(241,91,2)" rx="2" ry="2" />
<text  x="1094.42" y="879.5" ></text>
</g>
<g >
<title>conn_prepare_key_update (12 samples, 0.43%)</title><rect x="10.4" y="1013" width="5.1" height="15.0" fill="rgb(236,75,25)" rx="2" ry="2" />
<text  x="13.42" y="1023.5" ></text>
</g>
<g >
<title>[bash] (2 samples, 0.07%)</title><rect x="1095.2" y="469" width="0.9" height="15.0" fill="rgb(251,107,46)" rx="2" ry="2" />
<text  x="1098.23" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.04%)</title><rect x="68.4" y="997" width="0.4" height="15.0" fill="rgb(226,69,12)" rx="2" ry="2" />
<text  x="71.39" y="1007.5" ></text>
</g>
<g >
<title>ngtcp2_conn_writev_stream (26 samples, 0.93%)</title><rect x="1050.0" y="997" width="11.0" height="15.0" fill="rgb(208,121,28)" rx="2" ry="2" />
<text  x="1052.96" y="1007.5" ></text>
</g>
<g >
<title>std::thread::thread&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;h2load::main (1 samples, 0.04%)</title><rect x="1093.5" y="789" width="0.5" height="15.0" fill="rgb(209,59,5)" rx="2" ry="2" />
<text  x="1096.54" y="799.5" ></text>
</g>
<g >
<title>ngtcp2_conn_find_stream (12 samples, 0.43%)</title><rect x="672.6" y="869" width="5.0" height="15.0" fill="rgb(224,185,38)" rx="2" ry="2" />
<text  x="675.56" y="879.5" ></text>
</g>
<g >
<title>ERR_load_strings_const (1 samples, 0.04%)</title><rect x="1093.1" y="661" width="0.4" height="15.0" fill="rgb(246,181,46)" rx="2" ry="2" />
<text  x="1096.11" y="671.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.04%)</title><rect x="1121.5" y="885" width="0.4" height="15.0" fill="rgb(227,60,1)" rx="2" ry="2" />
<text  x="1124.46" y="895.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="71.8" y="901" width="0.4" height="15.0" fill="rgb(206,23,21)" rx="2" ry="2" />
<text  x="74.77" y="911.5" ></text>
</g>
<g >
<title>perf_iterate_sb (1 samples, 0.04%)</title><rect x="1099.0" y="805" width="0.5" height="15.0" fill="rgb(217,33,34)" rx="2" ry="2" />
<text  x="1102.04" y="815.5" ></text>
</g>
<g >
<title>kmalloc_slab (2 samples, 0.07%)</title><rect x="1032.2" y="677" width="0.8" height="15.0" fill="rgb(222,158,40)" rx="2" ry="2" />
<text  x="1035.19" y="687.5" ></text>
</g>
<g >
<title>EVP_add_cipher (1 samples, 0.04%)</title><rect x="1092.7" y="885" width="0.4" height="15.0" fill="rgb(222,171,37)" rx="2" ry="2" />
<text  x="1095.69" y="895.5" ></text>
</g>
<g >
<title>mprotect_fixup (1 samples, 0.04%)</title><rect x="1136.3" y="837" width="0.4" height="15.0" fill="rgb(210,182,52)" rx="2" ry="2" />
<text  x="1139.27" y="847.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (1 samples, 0.04%)</title><rect x="1045.7" y="837" width="0.4" height="15.0" fill="rgb(237,116,46)" rx="2" ry="2" />
<text  x="1048.73" y="847.5" ></text>
</g>
<g >
<title>conn_extend_max_stream_offset (2 samples, 0.07%)</title><rect x="646.8" y="741" width="0.8" height="15.0" fill="rgb(229,82,1)" rx="2" ry="2" />
<text  x="649.75" y="751.5" ></text>
</g>
<g >
<title>ssl3_take_mac (1 samples, 0.04%)</title><rect x="450.4" y="805" width="0.5" height="15.0" fill="rgb(233,88,20)" rx="2" ry="2" />
<text  x="453.44" y="815.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.04%)</title><rect x="1084.2" y="373" width="0.5" height="15.0" fill="rgb(242,26,25)" rx="2" ry="2" />
<text  x="1087.23" y="383.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="69.2" y="741" width="0.5" height="15.0" fill="rgb(237,213,12)" rx="2" ry="2" />
<text  x="72.23" y="751.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned (1 samples, 0.04%)</title><rect x="949.7" y="917" width="0.4" height="15.0" fill="rgb(251,209,17)" rx="2" ry="2" />
<text  x="952.68" y="927.5" ></text>
</g>
<g >
<title>ngtcp2_pkt_decode_stream_frame (25 samples, 0.90%)</title><rect x="917.1" y="949" width="10.6" height="15.0" fill="rgb(252,103,46)" rx="2" ry="2" />
<text  x="920.11" y="959.5" ></text>
</g>
<g >
<title>ngtcp2_qlog_pkt_received_start (14 samples, 0.50%)</title><rect x="931.5" y="949" width="5.9" height="15.0" fill="rgb(210,73,19)" rx="2" ry="2" />
<text  x="934.49" y="959.5" ></text>
</g>
<g >
<title>__virt_addr_valid (4 samples, 0.14%)</title><rect x="274.0" y="869" width="1.7" height="15.0" fill="rgb(218,149,23)" rx="2" ry="2" />
<text  x="277.01" y="879.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="71.8" y="949" width="0.4" height="15.0" fill="rgb(241,9,54)" rx="2" ry="2" />
<text  x="74.77" y="959.5" ></text>
</g>
<g >
<title>execute_command_internal (2 samples, 0.07%)</title><rect x="1094.4" y="437" width="0.8" height="15.0" fill="rgb(245,146,34)" rx="2" ry="2" />
<text  x="1097.38" y="447.5" ></text>
</g>
<g >
<title>init_nss_interface (1 samples, 0.04%)</title><rect x="1135.0" y="885" width="0.4" height="15.0" fill="rgb(232,184,22)" rx="2" ry="2" />
<text  x="1138.00" y="895.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.04%)</title><rect x="1091.4" y="837" width="0.4" height="15.0" fill="rgb(216,133,41)" rx="2" ry="2" />
<text  x="1094.42" y="847.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="740.3" y="917" width="0.4" height="15.0" fill="rgb(213,187,47)" rx="2" ry="2" />
<text  x="743.25" y="927.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="71.8" y="917" width="0.4" height="15.0" fill="rgb(215,199,21)" rx="2" ry="2" />
<text  x="74.77" y="927.5" ></text>
</g>
<g >
<title>ngtcp2_crypto_hp_mask_unsecure (16 samples, 0.57%)</title><rect x="794.0" y="917" width="6.8" height="15.0" fill="rgb(210,213,1)" rx="2" ry="2" />
<text  x="796.99" y="927.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.04%)</title><rect x="1099.9" y="885" width="0.4" height="15.0" fill="rgb(233,30,4)" rx="2" ry="2" />
<text  x="1102.88" y="895.5" ></text>
</g>
<g >
<title>mprotect_fixup (1 samples, 0.04%)</title><rect x="1133.7" y="837" width="0.5" height="15.0" fill="rgb(232,213,45)" rx="2" ry="2" />
<text  x="1136.73" y="847.5" ></text>
</g>
<g >
<title>std::make_shared&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;h2load::main (1 samples, 0.04%)</title><rect x="1093.5" y="933" width="0.5" height="15.0" fill="rgb(233,197,12)" rx="2" ry="2" />
<text  x="1096.54" y="943.5" ></text>
</g>
<g >
<title>ksl_bsearch (5 samples, 0.18%)</title><rect x="954.8" y="901" width="2.1" height="15.0" fill="rgb(245,214,47)" rx="2" ry="2" />
<text  x="957.76" y="911.5" ></text>
</g>
<g >
<title>conn_recv_pkt (1,191 samples, 42.70%)</title><rect x="491.1" y="965" width="503.9" height="15.0" fill="rgb(224,25,18)" rx="2" ry="2" />
<text  x="494.05" y="975.5" >conn_recv_pkt</text>
</g>
<g >
<title>ngtcp2_cid_zero (2 samples, 0.07%)</title><rect x="902.3" y="933" width="0.8" height="15.0" fill="rgb(212,118,7)" rx="2" ry="2" />
<text  x="905.30" y="943.5" ></text>
</g>
<g >
<title>ngtcp2_crypto_decrypt_unsecure (1 samples, 0.04%)</title><rect x="46.8" y="1013" width="0.4" height="15.0" fill="rgb(208,55,21)" rx="2" ry="2" />
<text  x="49.81" y="1023.5" ></text>
</g>
<g >
<title>h2load (2,654 samples, 95.16%)</title><rect x="10.0" y="1045" width="1122.9" height="15.0" fill="rgb(226,6,27)" rx="2" ry="2" />
<text  x="13.00" y="1055.5" >h2load</text>
</g>
<g >
<title>__GI_epoll_ctl (1 samples, 0.04%)</title><rect x="68.4" y="1013" width="0.4" height="15.0" fill="rgb(219,113,31)" rx="2" ry="2" />
<text  x="71.39" y="1023.5" ></text>
</g>
<g >
<title>memcpy (8 samples, 0.29%)</title><rect x="783.0" y="917" width="3.4" height="15.0" fill="rgb(213,128,51)" rx="2" ry="2" />
<text  x="785.99" y="927.5" ></text>
</g>
<g >
<title>main (14 samples, 0.50%)</title><rect x="1092.7" y="997" width="5.9" height="15.0" fill="rgb(230,228,36)" rx="2" ry="2" />
<text  x="1095.69" y="1007.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (1 samples, 0.04%)</title><rect x="1093.5" y="693" width="0.5" height="15.0" fill="rgb(251,158,27)" rx="2" ry="2" />
<text  x="1096.54" y="703.5" ></text>
</g>
<g >
<title>h2load::(anonymous namespace)::recv_data (162 samples, 5.81%)</title><rect x="589.2" y="805" width="68.6" height="15.0" fill="rgb(224,112,39)" rx="2" ry="2" />
<text  x="592.21" y="815.5" >h2load:..</text>
</g>
<g >
<title>_raw_spin_unlock_bh (4 samples, 0.14%)</title><rect x="365.4" y="869" width="1.7" height="15.0" fill="rgb(238,219,22)" rx="2" ry="2" />
<text  x="368.40" y="879.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="1184.1" y="789" width="0.4" height="15.0" fill="rgb(251,212,40)" rx="2" ry="2" />
<text  x="1187.08" y="799.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (1 samples, 0.04%)</title><rect x="633.6" y="741" width="0.5" height="15.0" fill="rgb(208,181,9)" rx="2" ry="2" />
<text  x="636.64" y="751.5" ></text>
</g>
<g >
<title>_IO_fgets (1 samples, 0.04%)</title><rect x="1132.9" y="997" width="0.4" height="15.0" fill="rgb(243,45,24)" rx="2" ry="2" />
<text  x="1135.88" y="1007.5" ></text>
</g>
<g >
<title>__memset_sse2_unaligned (1 samples, 0.04%)</title><rect x="1058.4" y="885" width="0.4" height="15.0" fill="rgb(233,95,37)" rx="2" ry="2" />
<text  x="1061.42" y="895.5" ></text>
</g>
<g >
<title>ext4_filemap_fault (1 samples, 0.04%)</title><rect x="1098.6" y="709" width="0.4" height="15.0" fill="rgb(208,109,36)" rx="2" ry="2" />
<text  x="1101.61" y="719.5" ></text>
</g>
<g >
<title>[libngtcp2.so.0.0.0] (1 samples, 0.04%)</title><rect x="949.3" y="917" width="0.4" height="15.0" fill="rgb(236,121,26)" rx="2" ry="2" />
<text  x="952.26" y="927.5" ></text>
</g>
<g >
<title>decrypt_pkt (100 samples, 3.59%)</title><rect x="802.9" y="949" width="42.3" height="15.0" fill="rgb(226,198,25)" rx="2" ry="2" />
<text  x="805.87" y="959.5" >dec..</text>
</g>
<g >
<title>ERR_load_DSA_strings (1 samples, 0.04%)</title><rect x="1093.1" y="677" width="0.4" height="15.0" fill="rgb(229,118,19)" rx="2" ry="2" />
<text  x="1096.11" y="687.5" ></text>
</g>
<g >
<title>err_load_crypto_strings_int (1 samples, 0.04%)</title><rect x="1093.1" y="693" width="0.4" height="15.0" fill="rgb(235,191,5)" rx="2" ry="2" />
<text  x="1096.11" y="703.5" ></text>
</g>
<g >
<title>__libc_csu_init (1 samples, 0.04%)</title><rect x="1092.3" y="997" width="0.4" height="15.0" fill="rgb(221,168,7)" rx="2" ry="2" />
<text  x="1095.27" y="1007.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.04%)</title><rect x="373.0" y="853" width="0.4" height="15.0" fill="rgb(241,206,41)" rx="2" ry="2" />
<text  x="376.01" y="863.5" ></text>
</g>
<g >
<title>ngtcp2_conn_read_pkt (3 samples, 0.11%)</title><rect x="1064.3" y="1013" width="1.3" height="15.0" fill="rgb(230,225,28)" rx="2" ry="2" />
<text  x="1067.34" y="1023.5" ></text>
</g>
<g >
<title>ngtcp2_gaptr_is_pushed (69 samples, 2.47%)</title><rect x="965.3" y="933" width="29.2" height="15.0" fill="rgb(233,5,50)" rx="2" ry="2" />
<text  x="968.34" y="943.5" >ng..</text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="1094.4" y="341" width="0.4" height="15.0" fill="rgb(227,124,1)" rx="2" ry="2" />
<text  x="1097.38" y="351.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;void&gt;, std::__future_base::_Result_base::_Deleter&gt;, std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;void&gt;, std::__future_base::_Result_base::_Deleter&gt;, std::thread::_Invoker&lt;std::tuple&lt;h2load::main (46 samples, 1.65%)</title><rect x="1071.1" y="677" width="19.5" height="15.0" fill="rgb(208,153,3)" rx="2" ry="2" />
<text  x="1074.11" y="687.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.14%)</title><rect x="1094.4" y="581" width="1.7" height="15.0" fill="rgb(223,173,12)" rx="2" ry="2" />
<text  x="1097.38" y="591.5" ></text>
</g>
<g >
<title>__skb_recv_udp (1 samples, 0.04%)</title><rect x="201.7" y="885" width="0.4" height="15.0" fill="rgb(230,16,50)" rx="2" ry="2" />
<text  x="204.66" y="895.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="69.2" y="453" width="0.5" height="15.0" fill="rgb(249,219,41)" rx="2" ry="2" />
<text  x="72.23" y="463.5" ></text>
</g>
<g >
<title>openaux (1 samples, 0.04%)</title><rect x="1133.3" y="917" width="0.4" height="15.0" fill="rgb(239,84,8)" rx="2" ry="2" />
<text  x="1136.31" y="927.5" ></text>
</g>
<g >
<title>__vfs_read (1 samples, 0.04%)</title><rect x="1132.9" y="837" width="0.4" height="15.0" fill="rgb(238,126,16)" rx="2" ry="2" />
<text  x="1135.88" y="847.5" ></text>
</g>
<g >
<title>quic_get_message (1 samples, 0.04%)</title><rect x="450.4" y="821" width="0.5" height="15.0" fill="rgb(221,130,6)" rx="2" ry="2" />
<text  x="453.44" y="831.5" ></text>
</g>
<g >
<title>___sys_sendmsg (50 samples, 1.79%)</title><rect x="1026.7" y="885" width="21.1" height="15.0" fill="rgb(217,62,36)" rx="2" ry="2" />
<text  x="1029.69" y="895.5" ></text>
</g>
<g >
<title>__ip_make_skb (1 samples, 0.04%)</title><rect x="1033.5" y="789" width="0.4" height="15.0" fill="rgb(235,135,19)" rx="2" ry="2" />
<text  x="1036.46" y="799.5" ></text>
</g>
<g >
<title>[libngtcp2.so.0.0.0] (3 samples, 0.11%)</title><rect x="486.4" y="981" width="1.3" height="15.0" fill="rgb(251,8,10)" rx="2" ry="2" />
<text  x="489.40" y="991.5" ></text>
</g>
<g >
<title>h2load::(anonymous namespace)::recv_stream_data (420 samples, 15.06%)</title><rect x="530.0" y="917" width="177.7" height="15.0" fill="rgb(237,14,15)" rx="2" ry="2" />
<text  x="532.98" y="927.5" >h2load::(anonymous name..</text>
</g>
<g >
<title>__gconv_transform_utf8_internal (1 samples, 0.04%)</title><rect x="1097.8" y="853" width="0.4" height="15.0" fill="rgb(231,24,40)" rx="2" ry="2" />
<text  x="1100.77" y="863.5" ></text>
</g>
<g >
<title>memcpy (2 samples, 0.07%)</title><rect x="956.9" y="885" width="0.8" height="15.0" fill="rgb(245,107,14)" rx="2" ry="2" />
<text  x="959.88" y="895.5" ></text>
</g>
<g >
<title>CRYPTO_THREAD_run_once (1 samples, 0.04%)</title><rect x="1093.1" y="837" width="0.4" height="15.0" fill="rgb(224,114,13)" rx="2" ry="2" />
<text  x="1096.11" y="847.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, h2load::Session*, std::default_delete&lt;h2load::Session&gt; &gt; (32 samples, 1.15%)</title><rect x="694.1" y="837" width="13.6" height="15.0" fill="rgb(214,155,9)" rx="2" ry="2" />
<text  x="697.14" y="847.5" ></text>
</g>
<g >
<title>ossl_init_load_crypto_strings_ossl_ (1 samples, 0.04%)</title><rect x="1093.1" y="709" width="0.4" height="15.0" fill="rgb(224,182,4)" rx="2" ry="2" />
<text  x="1096.11" y="719.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="69.2" y="357" width="0.5" height="15.0" fill="rgb(225,215,10)" rx="2" ry="2" />
<text  x="72.23" y="367.5" ></text>
</g>
<g >
<title>conn_recv_cpkt (1,204 samples, 43.17%)</title><rect x="489.4" y="981" width="509.4" height="15.0" fill="rgb(208,31,22)" rx="2" ry="2" />
<text  x="492.36" y="991.5" >conn_recv_cpkt</text>
</g>
<g >
<title>pick_next_entity (1 samples, 0.04%)</title><rect x="1189.6" y="917" width="0.4" height="15.0" fill="rgb(224,188,32)" rx="2" ry="2" />
<text  x="1192.58" y="927.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="71.8" y="981" width="0.4" height="15.0" fill="rgb(239,96,39)" rx="2" ry="2" />
<text  x="74.77" y="991.5" ></text>
</g>
<g >
<title>_dl_map_object_deps (1 samples, 0.04%)</title><rect x="1098.6" y="949" width="0.4" height="15.0" fill="rgb(247,169,21)" rx="2" ry="2" />
<text  x="1101.61" y="959.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="69.2" y="421" width="0.5" height="15.0" fill="rgb(230,34,36)" rx="2" ry="2" />
<text  x="72.23" y="431.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="69.2" y="405" width="0.5" height="15.0" fill="rgb(235,222,16)" rx="2" ry="2" />
<text  x="72.23" y="415.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="1025.8" y="949" width="0.5" height="15.0" fill="rgb(217,37,21)" rx="2" ry="2" />
<text  x="1028.84" y="959.5" ></text>
</g>
<g >
<title>execute_command (4 samples, 0.14%)</title><rect x="1094.4" y="741" width="1.7" height="15.0" fill="rgb(250,101,53)" rx="2" ry="2" />
<text  x="1097.38" y="751.5" ></text>
</g>
<g >
<title>cpuidle_enter (107 samples, 3.84%)</title><rect x="1137.1" y="949" width="45.3" height="15.0" fill="rgb(247,2,26)" rx="2" ry="2" />
<text  x="1140.11" y="959.5" >cpui..</text>
</g>
<g >
<title>_dl_open (1 samples, 0.04%)</title><rect x="1135.0" y="741" width="0.4" height="15.0" fill="rgb(249,178,46)" rx="2" ry="2" />
<text  x="1138.00" y="751.5" ></text>
</g>
<g >
<title>execute_command (4 samples, 0.14%)</title><rect x="1094.4" y="645" width="1.7" height="15.0" fill="rgb(239,221,6)" rx="2" ry="2" />
<text  x="1097.38" y="655.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.14%)</title><rect x="1094.4" y="869" width="1.7" height="15.0" fill="rgb(240,171,5)" rx="2" ry="2" />
<text  x="1097.38" y="879.5" ></text>
</g>
<g >
<title>execute_command_internal (3 samples, 0.11%)</title><rect x="1096.1" y="853" width="1.2" height="15.0" fill="rgb(208,142,51)" rx="2" ry="2" />
<text  x="1099.07" y="863.5" ></text>
</g>
<g >
<title>alloc_skb_with_frags (5 samples, 0.18%)</title><rect x="1031.3" y="741" width="2.2" height="15.0" fill="rgb(213,227,40)" rx="2" ry="2" />
<text  x="1034.34" y="751.5" ></text>
</g>
<g >
<title>ngtcp2_range_len (3 samples, 0.11%)</title><rect x="961.1" y="917" width="1.3" height="15.0" fill="rgb(242,105,34)" rx="2" ry="2" />
<text  x="964.11" y="927.5" ></text>
</g>
<g >
<title>____sys_sendmsg (45 samples, 1.61%)</title><rect x="1027.1" y="869" width="19.0" height="15.0" fill="rgb(230,33,1)" rx="2" ry="2" />
<text  x="1030.11" y="879.5" ></text>
</g>
<g >
<title>_dl_start (5 samples, 0.18%)</title><rect x="1098.6" y="1013" width="2.1" height="15.0" fill="rgb(246,39,8)" rx="2" ry="2" />
<text  x="1101.61" y="1023.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.04%)</title><rect x="1082.1" y="309" width="0.4" height="15.0" fill="rgb(233,102,21)" rx="2" ry="2" />
<text  x="1085.11" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_init (1 samples, 0.04%)</title><rect x="1080.4" y="373" width="0.4" height="15.0" fill="rgb(251,160,29)" rx="2" ry="2" />
<text  x="1083.42" y="383.5" ></text>
</g>
<g >
<title>ngtcp2_ksl_lower_bound_compar (4 samples, 0.14%)</title><rect x="50.2" y="1013" width="1.7" height="15.0" fill="rgb(250,157,10)" rx="2" ry="2" />
<text  x="53.19" y="1023.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="69.2" y="629" width="0.5" height="15.0" fill="rgb(239,25,32)" rx="2" ry="2" />
<text  x="72.23" y="639.5" ></text>
</g>
<g >
<title>_dl_catch_exception (1 samples, 0.04%)</title><rect x="1133.3" y="933" width="0.4" height="15.0" fill="rgb(239,131,52)" rx="2" ry="2" />
<text  x="1136.31" y="943.5" ></text>
</g>
<g >
<title>conn_recv_ack (1 samples, 0.04%)</title><rect x="519.0" y="949" width="0.4" height="15.0" fill="rgb(234,28,19)" rx="2" ry="2" />
<text  x="521.98" y="959.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.14%)</title><rect x="1094.4" y="533" width="1.7" height="15.0" fill="rgb(223,84,41)" rx="2" ry="2" />
<text  x="1097.38" y="543.5" ></text>
</g>
<g >
<title>__bswap_32 (1 samples, 0.04%)</title><rect x="925.6" y="917" width="0.4" height="15.0" fill="rgb(206,179,7)" rx="2" ry="2" />
<text  x="928.57" y="927.5" ></text>
</g>
<g >
<title>dl_new_hash (1 samples, 0.04%)</title><rect x="1099.5" y="885" width="0.4" height="15.0" fill="rgb(238,94,9)" rx="2" ry="2" />
<text  x="1102.46" y="895.5" ></text>
</g>
<g >
<title>__x64_sys_close (1 samples, 0.04%)</title><rect x="1133.3" y="821" width="0.4" height="15.0" fill="rgb(225,199,4)" rx="2" ry="2" />
<text  x="1136.31" y="831.5" ></text>
</g>
<g >
<title>ngtcp2_ksl_end (1 samples, 0.04%)</title><rect x="1024.6" y="933" width="0.4" height="15.0" fill="rgb(223,215,9)" rx="2" ry="2" />
<text  x="1027.57" y="943.5" ></text>
</g>
<g >
<title>do_mprotect_pkey (1 samples, 0.04%)</title><rect x="1136.3" y="853" width="0.4" height="15.0" fill="rgb(238,5,19)" rx="2" ry="2" />
<text  x="1139.27" y="863.5" ></text>
</g>
<g >
<title>ksl_bsearch (23 samples, 0.82%)</title><rect x="861.7" y="901" width="9.7" height="15.0" fill="rgb(241,51,12)" rx="2" ry="2" />
<text  x="864.68" y="911.5" ></text>
</g>
<g >
<title>memcpy (1 samples, 0.04%)</title><rect x="1099.0" y="773" width="0.5" height="15.0" fill="rgb(230,119,47)" rx="2" ry="2" />
<text  x="1102.04" y="783.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="436.5" y="933" width="0.4" height="15.0" fill="rgb(223,95,13)" rx="2" ry="2" />
<text  x="439.48" y="943.5" ></text>
</g>
<g >
<title>wait_for (1 samples, 0.04%)</title><rect x="1094.0" y="885" width="0.4" height="15.0" fill="rgb(248,104,34)" rx="2" ry="2" />
<text  x="1096.96" y="895.5" ></text>
</g>
<g >
<title>ngtcp2_ppe_encode_frame (1 samples, 0.04%)</title><rect x="1056.3" y="933" width="0.4" height="15.0" fill="rgb(241,65,34)" rx="2" ry="2" />
<text  x="1059.30" y="943.5" ></text>
</g>
<g >
<title>__GI___nss_lookup_function (1 samples, 0.04%)</title><rect x="1135.0" y="853" width="0.4" height="15.0" fill="rgb(244,217,49)" rx="2" ry="2" />
<text  x="1138.00" y="863.5" ></text>
</g>
<g >
<title>__virt_addr_valid (48 samples, 1.72%)</title><rect x="235.5" y="853" width="20.3" height="15.0" fill="rgb(254,181,51)" rx="2" ry="2" />
<text  x="238.51" y="863.5" ></text>
</g>
<g >
<title>skb_release_data (33 samples, 1.18%)</title><rect x="384.9" y="837" width="13.9" height="15.0" fill="rgb(231,46,42)" rx="2" ry="2" />
<text  x="387.86" y="847.5" ></text>
</g>
<g >
<title>execute_command (4 samples, 0.14%)</title><rect x="1094.4" y="885" width="1.7" height="15.0" fill="rgb(250,225,18)" rx="2" ry="2" />
<text  x="1097.38" y="895.5" ></text>
</g>
<g >
<title>hash (10 samples, 0.36%)</title><rect x="559.2" y="821" width="4.2" height="15.0" fill="rgb(226,104,15)" rx="2" ry="2" />
<text  x="562.17" y="831.5" ></text>
</g>
<g >
<title>__GI__dl_catch_error (1 samples, 0.04%)</title><rect x="1135.0" y="789" width="0.4" height="15.0" fill="rgb(209,174,48)" rx="2" ry="2" />
<text  x="1138.00" y="799.5" ></text>
</g>
<g >
<title>execute_command (4 samples, 0.14%)</title><rect x="1094.4" y="693" width="1.7" height="15.0" fill="rgb(209,70,20)" rx="2" ry="2" />
<text  x="1097.38" y="703.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.04%)</title><rect x="1121.0" y="885" width="0.5" height="15.0" fill="rgb(207,41,13)" rx="2" ry="2" />
<text  x="1124.04" y="895.5" ></text>
</g>
<g >
<title>CRYPTO_THREAD_run_once (1 samples, 0.04%)</title><rect x="1093.1" y="741" width="0.4" height="15.0" fill="rgb(226,109,21)" rx="2" ry="2" />
<text  x="1096.11" y="751.5" ></text>
</g>
<g >
<title>irq_work_run (1 samples, 0.04%)</title><rect x="1184.1" y="901" width="0.4" height="15.0" fill="rgb(209,151,25)" rx="2" ry="2" />
<text  x="1187.08" y="911.5" ></text>
</g>
<g >
<title>ngtcp2_crypto_hp_mask_unsecure_cb (34 samples, 1.22%)</title><rect x="786.4" y="933" width="14.4" height="15.0" fill="rgb(248,219,37)" rx="2" ry="2" />
<text  x="789.37" y="943.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="1096.1" y="613" width="0.4" height="15.0" fill="rgb(211,37,25)" rx="2" ry="2" />
<text  x="1099.07" y="623.5" ></text>
</g>
<g >
<title>ngtcp2_conn_find_stream (24 samples, 0.86%)</title><rect x="647.6" y="741" width="10.2" height="15.0" fill="rgb(240,161,5)" rx="2" ry="2" />
<text  x="650.60" y="751.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="1094.0" y="869" width="0.4" height="15.0" fill="rgb(206,57,32)" rx="2" ry="2" />
<text  x="1096.96" y="879.5" ></text>
</g>
<g >
<title>std::__future_base::_S_make_async_state&lt;std::thread::_Invoker&lt;std::tuple&lt;h2load::main (1 samples, 0.04%)</title><rect x="1093.5" y="949" width="0.5" height="15.0" fill="rgb(208,37,9)" rx="2" ry="2" />
<text  x="1096.54" y="959.5" ></text>
</g>
<g >
<title>OPENSSL_LH_free (1 samples, 0.04%)</title><rect x="1091.8" y="933" width="0.5" height="15.0" fill="rgb(216,141,10)" rx="2" ry="2" />
<text  x="1094.84" y="943.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.04%)</title><rect x="1083.8" y="373" width="0.4" height="15.0" fill="rgb(221,7,32)" rx="2" ry="2" />
<text  x="1086.80" y="383.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (46 samples, 1.65%)</title><rect x="1071.1" y="709" width="19.5" height="15.0" fill="rgb(231,108,39)" rx="2" ry="2" />
<text  x="1074.11" y="719.5" ></text>
</g>
<g >
<title>netdev_pick_tx (1 samples, 0.04%)</title><rect x="1042.3" y="629" width="0.5" height="15.0" fill="rgb(252,76,32)" rx="2" ry="2" />
<text  x="1045.34" y="639.5" ></text>
</g>
<g >
<title>sock_alloc_send_skb (7 samples, 0.25%)</title><rect x="1030.5" y="773" width="3.0" height="15.0" fill="rgb(242,179,17)" rx="2" ry="2" />
<text  x="1033.49" y="783.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.04%)</title><rect x="1121.0" y="853" width="0.5" height="15.0" fill="rgb(221,124,49)" rx="2" ry="2" />
<text  x="1124.04" y="863.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (2 samples, 0.07%)</title><rect x="1042.8" y="645" width="0.8" height="15.0" fill="rgb(212,197,24)" rx="2" ry="2" />
<text  x="1045.76" y="655.5" ></text>
</g>
<g >
<title>version_check_doit (1 samples, 0.04%)</title><rect x="1135.8" y="933" width="0.5" height="15.0" fill="rgb(210,37,54)" rx="2" ry="2" />
<text  x="1138.84" y="943.5" ></text>
</g>
<g >
<title>secondary_startup_64 (125 samples, 4.48%)</title><rect x="1137.1" y="1029" width="52.9" height="15.0" fill="rgb(246,44,19)" rx="2" ry="2" />
<text  x="1140.11" y="1039.5" >secon..</text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="1096.1" y="709" width="0.4" height="15.0" fill="rgb(221,170,26)" rx="2" ry="2" />
<text  x="1099.07" y="719.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="69.2" y="773" width="0.5" height="15.0" fill="rgb(212,9,4)" rx="2" ry="2" />
<text  x="72.23" y="783.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, h2load::Session*, std::default_delete&lt;h2load::Session&gt; &gt; (2 samples, 0.07%)</title><rect x="59.5" y="1013" width="0.8" height="15.0" fill="rgb(241,20,32)" rx="2" ry="2" />
<text  x="62.50" y="1023.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="69.2" y="645" width="0.5" height="15.0" fill="rgb(254,184,22)" rx="2" ry="2" />
<text  x="72.23" y="655.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="69.2" y="693" width="0.5" height="15.0" fill="rgb(217,221,42)" rx="2" ry="2" />
<text  x="72.23" y="703.5" ></text>
</g>
<g >
<title>seq_read (1 samples, 0.04%)</title><rect x="1132.9" y="821" width="0.4" height="15.0" fill="rgb(221,21,24)" rx="2" ry="2" />
<text  x="1135.88" y="831.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.04%)</title><rect x="1091.4" y="853" width="0.4" height="15.0" fill="rgb(227,29,13)" rx="2" ry="2" />
<text  x="1094.42" y="863.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="1098.6" y="789" width="0.4" height="15.0" fill="rgb(208,48,16)" rx="2" ry="2" />
<text  x="1101.61" y="799.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (4 samples, 0.14%)</title><rect x="631.9" y="709" width="1.7" height="15.0" fill="rgb(229,2,44)" rx="2" ry="2" />
<text  x="634.94" y="719.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (10 samples, 0.36%)</title><rect x="1041.1" y="677" width="4.2" height="15.0" fill="rgb(211,112,0)" rx="2" ry="2" />
<text  x="1044.07" y="687.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (11 samples, 0.39%)</title><rect x="114.9" y="981" width="4.7" height="15.0" fill="rgb(240,55,12)" rx="2" ry="2" />
<text  x="117.93" y="991.5" ></text>
</g>
<g >
<title>smp_irq_work_interrupt (1 samples, 0.04%)</title><rect x="631.5" y="629" width="0.4" height="15.0" fill="rgb(228,52,52)" rx="2" ry="2" />
<text  x="634.52" y="639.5" ></text>
</g>
<g >
<title>make_child (1 samples, 0.04%)</title><rect x="1097.3" y="805" width="0.5" height="15.0" fill="rgb(251,42,23)" rx="2" ry="2" />
<text  x="1100.34" y="815.5" ></text>
</g>
<g >
<title>__mmdrop (1 samples, 0.04%)</title><rect x="1094.0" y="693" width="0.4" height="15.0" fill="rgb(247,63,36)" rx="2" ry="2" />
<text  x="1096.96" y="703.5" ></text>
</g>
<g >
<title>__GI___sbrk (1 samples, 0.04%)</title><rect x="71.8" y="117" width="0.4" height="15.0" fill="rgb(244,198,46)" rx="2" ry="2" />
<text  x="74.77" y="127.5" ></text>
</g>
<g >
<title>ngtcp2_cc_pkt_init (1 samples, 0.04%)</title><rect x="1057.1" y="949" width="0.5" height="15.0" fill="rgb(252,45,47)" rx="2" ry="2" />
<text  x="1060.15" y="959.5" ></text>
</g>
<g >
<title>clear_page_rep (1 samples, 0.04%)</title><rect x="1135.4" y="789" width="0.4" height="15.0" fill="rgb(252,103,15)" rx="2" ry="2" />
<text  x="1138.42" y="799.5" ></text>
</g>
<g >
<title>qlog_pkt_write_start (2 samples, 0.07%)</title><rect x="936.6" y="933" width="0.8" height="15.0" fill="rgb(249,207,6)" rx="2" ry="2" />
<text  x="939.57" y="943.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="69.2" y="885" width="0.5" height="15.0" fill="rgb(208,199,1)" rx="2" ry="2" />
<text  x="72.23" y="895.5" ></text>
</g>
<g >
<title>smp_irq_work_interrupt (2 samples, 0.07%)</title><rect x="1188.7" y="901" width="0.9" height="15.0" fill="rgb(209,189,23)" rx="2" ry="2" />
<text  x="1191.73" y="911.5" ></text>
</g>
<g >
<title>ngtcp2_acktr_add (1 samples, 0.04%)</title><rect x="40.9" y="1013" width="0.4" height="15.0" fill="rgb(210,13,33)" rx="2" ry="2" />
<text  x="43.89" y="1023.5" ></text>
</g>
<g >
<title>ngtcp2_qlog_write_frame (6 samples, 0.22%)</title><rect x="937.4" y="949" width="2.6" height="15.0" fill="rgb(208,86,29)" rx="2" ry="2" />
<text  x="940.41" y="959.5" ></text>
</g>
<g >
<title>inet_sendmsg (43 samples, 1.54%)</title><rect x="1027.5" y="837" width="18.2" height="15.0" fill="rgb(238,141,25)" rx="2" ry="2" />
<text  x="1030.53" y="847.5" ></text>
</g>
<g >
<title>ngtcp2_ksl_update_key (1 samples, 0.04%)</title><rect x="51.9" y="1013" width="0.4" height="15.0" fill="rgb(213,158,2)" rx="2" ry="2" />
<text  x="54.89" y="1023.5" ></text>
</g>
<g >
<title>dequeue_entity (2 samples, 0.07%)</title><rect x="1082.1" y="325" width="0.9" height="15.0" fill="rgb(217,83,43)" rx="2" ry="2" />
<text  x="1085.11" y="335.5" ></text>
</g>
<g >
<title>ksl_bsearch (11 samples, 0.39%)</title><rect x="984.8" y="901" width="4.7" height="15.0" fill="rgb(235,117,17)" rx="2" ry="2" />
<text  x="987.80" y="911.5" ></text>
</g>
<g >
<title>free_pages (1 samples, 0.04%)</title><rect x="1094.0" y="661" width="0.4" height="15.0" fill="rgb(221,192,33)" rx="2" ry="2" />
<text  x="1096.96" y="671.5" ></text>
</g>
<g >
<title>[bash] (4 samples, 0.14%)</title><rect x="1094.4" y="565" width="1.7" height="15.0" fill="rgb(217,108,16)" rx="2" ry="2" />
<text  x="1097.38" y="575.5" ></text>
</g>
<g >
<title>ERR_clear_error (1 samples, 0.04%)</title><rect x="1093.1" y="789" width="0.4" height="15.0" fill="rgb(246,27,24)" rx="2" ry="2" />
<text  x="1096.11" y="799.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="69.2" y="501" width="0.5" height="15.0" fill="rgb(218,21,1)" rx="2" ry="2" />
<text  x="72.23" y="511.5" ></text>
</g>
<g >
<title>nghttp3_read_varint (4 samples, 0.14%)</title><rect x="664.5" y="837" width="1.7" height="15.0" fill="rgb(229,65,11)" rx="2" ry="2" />
<text  x="667.52" y="847.5" ></text>
</g>
<g >
<title>_dl_map_object (1 samples, 0.04%)</title><rect x="1098.6" y="901" width="0.4" height="15.0" fill="rgb(224,164,19)" rx="2" ry="2" />
<text  x="1101.61" y="911.5" ></text>
</g>
<g >
<title>ctx_resched (5 samples, 0.18%)</title><rect x="1138.0" y="805" width="2.1" height="15.0" fill="rgb(221,160,8)" rx="2" ry="2" />
<text  x="1140.96" y="815.5" ></text>
</g>
<g >
<title>do_dlopen (1 samples, 0.04%)</title><rect x="1135.0" y="757" width="0.4" height="15.0" fill="rgb(220,196,40)" rx="2" ry="2" />
<text  x="1138.00" y="767.5" ></text>
</g>
<g >
<title>do_epoll_wait (21 samples, 0.75%)</title><rect x="1077.0" y="453" width="8.9" height="15.0" fill="rgb(244,158,49)" rx="2" ry="2" />
<text  x="1080.03" y="463.5" ></text>
</g>
<g >
<title>ngtcp2_pkt_encode_ack_frame (1 samples, 0.04%)</title><rect x="1056.3" y="917" width="0.4" height="15.0" fill="rgb(229,137,23)" rx="2" ry="2" />
<text  x="1059.30" y="927.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (3 samples, 0.11%)</title><rect x="1046.1" y="869" width="1.3" height="15.0" fill="rgb(229,4,43)" rx="2" ry="2" />
<text  x="1049.15" y="879.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.04%)</title><rect x="371.3" y="853" width="0.4" height="15.0" fill="rgb(251,55,26)" rx="2" ry="2" />
<text  x="374.32" y="863.5" ></text>
</g>
<g >
<title>rcu_core (1 samples, 0.04%)</title><rect x="1137.1" y="837" width="0.4" height="15.0" fill="rgb(226,152,24)" rx="2" ry="2" />
<text  x="1140.11" y="847.5" ></text>
</g>
<g >
<title>__skb_recv_udp (39 samples, 1.40%)</title><rect x="256.7" y="869" width="16.5" height="15.0" fill="rgb(230,66,28)" rx="2" ry="2" />
<text  x="259.66" y="879.5" ></text>
</g>
<g >
<title>h2load::(anonymous namespace)::timestamp (55 samples, 1.97%)</title><rect x="450.9" y="997" width="23.2" height="15.0" fill="rgb(207,220,25)" rx="2" ry="2" />
<text  x="453.86" y="1007.5" >h..</text>
</g>
<g >
<title>udp_poll (1 samples, 0.04%)</title><rect x="1075.3" y="405" width="0.5" height="15.0" fill="rgb(246,69,52)" rx="2" ry="2" />
<text  x="1078.34" y="415.5" ></text>
</g>
<g >
<title>irq_work_run_list (1 samples, 0.04%)</title><rect x="631.5" y="597" width="0.4" height="15.0" fill="rgb(230,134,24)" rx="2" ry="2" />
<text  x="634.52" y="607.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="1091.4" y="917" width="0.4" height="15.0" fill="rgb(207,121,47)" rx="2" ry="2" />
<text  x="1094.42" y="927.5" ></text>
</g>
<g >
<title>nghttp3_conn_on_data (2 samples, 0.07%)</title><rect x="36.7" y="1013" width="0.8" height="15.0" fill="rgb(217,153,25)" rx="2" ry="2" />
<text  x="39.65" y="1023.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="71.8" y="405" width="0.4" height="15.0" fill="rgb(229,131,26)" rx="2" ry="2" />
<text  x="74.77" y="415.5" ></text>
</g>
<g >
<title>_start (2 samples, 0.07%)</title><rect x="1133.3" y="1029" width="0.9" height="15.0" fill="rgb(206,50,23)" rx="2" ry="2" />
<text  x="1136.31" y="1039.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1099.0" y="901" width="0.5" height="15.0" fill="rgb(238,190,7)" rx="2" ry="2" />
<text  x="1102.04" y="911.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="69.2" y="597" width="0.5" height="15.0" fill="rgb(248,65,42)" rx="2" ry="2" />
<text  x="72.23" y="607.5" ></text>
</g>
<g >
<title>ngtcp2_pkt_decode_hd_short (3 samples, 0.11%)</title><rect x="54.0" y="1013" width="1.3" height="15.0" fill="rgb(232,120,13)" rx="2" ry="2" />
<text  x="57.00" y="1023.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="71.8" y="549" width="0.4" height="15.0" fill="rgb(211,100,32)" rx="2" ry="2" />
<text  x="74.77" y="559.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="1098.6" y="837" width="0.4" height="15.0" fill="rgb(236,133,33)" rx="2" ry="2" />
<text  x="1101.61" y="847.5" ></text>
</g>
<g >
<title>ksl_node_set_key (1 samples, 0.04%)</title><rect x="874.4" y="901" width="0.4" height="15.0" fill="rgb(206,98,46)" rx="2" ry="2" />
<text  x="877.37" y="911.5" ></text>
</g>
<g >
<title>__ip_select_ident (1 samples, 0.04%)</title><rect x="1033.5" y="773" width="0.4" height="15.0" fill="rgb(249,92,29)" rx="2" ry="2" />
<text  x="1036.46" y="783.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.79%)</title><rect x="1076.6" y="501" width="9.3" height="15.0" fill="rgb(232,27,11)" rx="2" ry="2" />
<text  x="1079.61" y="511.5" ></text>
</g>
<g >
<title>dl_main (2 samples, 0.07%)</title><rect x="1133.3" y="965" width="0.9" height="15.0" fill="rgb(207,156,15)" rx="2" ry="2" />
<text  x="1136.31" y="975.5" ></text>
</g>
<g >
<title>execute_command_internal (2 samples, 0.07%)</title><rect x="1096.5" y="533" width="0.8" height="15.0" fill="rgb(222,153,26)" rx="2" ry="2" />
<text  x="1099.50" y="543.5" ></text>
</g>
<g >
<title>__vma_link_file (1 samples, 0.04%)</title><rect x="1133.7" y="773" width="0.5" height="15.0" fill="rgb(236,72,53)" rx="2" ry="2" />
<text  x="1136.73" y="783.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="69.2" y="933" width="0.5" height="15.0" fill="rgb(248,162,11)" rx="2" ry="2" />
<text  x="72.23" y="943.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, h2load::Session*, std::default_delete&lt;h2load::Session&gt; &gt;::_M_head (2 samples, 0.07%)</title><rect x="58.2" y="1013" width="0.9" height="15.0" fill="rgb(210,150,33)" rx="2" ry="2" />
<text  x="61.23" y="1023.5" ></text>
</g>
<g >
<title>state_machine.part.0 (1 samples, 0.04%)</title><rect x="450.4" y="837" width="0.5" height="15.0" fill="rgb(254,113,40)" rx="2" ry="2" />
<text  x="453.44" y="847.5" ></text>
</g>
<g >
<title>execute_command_internal (2 samples, 0.07%)</title><rect x="1096.5" y="725" width="0.8" height="15.0" fill="rgb(235,85,48)" rx="2" ry="2" />
<text  x="1099.50" y="735.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="71.8" y="53" width="0.4" height="15.0" fill="rgb(254,57,21)" rx="2" ry="2" />
<text  x="74.77" y="63.5" ></text>
</g>
<g >
<title>ngtcp2_log_info (2 samples, 0.07%)</title><rect x="1069.4" y="1013" width="0.9" height="15.0" fill="rgb(233,195,26)" rx="2" ry="2" />
<text  x="1072.42" y="1023.5" ></text>
</g>
<g >
<title>h2load::Http3Session::recv_data (141 samples, 5.06%)</title><rect x="598.1" y="789" width="59.7" height="15.0" fill="rgb(209,37,23)" rx="2" ry="2" />
<text  x="601.10" y="799.5" >h2load..</text>
</g>
<g >
<title>schedule (2 samples, 0.07%)</title><rect x="1134.2" y="981" width="0.8" height="15.0" fill="rgb(219,60,42)" rx="2" ry="2" />
<text  x="1137.15" y="991.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="1096.1" y="629" width="0.4" height="15.0" fill="rgb(247,70,40)" rx="2" ry="2" />
<text  x="1099.07" y="639.5" ></text>
</g>
<g >
<title>memset (1 samples, 0.04%)</title><rect x="1098.6" y="853" width="0.4" height="15.0" fill="rgb(213,73,44)" rx="2" ry="2" />
<text  x="1101.61" y="863.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="71.8" y="805" width="0.4" height="15.0" fill="rgb(209,188,24)" rx="2" ry="2" />
<text  x="74.77" y="815.5" ></text>
</g>
<g >
<title>h2load::Http3Session::consume (45 samples, 1.61%)</title><rect x="638.7" y="773" width="19.1" height="15.0" fill="rgb(227,204,40)" rx="2" ry="2" />
<text  x="641.71" y="783.5" ></text>
</g>
<g >
<title>mmput (1 samples, 0.04%)</title><rect x="1121.5" y="949" width="0.4" height="15.0" fill="rgb(235,177,24)" rx="2" ry="2" />
<text  x="1124.46" y="959.5" ></text>
</g>
<g >
<title>__skb_try_recv_from_queue (22 samples, 0.79%)</title><rect x="261.7" y="853" width="9.3" height="15.0" fill="rgb(224,216,12)" rx="2" ry="2" />
<text  x="264.74" y="863.5" ></text>
</g>
<g >
<title>ngtcp2_acktr_immediate_ack (11 samples, 0.39%)</title><rect x="846.0" y="949" width="4.7" height="15.0" fill="rgb(218,226,53)" rx="2" ry="2" />
<text  x="849.03" y="959.5" ></text>
</g>
<g >
<title>hash (10 samples, 0.36%)</title><rect x="673.4" y="837" width="4.2" height="15.0" fill="rgb(251,157,52)" rx="2" ry="2" />
<text  x="676.41" y="847.5" ></text>
</g>
<g >
<title>nghttp3_get_varint (2 samples, 0.07%)</title><rect x="665.4" y="821" width="0.8" height="15.0" fill="rgb(212,17,50)" rx="2" ry="2" />
<text  x="668.37" y="831.5" ></text>
</g>
<g >
<title>ngtcp2_conn_extend_max_stream_offset (1 samples, 0.04%)</title><rect x="1063.9" y="1013" width="0.4" height="15.0" fill="rgb(230,203,38)" rx="2" ry="2" />
<text  x="1066.92" y="1023.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.04%)</title><rect x="410.7" y="853" width="0.4" height="15.0" fill="rgb(230,222,49)" rx="2" ry="2" />
<text  x="413.67" y="863.5" ></text>
</g>
<g >
<title>parse_and_execute (2 samples, 0.07%)</title><rect x="1095.2" y="373" width="0.9" height="15.0" fill="rgb(231,176,16)" rx="2" ry="2" />
<text  x="1098.23" y="383.5" ></text>
</g>
<g >
<title>__fget_light (12 samples, 0.43%)</title><rect x="425.9" y="901" width="5.1" height="15.0" fill="rgb(217,125,41)" rx="2" ry="2" />
<text  x="428.90" y="911.5" ></text>
</g>
<g >
<title>execute_command (4 samples, 0.14%)</title><rect x="1094.4" y="597" width="1.7" height="15.0" fill="rgb(229,133,31)" rx="2" ry="2" />
<text  x="1097.38" y="607.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.04%)</title><rect x="1189.6" y="933" width="0.4" height="15.0" fill="rgb(209,77,23)" rx="2" ry="2" />
<text  x="1192.58" y="943.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="1097.3" y="821" width="0.5" height="15.0" fill="rgb(250,4,43)" rx="2" ry="2" />
<text  x="1100.34" y="831.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="1094.8" y="357" width="0.4" height="15.0" fill="rgb(228,198,41)" rx="2" ry="2" />
<text  x="1097.80" y="367.5" ></text>
</g>
<g >
<title>ip (3 samples, 0.11%)</title><rect x="1132.9" y="1045" width="1.3" height="15.0" fill="rgb(237,126,41)" rx="2" ry="2" />
<text  x="1135.88" y="1055.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (2 samples, 0.07%)</title><rect x="65.0" y="1013" width="0.8" height="15.0" fill="rgb(235,138,31)" rx="2" ry="2" />
<text  x="68.00" y="1023.5" ></text>
</g>
<g >
<title>__fget_light (32 samples, 1.15%)</title><rect x="412.4" y="885" width="13.5" height="15.0" fill="rgb(235,136,24)" rx="2" ry="2" />
<text  x="415.36" y="895.5" ></text>
</g>
<g >
<title>irq_work_run (1 samples, 0.04%)</title><rect x="1189.2" y="885" width="0.4" height="15.0" fill="rgb(251,51,52)" rx="2" ry="2" />
<text  x="1192.15" y="895.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.04%)</title><rect x="740.3" y="901" width="0.4" height="15.0" fill="rgb(242,190,4)" rx="2" ry="2" />
<text  x="743.25" y="911.5" ></text>
</g>
<g >
<title>OBJ_NAME_add (1 samples, 0.04%)</title><rect x="1092.7" y="869" width="0.4" height="15.0" fill="rgb(236,32,48)" rx="2" ry="2" />
<text  x="1095.69" y="879.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1136.3" y="901" width="0.4" height="15.0" fill="rgb(205,220,4)" rx="2" ry="2" />
<text  x="1139.27" y="911.5" ></text>
</g>
<g >
<title>ngtcp2_cc_cubic_cc_event (1 samples, 0.04%)</title><rect x="1056.7" y="949" width="0.4" height="15.0" fill="rgb(221,15,0)" rx="2" ry="2" />
<text  x="1059.73" y="959.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1092.3" y="869" width="0.4" height="15.0" fill="rgb(227,179,23)" rx="2" ry="2" />
<text  x="1095.27" y="879.5" ></text>
</g>
<g >
<title>ngtcp2_cpymem (11 samples, 0.39%)</title><rect x="781.7" y="933" width="4.7" height="15.0" fill="rgb(208,140,34)" rx="2" ry="2" />
<text  x="784.72" y="943.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="69.2" y="325" width="0.5" height="15.0" fill="rgb(219,83,0)" rx="2" ry="2" />
<text  x="72.23" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_mprotect (1 samples, 0.04%)</title><rect x="1099.0" y="869" width="0.5" height="15.0" fill="rgb(225,62,29)" rx="2" ry="2" />
<text  x="1102.04" y="879.5" ></text>
</g>
<g >
<title>execute_command (8 samples, 0.29%)</title><rect x="1094.4" y="933" width="3.4" height="15.0" fill="rgb(252,5,42)" rx="2" ry="2" />
<text  x="1097.38" y="943.5" ></text>
</g>
<g >
<title>[ls] (1 samples, 0.04%)</title><rect x="1135.0" y="1029" width="0.4" height="15.0" fill="rgb(237,213,53)" rx="2" ry="2" />
<text  x="1138.00" y="1039.5" ></text>
</g>
<g >
<title>[bash] (2 samples, 0.07%)</title><rect x="1094.4" y="421" width="0.8" height="15.0" fill="rgb(226,58,47)" rx="2" ry="2" />
<text  x="1097.38" y="431.5" ></text>
</g>
<g >
<title>ngtcp2_ksl_it_get (2 samples, 0.07%)</title><rect x="743.6" y="933" width="0.9" height="15.0" fill="rgb(218,171,54)" rx="2" ry="2" />
<text  x="746.64" y="943.5" ></text>
</g>
<g >
<title>start_thread (46 samples, 1.65%)</title><rect x="1071.1" y="1013" width="19.5" height="15.0" fill="rgb(208,215,35)" rx="2" ry="2" />
<text  x="1074.11" y="1023.5" ></text>
</g>
<g >
<title>map_over (1 samples, 0.04%)</title><rect x="1095.2" y="261" width="0.5" height="15.0" fill="rgb(229,66,20)" rx="2" ry="2" />
<text  x="1098.23" y="271.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.04%)</title><rect x="1184.1" y="805" width="0.4" height="15.0" fill="rgb(233,198,44)" rx="2" ry="2" />
<text  x="1187.08" y="815.5" ></text>
</g>
<g >
<title>[bash] (2 samples, 0.07%)</title><rect x="1097.8" y="885" width="0.8" height="15.0" fill="rgb(208,80,53)" rx="2" ry="2" />
<text  x="1100.77" y="895.5" ></text>
</g>
<g >
<title>__ip_append_data.isra.0 (10 samples, 0.36%)</title><rect x="1029.2" y="789" width="4.3" height="15.0" fill="rgb(231,214,30)" rx="2" ry="2" />
<text  x="1032.23" y="799.5" ></text>
</g>
<g >
<title>fib_table_lookup (3 samples, 0.11%)</title><rect x="1036.0" y="757" width="1.3" height="15.0" fill="rgb(208,138,16)" rx="2" ry="2" />
<text  x="1038.99" y="767.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.04%)</title><rect x="1136.7" y="885" width="0.4" height="15.0" fill="rgb(227,2,51)" rx="2" ry="2" />
<text  x="1139.69" y="895.5" ></text>
</g>
<g >
<title>expand_string_assignment (2 samples, 0.07%)</title><rect x="1095.2" y="437" width="0.9" height="15.0" fill="rgb(227,175,37)" rx="2" ry="2" />
<text  x="1098.23" y="447.5" ></text>
</g>
<g >
<title>do_filp_open (1 samples, 0.04%)</title><rect x="1092.3" y="821" width="0.4" height="15.0" fill="rgb(228,169,37)" rx="2" ry="2" />
<text  x="1095.27" y="831.5" ></text>
</g>
<g >
<title>__libc_sendmsg (53 samples, 1.90%)</title><rect x="1025.8" y="981" width="22.5" height="15.0" fill="rgb(232,134,26)" rx="2" ry="2" />
<text  x="1028.84" y="991.5" >_..</text>
</g>
<g >
<title>skb_consume_udp (61 samples, 2.19%)</title><rect x="373.4" y="869" width="25.8" height="15.0" fill="rgb(212,38,48)" rx="2" ry="2" />
<text  x="376.43" y="879.5" >s..</text>
</g>
<g >
<title>do_fault (1 samples, 0.04%)</title><rect x="1098.6" y="741" width="0.4" height="15.0" fill="rgb(250,148,41)" rx="2" ry="2" />
<text  x="1101.61" y="751.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.04%)</title><rect x="1096.5" y="389" width="0.4" height="15.0" fill="rgb(238,146,43)" rx="2" ry="2" />
<text  x="1099.50" y="399.5" ></text>
</g>
<g >
<title>memcpy (1 samples, 0.04%)</title><rect x="874.4" y="885" width="0.4" height="15.0" fill="rgb(231,68,2)" rx="2" ry="2" />
<text  x="877.37" y="895.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.14%)</title><rect x="1094.4" y="821" width="1.7" height="15.0" fill="rgb(224,22,3)" rx="2" ry="2" />
<text  x="1097.38" y="831.5" ></text>
</g>
<g >
<title>[bash] (3 samples, 0.11%)</title><rect x="1096.1" y="789" width="1.2" height="15.0" fill="rgb(254,133,33)" rx="2" ry="2" />
<text  x="1099.07" y="799.5" ></text>
</g>
<g >
<title>CRYPTO_THREAD_run_once (1 samples, 0.04%)</title><rect x="1092.7" y="933" width="0.4" height="15.0" fill="rgb(220,126,1)" rx="2" ry="2" />
<text  x="1095.69" y="943.5" ></text>
</g>
<g >
<title>ngtcp2_cpymem (3 samples, 0.11%)</title><rect x="44.3" y="1013" width="1.2" height="15.0" fill="rgb(250,224,0)" rx="2" ry="2" />
<text  x="47.27" y="1023.5" ></text>
</g>
<g >
<title>__GI_execve (1 samples, 0.04%)</title><rect x="1095.7" y="261" width="0.4" height="15.0" fill="rgb(239,137,36)" rx="2" ry="2" />
<text  x="1098.65" y="271.5" ></text>
</g>
<g >
<title>nghttp3_conn_find_stream (37 samples, 1.33%)</title><rect x="547.7" y="853" width="15.7" height="15.0" fill="rgb(210,125,15)" rx="2" ry="2" />
<text  x="550.75" y="863.5" ></text>
</g>
<g >
<title>__check_object_size (65 samples, 2.33%)</title><rect x="228.3" y="869" width="27.5" height="15.0" fill="rgb(232,87,3)" rx="2" ry="2" />
<text  x="231.31" y="879.5" >_..</text>
</g>
<g >
<title>std::__invoke&lt;void  (46 samples, 1.65%)</title><rect x="1071.1" y="773" width="19.5" height="15.0" fill="rgb(220,198,50)" rx="2" ry="2" />
<text  x="1074.11" y="783.5" ></text>
</g>
<g >
<title>shell_execve (1 samples, 0.04%)</title><rect x="1095.7" y="277" width="0.4" height="15.0" fill="rgb(220,226,34)" rx="2" ry="2" />
<text  x="1098.65" y="287.5" ></text>
</g>
<g >
<title>skb_consume_udp (1 samples, 0.04%)</title><rect x="202.1" y="885" width="0.4" height="15.0" fill="rgb(241,54,36)" rx="2" ry="2" />
<text  x="205.08" y="895.5" ></text>
</g>
<g >
<title>skb_set_owner_w (1 samples, 0.04%)</title><rect x="1030.5" y="757" width="0.4" height="15.0" fill="rgb(205,82,17)" rx="2" ry="2" />
<text  x="1033.49" y="767.5" ></text>
</g>
<g >
<title>conn_should_send_max_stream_data (1 samples, 0.04%)</title><rect x="672.1" y="853" width="0.5" height="15.0" fill="rgb(214,56,17)" rx="2" ry="2" />
<text  x="675.14" y="863.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="1094.8" y="261" width="0.4" height="15.0" fill="rgb(248,37,11)" rx="2" ry="2" />
<text  x="1097.80" y="271.5" ></text>
</g>
<g >
<title>pktns_pkt_num_is_duplicate (71 samples, 2.55%)</title><rect x="964.5" y="949" width="30.0" height="15.0" fill="rgb(234,219,33)" rx="2" ry="2" />
<text  x="967.49" y="959.5" >pk..</text>
</g>
<g >
<title>ep_send_events_proc (2 samples, 0.07%)</title><rect x="1079.2" y="405" width="0.8" height="15.0" fill="rgb(232,120,39)" rx="2" ry="2" />
<text  x="1082.15" y="415.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, h2load::Session*, std::default_delete&lt;h2load::Session&gt; &gt; (1 samples, 0.04%)</title><rect x="1130.3" y="1013" width="0.5" height="15.0" fill="rgb(227,95,17)" rx="2" ry="2" />
<text  x="1133.34" y="1023.5" ></text>
</g>
<g >
<title>nghttp3_conn_read_bidi (243 samples, 8.71%)</title><rect x="563.4" y="853" width="102.8" height="15.0" fill="rgb(229,16,10)" rx="2" ry="2" />
<text  x="566.40" y="863.5" >nghttp3_conn..</text>
</g>
<g >
<title>ngtcp2_ksl_lower_bound_compar (38 samples, 1.36%)</title><rect x="973.4" y="917" width="16.1" height="15.0" fill="rgb(241,200,40)" rx="2" ry="2" />
<text  x="976.38" y="927.5" ></text>
</g>
<g >
<title>default_tty_job_signals (1 samples, 0.04%)</title><rect x="1097.3" y="789" width="0.5" height="15.0" fill="rgb(231,33,36)" rx="2" ry="2" />
<text  x="1100.34" y="799.5" ></text>
</g>
<g >
<title>ip_output (18 samples, 0.65%)</title><rect x="1037.7" y="757" width="7.6" height="15.0" fill="rgb(224,77,15)" rx="2" ry="2" />
<text  x="1040.69" y="767.5" ></text>
</g>
<g >
<title>netdev_core_pick_tx (3 samples, 0.11%)</title><rect x="1041.5" y="661" width="1.3" height="15.0" fill="rgb(239,136,1)" rx="2" ry="2" />
<text  x="1044.50" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1133.3" y="853" width="0.4" height="15.0" fill="rgb(218,17,4)" rx="2" ry="2" />
<text  x="1136.31" y="863.5" ></text>
</g>
<g >
<title>dl_main (3 samples, 0.11%)</title><rect x="1135.8" y="965" width="1.3" height="15.0" fill="rgb(254,36,16)" rx="2" ry="2" />
<text  x="1138.84" y="975.5" ></text>
</g>
<g >
<title>greater (3 samples, 0.11%)</title><rect x="870.1" y="885" width="1.3" height="15.0" fill="rgb(253,215,46)" rx="2" ry="2" />
<text  x="873.14" y="895.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="1094.4" y="373" width="0.4" height="15.0" fill="rgb(219,60,22)" rx="2" ry="2" />
<text  x="1097.38" y="383.5" ></text>
</g>
<g >
<title>unfreeze_partials.isra.0 (2 samples, 0.07%)</title><rect x="383.6" y="773" width="0.8" height="15.0" fill="rgb(237,199,47)" rx="2" ry="2" />
<text  x="386.59" y="783.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.04%)</title><rect x="1137.1" y="885" width="0.4" height="15.0" fill="rgb(235,178,1)" rx="2" ry="2" />
<text  x="1140.11" y="895.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="69.2" y="965" width="0.5" height="15.0" fill="rgb(221,41,10)" rx="2" ry="2" />
<text  x="72.23" y="975.5" ></text>
</g>
<g >
<title>irq_work_interrupt (1 samples, 0.04%)</title><rect x="631.5" y="645" width="0.4" height="15.0" fill="rgb(251,140,28)" rx="2" ry="2" />
<text  x="634.52" y="655.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.04%)</title><rect x="1040.2" y="709" width="0.4" height="15.0" fill="rgb(216,213,31)" rx="2" ry="2" />
<text  x="1043.23" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1132.9" y="917" width="0.4" height="15.0" fill="rgb(230,35,10)" rx="2" ry="2" />
<text  x="1135.88" y="927.5" ></text>
</g>
<g >
<title>deactivate_task (1 samples, 0.04%)</title><rect x="1134.2" y="949" width="0.4" height="15.0" fill="rgb(247,188,45)" rx="2" ry="2" />
<text  x="1137.15" y="959.5" ></text>
</g>
<g >
<title>irq_work_run_list (1 samples, 0.04%)</title><rect x="1184.1" y="885" width="0.4" height="15.0" fill="rgb(248,29,30)" rx="2" ry="2" />
<text  x="1187.08" y="895.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (5 samples, 0.18%)</title><rect x="1138.0" y="789" width="2.1" height="15.0" fill="rgb(210,7,44)" rx="2" ry="2" />
<text  x="1140.96" y="799.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="1094.4" y="261" width="0.4" height="15.0" fill="rgb(223,169,54)" rx="2" ry="2" />
<text  x="1097.38" y="271.5" ></text>
</g>
<g >
<title>pgd_free (1 samples, 0.04%)</title><rect x="1094.0" y="677" width="0.4" height="15.0" fill="rgb(235,137,27)" rx="2" ry="2" />
<text  x="1096.96" y="687.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;h2load::main (1 samples, 0.04%)</title><rect x="1093.5" y="917" width="0.5" height="15.0" fill="rgb(244,3,54)" rx="2" ry="2" />
<text  x="1096.54" y="927.5" ></text>
</g>
<g >
<title>do_sys_open (1 samples, 0.04%)</title><rect x="1092.3" y="837" width="0.4" height="15.0" fill="rgb(251,52,23)" rx="2" ry="2" />
<text  x="1095.27" y="847.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.04%)</title><rect x="1096.9" y="325" width="0.4" height="15.0" fill="rgb(219,57,42)" rx="2" ry="2" />
<text  x="1099.92" y="335.5" ></text>
</g>
<g >
<title>dequeue_task_fair (2 samples, 0.07%)</title><rect x="1082.1" y="341" width="0.9" height="15.0" fill="rgb(208,12,35)" rx="2" ry="2" />
<text  x="1085.11" y="351.5" ></text>
</g>
<g >
<title>[bash] (2 samples, 0.07%)</title><rect x="1096.5" y="693" width="0.8" height="15.0" fill="rgb(218,173,51)" rx="2" ry="2" />
<text  x="1099.50" y="703.5" ></text>
</g>
<g >
<title>_dl_init (1 samples, 0.04%)</title><rect x="1135.4" y="1013" width="0.4" height="15.0" fill="rgb(243,200,46)" rx="2" ry="2" />
<text  x="1138.42" y="1023.5" ></text>
</g>
<g >
<title>ngtcp2_ksl_update_key (8 samples, 0.29%)</title><rect x="871.4" y="917" width="3.4" height="15.0" fill="rgb(242,204,35)" rx="2" ry="2" />
<text  x="874.41" y="927.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="71.8" y="837" width="0.4" height="15.0" fill="rgb(206,65,40)" rx="2" ry="2" />
<text  x="74.77" y="847.5" ></text>
</g>
<g >
<title>insert_work (1 samples, 0.04%)</title><rect x="1184.1" y="821" width="0.4" height="15.0" fill="rgb(227,185,5)" rx="2" ry="2" />
<text  x="1187.08" y="831.5" ></text>
</g>
<g >
<title>all (2,789 samples, 100%)</title><rect x="10.0" y="1061" width="1180.0" height="15.0" fill="rgb(218,81,1)" rx="2" ry="2" />
<text  x="13.00" y="1071.5" ></text>
</g>
<g >
<title>nghttp3_conn_on_data (196 samples, 7.03%)</title><rect x="581.6" y="837" width="82.9" height="15.0" fill="rgb(246,129,9)" rx="2" ry="2" />
<text  x="584.60" y="847.5" >nghttp3_c..</text>
</g>
<g >
<title>__fget (2 samples, 0.07%)</title><rect x="1073.7" y="421" width="0.8" height="15.0" fill="rgb(216,222,52)" rx="2" ry="2" />
<text  x="1076.65" y="431.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="69.2" y="389" width="0.5" height="15.0" fill="rgb(238,184,54)" rx="2" ry="2" />
<text  x="72.23" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;h2load::Session, std::default_delete&lt;h2load::Session&gt; &gt;::get (1 samples, 0.04%)</title><rect x="1130.8" y="1029" width="0.4" height="15.0" fill="rgb(225,181,1)" rx="2" ry="2" />
<text  x="1133.77" y="1039.5" ></text>
</g>
<g >
<title>elf_dynamic_do_Rela (1 samples, 0.04%)</title><rect x="1136.7" y="933" width="0.4" height="15.0" fill="rgb(224,25,22)" rx="2" ry="2" />
<text  x="1139.69" y="943.5" ></text>
</g>
<g >
<title>__libc_recvfrom (832 samples, 29.83%)</title><rect x="98.4" y="997" width="352.0" height="15.0" fill="rgb(249,44,11)" rx="2" ry="2" />
<text  x="101.43" y="1007.5" >__libc_recvfrom</text>
</g>
<g >
<title>std::__array_traits&lt;unsigned char, 65536ul&gt;::_S_ptr (1 samples, 0.04%)</title><rect x="59.1" y="1013" width="0.4" height="15.0" fill="rgb(249,75,51)" rx="2" ry="2" />
<text  x="62.08" y="1023.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (1 samples, 0.04%)</title><rect x="270.6" y="805" width="0.4" height="15.0" fill="rgb(206,24,23)" rx="2" ry="2" />
<text  x="273.62" y="815.5" ></text>
</g>
<g >
<title>_dl_map_object (1 samples, 0.04%)</title><rect x="1133.3" y="901" width="0.4" height="15.0" fill="rgb(240,22,49)" rx="2" ry="2" />
<text  x="1136.31" y="911.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.04%)</title><rect x="1094.0" y="741" width="0.4" height="15.0" fill="rgb(235,70,32)" rx="2" ry="2" />
<text  x="1096.96" y="751.5" ></text>
</g>
<g >
<title>ngtcp2_range_intersect (5 samples, 0.18%)</title><rect x="959.0" y="917" width="2.1" height="15.0" fill="rgb(219,229,31)" rx="2" ry="2" />
<text  x="961.99" y="927.5" ></text>
</g>
<g >
<title>[libngtcp2.so.0.0.0] (1 samples, 0.04%)</title><rect x="1061.4" y="981" width="0.4" height="15.0" fill="rgb(238,119,43)" rx="2" ry="2" />
<text  x="1064.38" y="991.5" ></text>
</g>
<g >
<title>elf_get_dynamic_info (1 samples, 0.04%)</title><rect x="1100.3" y="933" width="0.4" height="15.0" fill="rgb(232,207,49)" rx="2" ry="2" />
<text  x="1103.30" y="943.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.07%)</title><rect x="1073.7" y="437" width="0.8" height="15.0" fill="rgb(212,179,54)" rx="2" ry="2" />
<text  x="1076.65" y="447.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="71.8" y="997" width="0.4" height="15.0" fill="rgb(219,3,32)" rx="2" ry="2" />
<text  x="74.77" y="1007.5" ></text>
</g>
<g >
<title>finish_task_switch (2 samples, 0.07%)</title><rect x="1188.7" y="933" width="0.9" height="15.0" fill="rgb(232,197,9)" rx="2" ry="2" />
<text  x="1191.73" y="943.5" ></text>
</g>
<g >
<title>ngtcp2_map_find (12 samples, 0.43%)</title><rect x="672.6" y="853" width="5.0" height="15.0" fill="rgb(225,4,38)" rx="2" ry="2" />
<text  x="675.56" y="863.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.04%)</title><rect x="1082.5" y="309" width="0.5" height="15.0" fill="rgb(249,177,8)" rx="2" ry="2" />
<text  x="1085.53" y="319.5" ></text>
</g>
<g >
<title>__pthread_create_2_1 (1 samples, 0.04%)</title><rect x="1093.5" y="757" width="0.5" height="15.0" fill="rgb(238,166,30)" rx="2" ry="2" />
<text  x="1096.54" y="767.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (27 samples, 0.97%)</title><rect x="399.7" y="885" width="11.4" height="15.0" fill="rgb(221,137,46)" rx="2" ry="2" />
<text  x="402.67" y="895.5" ></text>
</g>
<g >
<title>ksys_read (1 samples, 0.04%)</title><rect x="1132.9" y="869" width="0.4" height="15.0" fill="rgb(213,60,16)" rx="2" ry="2" />
<text  x="1135.88" y="879.5" ></text>
</g>
<g >
<title>ngtcp2_crypto_recv_crypto_data_cb (1 samples, 0.04%)</title><rect x="450.4" y="885" width="0.5" height="15.0" fill="rgb(211,32,47)" rx="2" ry="2" />
<text  x="453.44" y="895.5" ></text>
</g>
<g >
<title>__queue_work (1 samples, 0.04%)</title><rect x="1184.1" y="837" width="0.4" height="15.0" fill="rgb(251,11,10)" rx="2" ry="2" />
<text  x="1187.08" y="847.5" ></text>
</g>
<g >
<title>execute_command_internal (3 samples, 0.11%)</title><rect x="1096.1" y="805" width="1.2" height="15.0" fill="rgb(210,55,18)" rx="2" ry="2" />
<text  x="1099.07" y="815.5" ></text>
</g>
<g >
<title>pktns_commit_recv_pkt_num (4 samples, 0.14%)</title><rect x="56.1" y="1013" width="1.7" height="15.0" fill="rgb(221,33,38)" rx="2" ry="2" />
<text  x="59.12" y="1023.5" ></text>
</g>
<g >
<title>rcu_core_si (1 samples, 0.04%)</title><rect x="1137.1" y="853" width="0.4" height="15.0" fill="rgb(222,90,51)" rx="2" ry="2" />
<text  x="1140.11" y="863.5" ></text>
</g>
<g >
<title>_dl_check_map_versions (1 samples, 0.04%)</title><rect x="1135.8" y="901" width="0.5" height="15.0" fill="rgb(244,206,33)" rx="2" ry="2" />
<text  x="1138.84" y="911.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="1094.4" y="245" width="0.4" height="15.0" fill="rgb(217,158,23)" rx="2" ry="2" />
<text  x="1097.38" y="255.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="69.2" y="661" width="0.5" height="15.0" fill="rgb(218,158,12)" rx="2" ry="2" />
<text  x="72.23" y="671.5" ></text>
</g>
<g >
<title>__alloc_dir (1 samples, 0.04%)</title><rect x="71.8" y="197" width="0.4" height="15.0" fill="rgb(207,54,36)" rx="2" ry="2" />
<text  x="74.77" y="207.5" ></text>
</g>
<g >
<title>execute_command (9 samples, 0.32%)</title><rect x="1094.0" y="965" width="3.8" height="15.0" fill="rgb(222,170,22)" rx="2" ry="2" />
<text  x="1096.96" y="975.5" ></text>
</g>
<g >
<title>__GI___wait4 (1 samples, 0.04%)</title><rect x="1094.0" y="853" width="0.4" height="15.0" fill="rgb(217,41,10)" rx="2" ry="2" />
<text  x="1096.96" y="863.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="71.8" y="165" width="0.4" height="15.0" fill="rgb(227,157,11)" rx="2" ry="2" />
<text  x="74.77" y="175.5" ></text>
</g>
<g >
<title>std::call_once&lt;void  (46 samples, 1.65%)</title><rect x="1071.1" y="821" width="19.5" height="15.0" fill="rgb(218,122,24)" rx="2" ry="2" />
<text  x="1074.11" y="831.5" ></text>
</g>
<g >
<title>execute_command_internal (2 samples, 0.07%)</title><rect x="1094.4" y="485" width="0.8" height="15.0" fill="rgb(233,189,37)" rx="2" ry="2" />
<text  x="1097.38" y="495.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="1094.0" y="709" width="0.4" height="15.0" fill="rgb(233,204,41)" rx="2" ry="2" />
<text  x="1096.96" y="719.5" ></text>
</g>
<g >
<title>ngtcp2_conn_lost_pkt_expiry (1 samples, 0.04%)</title><rect x="1024.6" y="965" width="0.4" height="15.0" fill="rgb(245,205,45)" rx="2" ry="2" />
<text  x="1027.57" y="975.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.07%)</title><rect x="1038.5" y="741" width="0.9" height="15.0" fill="rgb(240,75,4)" rx="2" ry="2" />
<text  x="1041.53" y="751.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned char, 65536ul&gt;::size (1 samples, 0.04%)</title><rect x="1020.8" y="997" width="0.4" height="15.0" fill="rgb(224,26,29)" rx="2" ry="2" />
<text  x="1023.76" y="1007.5" ></text>
</g>
<g >
<title>irq_work_run_list (1 samples, 0.04%)</title><rect x="1189.2" y="869" width="0.4" height="15.0" fill="rgb(239,83,44)" rx="2" ry="2" />
<text  x="1192.15" y="879.5" ></text>
</g>
<g >
<title>OPENSSL_LH_insert (1 samples, 0.04%)</title><rect x="1092.7" y="853" width="0.4" height="15.0" fill="rgb(235,103,37)" rx="2" ry="2" />
<text  x="1095.69" y="863.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.04%)</title><rect x="1046.1" y="853" width="0.5" height="15.0" fill="rgb(210,147,16)" rx="2" ry="2" />
<text  x="1049.15" y="863.5" ></text>
</g>
<g >
<title>kernel_wait4 (1 samples, 0.04%)</title><rect x="1096.9" y="405" width="0.4" height="15.0" fill="rgb(254,18,18)" rx="2" ry="2" />
<text  x="1099.92" y="415.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (2 samples, 0.07%)</title><rect x="1086.3" y="533" width="0.9" height="15.0" fill="rgb(215,183,12)" rx="2" ry="2" />
<text  x="1089.34" y="543.5" ></text>
</g>
<g >
<title>call_init (1 samples, 0.04%)</title><rect x="1091.4" y="997" width="0.4" height="15.0" fill="rgb(222,179,2)" rx="2" ry="2" />
<text  x="1094.42" y="1007.5" ></text>
</g>
<g >
<title>proc_single_show (1 samples, 0.04%)</title><rect x="1132.9" y="805" width="0.4" height="15.0" fill="rgb(222,228,1)" rx="2" ry="2" />
<text  x="1135.88" y="815.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="1094.8" y="293" width="0.4" height="15.0" fill="rgb(215,150,6)" rx="2" ry="2" />
<text  x="1097.80" y="303.5" ></text>
</g>
<g >
<title>parse_and_execute (1 samples, 0.04%)</title><rect x="71.8" y="373" width="0.4" height="15.0" fill="rgb(244,87,54)" rx="2" ry="2" />
<text  x="74.77" y="383.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (1 samples, 0.04%)</title><rect x="1135.0" y="773" width="0.4" height="15.0" fill="rgb(209,168,49)" rx="2" ry="2" />
<text  x="1138.00" y="783.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="1094.4" y="325" width="0.4" height="15.0" fill="rgb(213,169,10)" rx="2" ry="2" />
<text  x="1097.38" y="335.5" ></text>
</g>
<g >
<title>ngtcp2_ksl_lower_bound (23 samples, 0.82%)</title><rect x="861.7" y="917" width="9.7" height="15.0" fill="rgb(215,215,5)" rx="2" ry="2" />
<text  x="864.68" y="927.5" ></text>
</g>
<g >
<title>pktns_increase_ecn_counts (1 samples, 0.04%)</title><rect x="964.1" y="949" width="0.4" height="15.0" fill="rgb(221,37,20)" rx="2" ry="2" />
<text  x="967.07" y="959.5" ></text>
</g>
<g >
<title>_dl_init (1 samples, 0.04%)</title><rect x="1091.4" y="1013" width="0.4" height="15.0" fill="rgb(205,94,30)" rx="2" ry="2" />
<text  x="1094.42" y="1023.5" ></text>
</g>
<g >
<title>ngtcp2_crypto_create_nonce (3 samples, 0.11%)</title><rect x="45.5" y="1013" width="1.3" height="15.0" fill="rgb(220,47,17)" rx="2" ry="2" />
<text  x="48.54" y="1023.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_sock_addr (8 samples, 0.29%)</title><rect x="224.9" y="869" width="3.4" height="15.0" fill="rgb(208,173,15)" rx="2" ry="2" />
<text  x="227.93" y="879.5" ></text>
</g>
<g >
<title>expand_string_assignment (1 samples, 0.04%)</title><rect x="1096.1" y="645" width="0.4" height="15.0" fill="rgb(209,5,22)" rx="2" ry="2" />
<text  x="1099.07" y="655.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1 samples, 0.04%)</title><rect x="1095.7" y="213" width="0.4" height="15.0" fill="rgb(243,138,1)" rx="2" ry="2" />
<text  x="1098.65" y="223.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="71.8" y="501" width="0.4" height="15.0" fill="rgb(209,212,54)" rx="2" ry="2" />
<text  x="74.77" y="511.5" ></text>
</g>
<g >
<title>h2load::Client::record_ttfb (1 samples, 0.04%)</title><rect x="597.7" y="789" width="0.4" height="15.0" fill="rgb(224,46,2)" rx="2" ry="2" />
<text  x="600.67" y="799.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="1094.4" y="389" width="0.4" height="15.0" fill="rgb(223,43,31)" rx="2" ry="2" />
<text  x="1097.38" y="399.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.04%)</title><rect x="1091.4" y="821" width="0.4" height="15.0" fill="rgb(212,15,27)" rx="2" ry="2" />
<text  x="1094.42" y="831.5" ></text>
</g>
<g >
<title>ngtcp2_strm_update_rx_offset (6 samples, 0.22%)</title><rect x="729.7" y="933" width="2.5" height="15.0" fill="rgb(206,121,51)" rx="2" ry="2" />
<text  x="732.68" y="943.5" ></text>
</g>
<g >
<title>command_substitute (2 samples, 0.07%)</title><rect x="1095.2" y="389" width="0.9" height="15.0" fill="rgb(239,174,4)" rx="2" ry="2" />
<text  x="1098.23" y="399.5" ></text>
</g>
<g >
<title>std::random_device::random_device (1 samples, 0.04%)</title><rect x="1092.3" y="933" width="0.4" height="15.0" fill="rgb(237,187,54)" rx="2" ry="2" />
<text  x="1095.27" y="943.5" ></text>
</g>
<g >
<title>intel_idle (99 samples, 3.55%)</title><rect x="1140.1" y="917" width="41.9" height="15.0" fill="rgb(206,217,8)" rx="2" ry="2" />
<text  x="1143.08" y="927.5" >int..</text>
</g>
<g >
<title>parse_and_execute (2 samples, 0.07%)</title><rect x="1096.5" y="597" width="0.8" height="15.0" fill="rgb(233,66,17)" rx="2" ry="2" />
<text  x="1099.50" y="607.5" ></text>
</g>
<g >
<title>key_equal (1 samples, 0.04%)</title><rect x="51.9" y="997" width="0.4" height="15.0" fill="rgb(228,152,42)" rx="2" ry="2" />
<text  x="54.89" y="1007.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="1097.3" y="885" width="0.5" height="15.0" fill="rgb(226,79,5)" rx="2" ry="2" />
<text  x="1100.34" y="895.5" ></text>
</g>
<g >
<title>[bash] (2 samples, 0.07%)</title><rect x="1097.8" y="901" width="0.8" height="15.0" fill="rgb(252,35,44)" rx="2" ry="2" />
<text  x="1100.77" y="911.5" ></text>
</g>
<g >
<title>do_last (1 samples, 0.04%)</title><rect x="1092.3" y="789" width="0.4" height="15.0" fill="rgb(252,131,24)" rx="2" ry="2" />
<text  x="1095.27" y="799.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="69.2" y="309" width="0.5" height="15.0" fill="rgb(253,35,41)" rx="2" ry="2" />
<text  x="72.23" y="319.5" ></text>
</g>
<g >
<title>__fget (31 samples, 1.11%)</title><rect x="412.8" y="869" width="13.1" height="15.0" fill="rgb(212,208,17)" rx="2" ry="2" />
<text  x="415.78" y="879.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, h2load::Session*, std::default_delete&lt;h2load::Session&gt; &gt;::_M_head (16 samples, 0.57%)</title><rect x="700.9" y="821" width="6.8" height="15.0" fill="rgb(240,105,35)" rx="2" ry="2" />
<text  x="703.91" y="831.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (10 samples, 0.36%)</title><rect x="1080.4" y="421" width="4.3" height="15.0" fill="rgb(238,52,7)" rx="2" ry="2" />
<text  x="1083.42" y="431.5" ></text>
</g>
<g >
<title>userfaultfd_unmap_complete (1 samples, 0.04%)</title><rect x="71.8" y="37" width="0.4" height="15.0" fill="rgb(247,154,42)" rx="2" ry="2" />
<text  x="74.77" y="47.5" ></text>
</g>
<g >
<title>h2load::Client::read_quic (4 samples, 0.14%)</title><rect x="1123.2" y="1029" width="1.6" height="15.0" fill="rgb(225,125,6)" rx="2" ry="2" />
<text  x="1126.15" y="1039.5" ></text>
</g>
<g >
<title>__skb_try_recv_from_queue (2 samples, 0.07%)</title><rect x="273.2" y="869" width="0.8" height="15.0" fill="rgb(245,116,48)" rx="2" ry="2" />
<text  x="276.16" y="879.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="69.2" y="789" width="0.5" height="15.0" fill="rgb(207,167,44)" rx="2" ry="2" />
<text  x="72.23" y="799.5" ></text>
</g>
<g >
<title>_dl_map_object_from_fd (1 samples, 0.04%)</title><rect x="1133.3" y="885" width="0.4" height="15.0" fill="rgb(238,144,43)" rx="2" ry="2" />
<text  x="1136.31" y="895.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="69.2" y="901" width="0.5" height="15.0" fill="rgb(234,188,51)" rx="2" ry="2" />
<text  x="72.23" y="911.5" ></text>
</g>
<g >
<title>_dl_start (2 samples, 0.07%)</title><rect x="1133.3" y="1013" width="0.9" height="15.0" fill="rgb(237,181,18)" rx="2" ry="2" />
<text  x="1136.31" y="1023.5" ></text>
</g>
<g >
<title>ev_run (46 samples, 1.65%)</title><rect x="1071.1" y="549" width="19.5" height="15.0" fill="rgb(251,42,36)" rx="2" ry="2" />
<text  x="1074.11" y="559.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned char, 65536ul&gt;::data (1 samples, 0.04%)</title><rect x="1062.2" y="997" width="0.4" height="15.0" fill="rgb(253,151,23)" rx="2" ry="2" />
<text  x="1065.23" y="1007.5" ></text>
</g>
<g >
<title>nghttp3_stream_writev (1 samples, 0.04%)</title><rect x="1048.7" y="949" width="0.4" height="15.0" fill="rgb(243,203,50)" rx="2" ry="2" />
<text  x="1051.69" y="959.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned char, 1024ul&gt;::begin (9 samples, 0.32%)</title><rect x="1126.1" y="1013" width="3.8" height="15.0" fill="rgb(217,164,52)" rx="2" ry="2" />
<text  x="1129.11" y="1023.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.04%)</title><rect x="69.2" y="149" width="0.5" height="15.0" fill="rgb(232,124,48)" rx="2" ry="2" />
<text  x="72.23" y="159.5" ></text>
</g>
<g >
<title>std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;h2load::main (1 samples, 0.04%)</title><rect x="1093.5" y="805" width="0.5" height="15.0" fill="rgb(205,76,30)" rx="2" ry="2" />
<text  x="1096.54" y="815.5" ></text>
</g>
<g >
<title>_dl_receive_error (1 samples, 0.04%)</title><rect x="1135.8" y="949" width="0.5" height="15.0" fill="rgb(206,229,52)" rx="2" ry="2" />
<text  x="1138.84" y="959.5" ></text>
</g>
<g >
<title>h2load::Client::quic_recv_stream_data (3 samples, 0.11%)</title><rect x="1121.9" y="1013" width="1.3" height="15.0" fill="rgb(217,102,53)" rx="2" ry="2" />
<text  x="1124.88" y="1023.5" ></text>
</g>
<g >
<title>__free_pages_ok (1 samples, 0.04%)</title><rect x="384.0" y="709" width="0.4" height="15.0" fill="rgb(226,222,51)" rx="2" ry="2" />
<text  x="387.01" y="719.5" ></text>
</g>
<g >
<title>_dl_fixup (1 samples, 0.04%)</title><rect x="1093.5" y="709" width="0.5" height="15.0" fill="rgb(250,138,5)" rx="2" ry="2" />
<text  x="1096.54" y="719.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, h2load::Session*, std::default_delete&lt;h2load::Session&gt; &gt; (1 samples, 0.04%)</title><rect x="65.8" y="1013" width="0.5" height="15.0" fill="rgb(206,213,5)" rx="2" ry="2" />
<text  x="68.85" y="1023.5" ></text>
</g>
<g >
<title>[bash] (4 samples, 0.14%)</title><rect x="1094.4" y="517" width="1.7" height="15.0" fill="rgb(206,86,45)" rx="2" ry="2" />
<text  x="1097.38" y="527.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="71.8" y="421" width="0.4" height="15.0" fill="rgb(215,7,22)" rx="2" ry="2" />
<text  x="74.77" y="431.5" ></text>
</g>
<g >
<title>menu_select (3 samples, 0.11%)</title><rect x="1182.4" y="949" width="1.3" height="15.0" fill="rgb(235,197,42)" rx="2" ry="2" />
<text  x="1185.38" y="959.5" ></text>
</g>
<g >
<title>__brk (1 samples, 0.04%)</title><rect x="71.8" y="85" width="0.4" height="15.0" fill="rgb(220,106,21)" rx="2" ry="2" />
<text  x="74.77" y="95.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (33 samples, 1.18%)</title><rect x="763.1" y="885" width="14.0" height="15.0" fill="rgb(226,94,18)" rx="2" ry="2" />
<text  x="766.10" y="895.5" ></text>
</g>
<g >
<title>ngtcp2_ppe_init (3 samples, 0.11%)</title><rect x="1058.8" y="949" width="1.3" height="15.0" fill="rgb(213,171,51)" rx="2" ry="2" />
<text  x="1061.84" y="959.5" ></text>
</g>
<g >
<title>do_mprotect_pkey (1 samples, 0.04%)</title><rect x="1133.7" y="853" width="0.5" height="15.0" fill="rgb(238,174,31)" rx="2" ry="2" />
<text  x="1136.73" y="863.5" ></text>
</g>
<g >
<title>log_pkt_hd (2 samples, 0.07%)</title><rect x="1063.1" y="1013" width="0.8" height="15.0" fill="rgb(220,115,22)" rx="2" ry="2" />
<text  x="1066.07" y="1023.5" ></text>
</g>
<g >
<title>__run_exit_handlers (1 samples, 0.04%)</title><rect x="1091.8" y="981" width="0.5" height="15.0" fill="rgb(222,136,15)" rx="2" ry="2" />
<text  x="1094.84" y="991.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.04%)</title><rect x="1132.9" y="853" width="0.4" height="15.0" fill="rgb(248,180,43)" rx="2" ry="2" />
<text  x="1135.88" y="863.5" ></text>
</g>
<g >
<title>execute_command (4 samples, 0.14%)</title><rect x="1094.4" y="789" width="1.7" height="15.0" fill="rgb(227,218,31)" rx="2" ry="2" />
<text  x="1097.38" y="799.5" ></text>
</g>
<g >
<title>call_init (1 samples, 0.04%)</title><rect x="1135.4" y="997" width="0.4" height="15.0" fill="rgb(250,219,37)" rx="2" ry="2" />
<text  x="1138.42" y="1007.5" ></text>
</g>
<g >
<title>enter_lazy_tlb (1 samples, 0.04%)</title><rect x="1083.4" y="373" width="0.4" height="15.0" fill="rgb(237,88,31)" rx="2" ry="2" />
<text  x="1086.38" y="383.5" ></text>
</g>
<g >
<title>nghttp3_conn_on_data (166 samples, 5.95%)</title><rect x="587.5" y="821" width="70.3" height="15.0" fill="rgb(240,55,12)" rx="2" ry="2" />
<text  x="590.52" y="831.5" >nghttp3..</text>
</g>
<g >
<title>openssl_config_int (1 samples, 0.04%)</title><rect x="1093.1" y="869" width="0.4" height="15.0" fill="rgb(210,5,21)" rx="2" ry="2" />
<text  x="1096.11" y="879.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="1094.4" y="405" width="0.4" height="15.0" fill="rgb(227,107,29)" rx="2" ry="2" />
<text  x="1097.38" y="415.5" ></text>
</g>
<g >
<title>page_frag_free (22 samples, 0.79%)</title><rect x="389.5" y="821" width="9.3" height="15.0" fill="rgb(216,210,21)" rx="2" ry="2" />
<text  x="392.51" y="831.5" ></text>
</g>
<g >
<title>ip_idents_reserve (1 samples, 0.04%)</title><rect x="1033.5" y="757" width="0.4" height="15.0" fill="rgb(205,213,46)" rx="2" ry="2" />
<text  x="1036.46" y="767.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (46 samples, 1.65%)</title><rect x="1071.1" y="997" width="19.5" height="15.0" fill="rgb(221,2,7)" rx="2" ry="2" />
<text  x="1074.11" y="1007.5" ></text>
</g>
<g >
<title>queue_work_on (1 samples, 0.04%)</title><rect x="631.5" y="565" width="0.4" height="15.0" fill="rgb(236,170,33)" rx="2" ry="2" />
<text  x="634.52" y="575.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="1094.8" y="277" width="0.4" height="15.0" fill="rgb(213,35,20)" rx="2" ry="2" />
<text  x="1097.80" y="287.5" ></text>
</g>
<g >
<title>[libngtcp2_crypto_openssl.so.0.0.0] (3 samples, 0.11%)</title><rect x="818.1" y="885" width="1.3" height="15.0" fill="rgb(223,190,44)" rx="2" ry="2" />
<text  x="821.10" y="895.5" ></text>
</g>
<g >
<title>lock_sock_nested (3 samples, 0.11%)</title><rect x="370.5" y="869" width="1.2" height="15.0" fill="rgb(253,137,2)" rx="2" ry="2" />
<text  x="373.47" y="879.5" ></text>
</g>
<g >
<title>udp_skb_destructor (9 samples, 0.32%)</title><rect x="267.2" y="837" width="3.8" height="15.0" fill="rgb(229,136,33)" rx="2" ry="2" />
<text  x="270.24" y="847.5" ></text>
</g>
<g >
<title>OPENSSL_init_ssl (2 samples, 0.07%)</title><rect x="1092.7" y="949" width="0.8" height="15.0" fill="rgb(235,134,6)" rx="2" ry="2" />
<text  x="1095.69" y="959.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;h2load::Session, std::default_delete&lt;h2load::Session&gt; &gt;::_M_ptr (1 samples, 0.04%)</title><rect x="1130.8" y="1013" width="0.4" height="15.0" fill="rgb(237,145,17)" rx="2" ry="2" />
<text  x="1133.77" y="1023.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.04%)</title><rect x="1091.0" y="1029" width="0.4" height="15.0" fill="rgb(237,10,7)" rx="2" ry="2" />
<text  x="1094.00" y="1039.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="1094.0" y="901" width="0.4" height="15.0" fill="rgb(209,91,13)" rx="2" ry="2" />
<text  x="1096.96" y="911.5" ></text>
</g>
<g >
<title>ngtcp2_map_find (35 samples, 1.25%)</title><rect x="709.8" y="917" width="14.8" height="15.0" fill="rgb(209,39,48)" rx="2" ry="2" />
<text  x="712.79" y="927.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (4 samples, 0.14%)</title><rect x="1131.2" y="1029" width="1.7" height="15.0" fill="rgb(254,157,18)" rx="2" ry="2" />
<text  x="1134.19" y="1039.5" ></text>
</g>
<g >
<title>elf_dynamic_do_Rela (2 samples, 0.07%)</title><rect x="1099.5" y="933" width="0.8" height="15.0" fill="rgb(233,141,20)" rx="2" ry="2" />
<text  x="1102.46" y="943.5" ></text>
</g>
<g >
<title>nghttp3_conn_read_stream (300 samples, 10.76%)</title><rect x="544.8" y="869" width="126.9" height="15.0" fill="rgb(207,192,39)" rx="2" ry="2" />
<text  x="547.79" y="879.5" >nghttp3_conn_re..</text>
</g>
<g >
<title>dlerror_run (1 samples, 0.04%)</title><rect x="1135.0" y="805" width="0.4" height="15.0" fill="rgb(250,93,18)" rx="2" ry="2" />
<text  x="1138.00" y="815.5" ></text>
</g>
<g >
<title>__pthread_once_slow (1 samples, 0.04%)</title><rect x="1093.1" y="821" width="0.4" height="15.0" fill="rgb(231,79,4)" rx="2" ry="2" />
<text  x="1096.11" y="831.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.04%)</title><rect x="1080.8" y="389" width="0.5" height="15.0" fill="rgb(218,144,0)" rx="2" ry="2" />
<text  x="1083.84" y="399.5" ></text>
</g>
<g >
<title>__do_execve_file.isra.0 (1 samples, 0.04%)</title><rect x="1095.7" y="197" width="0.4" height="15.0" fill="rgb(211,25,52)" rx="2" ry="2" />
<text  x="1098.65" y="207.5" ></text>
</g>
<g >
<title>EVP_DigestSignInit (1 samples, 0.04%)</title><rect x="450.4" y="773" width="0.5" height="15.0" fill="rgb(218,102,20)" rx="2" ry="2" />
<text  x="453.44" y="783.5" ></text>
</g>
<g >
<title>reweight_entity (1 samples, 0.04%)</title><rect x="1184.5" y="869" width="0.4" height="15.0" fill="rgb(231,168,1)" rx="2" ry="2" />
<text  x="1187.50" y="879.5" ></text>
</g>
<g >
<title>std::thread::_M_start_thread (1 samples, 0.04%)</title><rect x="1093.5" y="773" width="0.5" height="15.0" fill="rgb(209,135,34)" rx="2" ry="2" />
<text  x="1096.54" y="783.5" ></text>
</g>
<g >
<title>[libngtcp2.so.0.0.0] (2 samples, 0.07%)</title><rect x="908.2" y="901" width="0.9" height="15.0" fill="rgb(214,154,35)" rx="2" ry="2" />
<text  x="911.22" y="911.5" ></text>
</g>
<g >
<title>lock_hrtimer_base (1 samples, 0.04%)</title><rect x="1081.3" y="389" width="0.4" height="15.0" fill="rgb(213,140,11)" rx="2" ry="2" />
<text  x="1084.27" y="399.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;void&gt;, std::__future_base::_Result_base::_Deleter&gt;, std::thread::_Invoker&lt;std::tuple&lt;h2load::main (46 samples, 1.65%)</title><rect x="1071.1" y="661" width="19.5" height="15.0" fill="rgb(214,164,45)" rx="2" ry="2" />
<text  x="1074.11" y="671.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.04%)</title><rect x="1184.1" y="741" width="0.4" height="15.0" fill="rgb(224,195,17)" rx="2" ry="2" />
<text  x="1187.08" y="751.5" ></text>
</g>
<g >
<title>ngtcp2_cpymem (33 samples, 1.18%)</title><rect x="903.1" y="933" width="14.0" height="15.0" fill="rgb(214,210,6)" rx="2" ry="2" />
<text  x="906.14" y="943.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1 samples, 0.04%)</title><rect x="1121.0" y="997" width="0.5" height="15.0" fill="rgb(214,156,35)" rx="2" ry="2" />
<text  x="1124.04" y="1007.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="69.2" y="869" width="0.5" height="15.0" fill="rgb(228,142,45)" rx="2" ry="2" />
<text  x="72.23" y="879.5" ></text>
</g>
<g >
<title>udp4_hwcsum (1 samples, 0.04%)</title><rect x="1045.3" y="789" width="0.4" height="15.0" fill="rgb(206,114,43)" rx="2" ry="2" />
<text  x="1048.30" y="799.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="71.8" y="581" width="0.4" height="15.0" fill="rgb(228,5,3)" rx="2" ry="2" />
<text  x="74.77" y="591.5" ></text>
</g>
<g >
<title>__consume_stateless_skb (59 samples, 2.12%)</title><rect x="373.9" y="853" width="24.9" height="15.0" fill="rgb(251,221,19)" rx="2" ry="2" />
<text  x="376.86" y="863.5" >_..</text>
</g>
<g >
<title>ngtcp2_ksl_len (4 samples, 0.14%)</title><rect x="962.4" y="933" width="1.7" height="15.0" fill="rgb(240,180,2)" rx="2" ry="2" />
<text  x="965.38" y="943.5" ></text>
</g>
<g >
<title>__libc_start_main (1 samples, 0.04%)</title><rect x="69.2" y="1013" width="0.5" height="15.0" fill="rgb(251,62,17)" rx="2" ry="2" />
<text  x="72.23" y="1023.5" ></text>
</g>
<g >
<title>udp_recvmsg (465 samples, 16.67%)</title><rect x="202.5" y="885" width="196.7" height="15.0" fill="rgb(222,67,51)" rx="2" ry="2" />
<text  x="205.51" y="895.5" >udp_recvmsg</text>
</g>
<g >
<title>ngtcp2_pkt_decode_hd_short (61 samples, 2.19%)</title><rect x="891.3" y="949" width="25.8" height="15.0" fill="rgb(247,56,48)" rx="2" ry="2" />
<text  x="894.30" y="959.5" >n..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1092.3" y="885" width="0.4" height="15.0" fill="rgb(224,151,23)" rx="2" ry="2" />
<text  x="1095.27" y="895.5" ></text>
</g>
<g >
<title>conn_key_phase_changed (2 samples, 0.07%)</title><rect x="518.1" y="949" width="0.9" height="15.0" fill="rgb(230,106,8)" rx="2" ry="2" />
<text  x="521.13" y="959.5" ></text>
</g>
<g >
<title>ngtcp2_get_pkt_num (5 samples, 0.18%)</title><rect x="800.8" y="933" width="2.1" height="15.0" fill="rgb(226,83,11)" rx="2" ry="2" />
<text  x="803.76" y="943.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (3 samples, 0.11%)</title><rect x="1044.0" y="645" width="1.3" height="15.0" fill="rgb(221,205,37)" rx="2" ry="2" />
<text  x="1047.03" y="655.5" ></text>
</g>
<g >
<title>[bash] (4 samples, 0.14%)</title><rect x="1094.4" y="757" width="1.7" height="15.0" fill="rgb(252,32,42)" rx="2" ry="2" />
<text  x="1097.38" y="767.5" ></text>
</g>
<g >
<title>_copy_to_user (1 samples, 0.04%)</title><rect x="178.8" y="917" width="0.4" height="15.0" fill="rgb(243,48,27)" rx="2" ry="2" />
<text  x="181.81" y="927.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="71.8" y="933" width="0.4" height="15.0" fill="rgb(250,224,8)" rx="2" ry="2" />
<text  x="74.77" y="943.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="69.2" y="261" width="0.5" height="15.0" fill="rgb(207,179,46)" rx="2" ry="2" />
<text  x="72.23" y="271.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (6 samples, 0.22%)</title><rect x="1137.5" y="917" width="2.6" height="15.0" fill="rgb(251,143,42)" rx="2" ry="2" />
<text  x="1140.54" y="927.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.07%)</title><rect x="260.9" y="853" width="0.8" height="15.0" fill="rgb(212,195,36)" rx="2" ry="2" />
<text  x="263.89" y="863.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="1097.3" y="869" width="0.5" height="15.0" fill="rgb(221,11,31)" rx="2" ry="2" />
<text  x="1100.34" y="879.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="69.2" y="581" width="0.5" height="15.0" fill="rgb(251,152,51)" rx="2" ry="2" />
<text  x="72.23" y="591.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.29%)</title><rect x="1118.5" y="1029" width="3.4" height="15.0" fill="rgb(236,81,43)" rx="2" ry="2" />
<text  x="1121.50" y="1039.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (691 samples, 24.78%)</title><rect x="145.4" y="981" width="292.3" height="15.0" fill="rgb(231,117,49)" rx="2" ry="2" />
<text  x="148.39" y="991.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>discard_slab (2 samples, 0.07%)</title><rect x="383.6" y="757" width="0.8" height="15.0" fill="rgb(253,145,30)" rx="2" ry="2" />
<text  x="386.59" y="767.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1095.7" y="245" width="0.4" height="15.0" fill="rgb(246,69,51)" rx="2" ry="2" />
<text  x="1098.65" y="255.5" ></text>
</g>
<g >
<title>perf_event_mmap (1 samples, 0.04%)</title><rect x="1099.0" y="821" width="0.5" height="15.0" fill="rgb(215,207,18)" rx="2" ry="2" />
<text  x="1102.04" y="831.5" ></text>
</g>
<g >
<title>ngtcp2_conn_close_stream_if_shut_rdwr (4 samples, 0.14%)</title><rect x="707.7" y="933" width="1.7" height="15.0" fill="rgb(205,167,49)" rx="2" ry="2" />
<text  x="710.68" y="943.5" ></text>
</g>
<g >
<title>sockaddr_eq (3 samples, 0.11%)</title><rect x="997.5" y="933" width="1.3" height="15.0" fill="rgb(227,193,3)" rx="2" ry="2" />
<text  x="1000.49" y="943.5" ></text>
</g>
<g >
<title>h2load::(anonymous namespace)::writecb (1 samples, 0.04%)</title><rect x="1090.2" y="517" width="0.4" height="15.0" fill="rgb(206,161,1)" rx="2" ry="2" />
<text  x="1093.15" y="527.5" ></text>
</g>
<g >
<title>ip_send_skb (18 samples, 0.65%)</title><rect x="1037.7" y="789" width="7.6" height="15.0" fill="rgb(230,103,21)" rx="2" ry="2" />
<text  x="1040.69" y="799.5" ></text>
</g>
<g >
<title>h2load::Client::write_quic (99 samples, 3.55%)</title><rect x="1021.2" y="1013" width="41.9" height="15.0" fill="rgb(245,77,39)" rx="2" ry="2" />
<text  x="1024.19" y="1023.5" >h2l..</text>
</g>
<g >
<title>ngtcp2_ksl_range_exclusive_compar (1 samples, 0.04%)</title><rect x="989.0" y="885" width="0.5" height="15.0" fill="rgb(206,26,24)" rx="2" ry="2" />
<text  x="992.03" y="895.5" ></text>
</g>
<g >
<title>ep_modify (3 samples, 0.11%)</title><rect x="1074.5" y="453" width="1.3" height="15.0" fill="rgb(212,75,18)" rx="2" ry="2" />
<text  x="1077.50" y="463.5" ></text>
</g>
<g >
<title>udp_recvmsg (1 samples, 0.04%)</title><rect x="411.1" y="901" width="0.4" height="15.0" fill="rgb(213,169,19)" rx="2" ry="2" />
<text  x="414.09" y="911.5" ></text>
</g>
<g >
<title>[bash] (4 samples, 0.14%)</title><rect x="1094.4" y="709" width="1.7" height="15.0" fill="rgb(248,89,14)" rx="2" ry="2" />
<text  x="1097.38" y="719.5" ></text>
</g>
<g >
<title>dl_open_worker (1 samples, 0.04%)</title><rect x="1135.0" y="709" width="0.4" height="15.0" fill="rgb(232,137,18)" rx="2" ry="2" />
<text  x="1138.00" y="719.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.04%)</title><rect x="398.8" y="853" width="0.4" height="15.0" fill="rgb(221,171,21)" rx="2" ry="2" />
<text  x="401.82" y="863.5" ></text>
</g>
<g >
<title>kernel_wait4 (1 samples, 0.04%)</title><rect x="1094.0" y="773" width="0.4" height="15.0" fill="rgb(234,226,38)" rx="2" ry="2" />
<text  x="1096.96" y="783.5" ></text>
</g>
<g >
<title>h2load::Http3Session::recv_data (3 samples, 0.11%)</title><rect x="1124.8" y="1029" width="1.3" height="15.0" fill="rgb(252,79,47)" rx="2" ry="2" />
<text  x="1127.84" y="1039.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="69.2" y="485" width="0.5" height="15.0" fill="rgb(211,120,42)" rx="2" ry="2" />
<text  x="72.23" y="495.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="1098.6" y="773" width="0.4" height="15.0" fill="rgb(240,1,41)" rx="2" ry="2" />
<text  x="1101.61" y="783.5" ></text>
</g>
<g >
<title>__GI_exit (1 samples, 0.04%)</title><rect x="1091.8" y="997" width="0.5" height="15.0" fill="rgb(226,52,47)" rx="2" ry="2" />
<text  x="1094.84" y="1007.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="1094.8" y="389" width="0.4" height="15.0" fill="rgb(234,170,37)" rx="2" ry="2" />
<text  x="1097.80" y="399.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="69.2" y="821" width="0.5" height="15.0" fill="rgb(250,167,22)" rx="2" ry="2" />
<text  x="72.23" y="831.5" ></text>
</g>
<g >
<title>schedule_idle (5 samples, 0.18%)</title><rect x="1187.9" y="965" width="2.1" height="15.0" fill="rgb(235,14,1)" rx="2" ry="2" />
<text  x="1190.88" y="975.5" ></text>
</g>
<g >
<title>_dl_start_final (2 samples, 0.07%)</title><rect x="1133.3" y="997" width="0.9" height="15.0" fill="rgb(221,178,40)" rx="2" ry="2" />
<text  x="1136.31" y="1007.5" ></text>
</g>
<g >
<title>std::random_device::_M_init (1 samples, 0.04%)</title><rect x="1092.3" y="917" width="0.4" height="15.0" fill="rgb(244,170,17)" rx="2" ry="2" />
<text  x="1095.27" y="927.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.04%)</title><rect x="1043.6" y="645" width="0.4" height="15.0" fill="rgb(226,8,35)" rx="2" ry="2" />
<text  x="1046.61" y="655.5" ></text>
</g>
<g >
<title>[bash] (4 samples, 0.14%)</title><rect x="1094.4" y="613" width="1.7" height="15.0" fill="rgb(220,113,9)" rx="2" ry="2" />
<text  x="1097.38" y="623.5" ></text>
</g>
<g >
<title>key_equal (1 samples, 0.04%)</title><rect x="872.3" y="901" width="0.4" height="15.0" fill="rgb(235,207,15)" rx="2" ry="2" />
<text  x="875.26" y="911.5" ></text>
</g>
<g >
<title>decrypt_pkt (2 samples, 0.07%)</title><rect x="70.9" y="1013" width="0.9" height="15.0" fill="rgb(245,0,53)" rx="2" ry="2" />
<text  x="73.93" y="1023.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (1 samples, 0.04%)</title><rect x="1027.1" y="837" width="0.4" height="15.0" fill="rgb(250,180,38)" rx="2" ry="2" />
<text  x="1030.11" y="847.5" ></text>
</g>
<g >
<title>execute_command (3 samples, 0.11%)</title><rect x="1096.1" y="869" width="1.2" height="15.0" fill="rgb(228,0,48)" rx="2" ry="2" />
<text  x="1099.07" y="879.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1133.7" y="885" width="0.5" height="15.0" fill="rgb(254,117,15)" rx="2" ry="2" />
<text  x="1136.73" y="895.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="1135.4" y="885" width="0.4" height="15.0" fill="rgb(228,130,23)" rx="2" ry="2" />
<text  x="1138.42" y="895.5" ></text>
</g>
<g >
<title>shell_glob_filename (1 samples, 0.04%)</title><rect x="71.8" y="277" width="0.4" height="15.0" fill="rgb(213,154,46)" rx="2" ry="2" />
<text  x="74.77" y="287.5" ></text>
</g>
<g >
<title>[bash] (2 samples, 0.07%)</title><rect x="1095.2" y="341" width="0.9" height="15.0" fill="rgb(217,119,1)" rx="2" ry="2" />
<text  x="1098.23" y="351.5" ></text>
</g>
<g >
<title>put_cpu_partial (1 samples, 0.04%)</title><rect x="384.4" y="805" width="0.5" height="15.0" fill="rgb(214,19,46)" rx="2" ry="2" />
<text  x="387.44" y="815.5" ></text>
</g>
<g >
<title>conn_prepare_key_update (1 samples, 0.04%)</title><rect x="1051.2" y="965" width="0.4" height="15.0" fill="rgb(207,60,38)" rx="2" ry="2" />
<text  x="1054.23" y="975.5" ></text>
</g>
<g >
<title>conn_recv_pkt (2 samples, 0.07%)</title><rect x="70.1" y="1013" width="0.8" height="15.0" fill="rgb(208,183,36)" rx="2" ry="2" />
<text  x="73.08" y="1023.5" ></text>
</g>
<g >
<title>ossl_init_engine_dynamic_ossl_ (1 samples, 0.04%)</title><rect x="1093.1" y="805" width="0.4" height="15.0" fill="rgb(251,29,12)" rx="2" ry="2" />
<text  x="1096.11" y="815.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (17 samples, 0.61%)</title><rect x="358.2" y="869" width="7.2" height="15.0" fill="rgb(208,6,18)" rx="2" ry="2" />
<text  x="361.20" y="879.5" ></text>
</g>
<g >
<title>flush_tlb_func_common.constprop.0 (1 samples, 0.04%)</title><rect x="1136.3" y="773" width="0.4" height="15.0" fill="rgb(211,167,3)" rx="2" ry="2" />
<text  x="1139.27" y="783.5" ></text>
</g>
<g >
<title>nghttp3_stream_is_blocked (2 samples, 0.07%)</title><rect x="1049.1" y="965" width="0.9" height="15.0" fill="rgb(222,124,46)" rx="2" ry="2" />
<text  x="1052.11" y="975.5" ></text>
</g>
<g >
<title>start_secondary (125 samples, 4.48%)</title><rect x="1137.1" y="1013" width="52.9" height="15.0" fill="rgb(221,193,45)" rx="2" ry="2" />
<text  x="1140.11" y="1023.5" >start..</text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="1098.6" y="821" width="0.4" height="15.0" fill="rgb(229,95,2)" rx="2" ry="2" />
<text  x="1101.61" y="831.5" ></text>
</g>
<g >
<title>[unknown] (2,372 samples, 85.05%)</title><rect x="67.5" y="1029" width="1003.6" height="15.0" fill="rgb(221,1,34)" rx="2" ry="2" />
<text  x="70.54" y="1039.5" >[unknown]</text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="1094.4" y="357" width="0.4" height="15.0" fill="rgb(211,103,14)" rx="2" ry="2" />
<text  x="1097.38" y="367.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.04%)</title><rect x="1121.5" y="965" width="0.4" height="15.0" fill="rgb(248,145,29)" rx="2" ry="2" />
<text  x="1124.46" y="975.5" ></text>
</g>
<g >
<title>fq_codel_dequeue (1 samples, 0.04%)</title><rect x="1041.1" y="661" width="0.4" height="15.0" fill="rgb(224,98,19)" rx="2" ry="2" />
<text  x="1044.07" y="671.5" ></text>
</g>
<g >
<title>execute_command_internal (2 samples, 0.07%)</title><rect x="1095.2" y="309" width="0.9" height="15.0" fill="rgb(254,213,1)" rx="2" ry="2" />
<text  x="1098.23" y="319.5" ></text>
</g>
<g >
<title>parse_command (2 samples, 0.07%)</title><rect x="1097.8" y="949" width="0.8" height="15.0" fill="rgb(245,38,9)" rx="2" ry="2" />
<text  x="1100.77" y="959.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="69.2" y="805" width="0.5" height="15.0" fill="rgb(253,115,11)" rx="2" ry="2" />
<text  x="72.23" y="815.5" ></text>
</g>
<g >
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="1027.5" y="821" width="0.5" height="15.0" fill="rgb(209,125,27)" rx="2" ry="2" />
<text  x="1030.53" y="831.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;int  (2 samples, 0.07%)</title><rect x="1088.0" y="469" width="0.9" height="15.0" fill="rgb(225,150,46)" rx="2" ry="2" />
<text  x="1091.04" y="479.5" ></text>
</g>
<g >
<title>dbs_irq_work (1 samples, 0.04%)</title><rect x="1189.2" y="853" width="0.4" height="15.0" fill="rgb(243,19,10)" rx="2" ry="2" />
<text  x="1192.15" y="863.5" ></text>
</g>
<g >
<title>parse_and_execute (1 samples, 0.04%)</title><rect x="1097.3" y="837" width="0.5" height="15.0" fill="rgb(241,37,48)" rx="2" ry="2" />
<text  x="1100.34" y="847.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="1096.9" y="501" width="0.4" height="15.0" fill="rgb(220,229,42)" rx="2" ry="2" />
<text  x="1099.92" y="511.5" ></text>
</g>
<g >
<title>ngtcp2_map_find (1 samples, 0.04%)</title><rect x="53.6" y="1013" width="0.4" height="15.0" fill="rgb(227,182,23)" rx="2" ry="2" />
<text  x="56.58" y="1023.5" ></text>
</g>
<g >
<title>__split_vma (1 samples, 0.04%)</title><rect x="1133.7" y="805" width="0.5" height="15.0" fill="rgb(249,76,29)" rx="2" ry="2" />
<text  x="1136.73" y="815.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="1094.4" y="309" width="0.4" height="15.0" fill="rgb(214,215,13)" rx="2" ry="2" />
<text  x="1097.38" y="319.5" ></text>
</g>
<g >
<title>ngtcp2_addr_eq (6 samples, 0.22%)</title><rect x="996.2" y="949" width="2.6" height="15.0" fill="rgb(217,93,3)" rx="2" ry="2" />
<text  x="999.22" y="959.5" ></text>
</g>
<g >
<title>__free_slab (1 samples, 0.04%)</title><rect x="384.0" y="741" width="0.4" height="15.0" fill="rgb(243,204,41)" rx="2" ry="2" />
<text  x="387.01" y="751.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="1094.4" y="277" width="0.4" height="15.0" fill="rgb(207,174,37)" rx="2" ry="2" />
<text  x="1097.38" y="287.5" ></text>
</g>
<g >
<title>_dl_protect_relro (1 samples, 0.04%)</title><rect x="1099.0" y="933" width="0.5" height="15.0" fill="rgb(241,28,23)" rx="2" ry="2" />
<text  x="1102.04" y="943.5" ></text>
</g>
<g >
<title>iov_iter_advance (1 samples, 0.04%)</title><rect x="1029.6" y="741" width="0.5" height="15.0" fill="rgb(234,92,39)" rx="2" ry="2" />
<text  x="1032.65" y="751.5" ></text>
</g>
<g >
<title>std::__invfwd&lt;h2load::Client&amp;, h2load::Client&amp;&gt; (2 samples, 0.07%)</title><rect x="1088.0" y="421" width="0.9" height="15.0" fill="rgb(230,46,9)" rx="2" ry="2" />
<text  x="1091.04" y="431.5" ></text>
</g>
<g >
<title>__do_execve_file.isra.0 (1 samples, 0.04%)</title><rect x="1096.5" y="421" width="0.4" height="15.0" fill="rgb(232,163,54)" rx="2" ry="2" />
<text  x="1099.50" y="431.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, h2load::Session*, std::default_delete&lt;h2load::Session&gt; &gt; (1 samples, 0.04%)</title><rect x="1130.3" y="1029" width="0.5" height="15.0" fill="rgb(212,141,52)" rx="2" ry="2" />
<text  x="1133.34" y="1039.5" ></text>
</g>
<g >
<title>h2load::Worker::run (46 samples, 1.65%)</title><rect x="1071.1" y="565" width="19.5" height="15.0" fill="rgb(252,39,12)" rx="2" ry="2" />
<text  x="1074.11" y="575.5" ></text>
</g>
<g >
<title>cpuidle_select (3 samples, 0.11%)</title><rect x="1182.4" y="965" width="1.3" height="15.0" fill="rgb(210,32,21)" rx="2" ry="2" />
<text  x="1185.38" y="975.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (2 samples, 0.07%)</title><rect x="1079.2" y="389" width="0.8" height="15.0" fill="rgb(208,36,37)" rx="2" ry="2" />
<text  x="1082.15" y="399.5" ></text>
</g>
<g >
<title>do_idle (125 samples, 4.48%)</title><rect x="1137.1" y="981" width="52.9" height="15.0" fill="rgb(230,65,7)" rx="2" ry="2" />
<text  x="1140.11" y="991.5" >do_idle</text>
</g>
<g >
<title>__GI___wait4 (1 samples, 0.04%)</title><rect x="1096.9" y="485" width="0.4" height="15.0" fill="rgb(246,149,53)" rx="2" ry="2" />
<text  x="1099.92" y="495.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.04%)</title><rect x="201.2" y="885" width="0.5" height="15.0" fill="rgb(210,154,8)" rx="2" ry="2" />
<text  x="204.24" y="895.5" ></text>
</g>
<g >
<title>sock_alloc_send_pskb (6 samples, 0.22%)</title><rect x="1030.9" y="757" width="2.6" height="15.0" fill="rgb(205,52,41)" rx="2" ry="2" />
<text  x="1033.92" y="767.5" ></text>
</g>
<g >
<title>ev_now (26 samples, 0.93%)</title><rect x="463.1" y="981" width="11.0" height="15.0" fill="rgb(248,110,42)" rx="2" ry="2" />
<text  x="466.13" y="991.5" ></text>
</g>
<g >
<title>key_equal (1 samples, 0.04%)</title><rect x="872.3" y="885" width="0.4" height="15.0" fill="rgb(238,163,24)" rx="2" ry="2" />
<text  x="875.26" y="895.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.04%)</title><rect x="1121.0" y="901" width="0.5" height="15.0" fill="rgb(233,115,8)" rx="2" ry="2" />
<text  x="1124.04" y="911.5" ></text>
</g>
<g >
<title>ep_poll (19 samples, 0.68%)</title><rect x="1077.9" y="437" width="8.0" height="15.0" fill="rgb(217,223,2)" rx="2" ry="2" />
<text  x="1080.88" y="447.5" ></text>
</g>
<g >
<title>ngtcp2_pkt_adjust_pkt_num (11 samples, 0.39%)</title><rect x="877.8" y="949" width="4.6" height="15.0" fill="rgb(213,228,21)" rx="2" ry="2" />
<text  x="880.76" y="959.5" ></text>
</g>
<g >
<title>h2load::Client::record_ttfb (87 samples, 3.12%)</title><rect x="601.9" y="773" width="36.8" height="15.0" fill="rgb(244,226,5)" rx="2" ry="2" />
<text  x="604.90" y="783.5" >h2l..</text>
</g>
<g >
<title>x86_pmu_enable (5 samples, 0.18%)</title><rect x="1138.0" y="773" width="2.1" height="15.0" fill="rgb(226,111,16)" rx="2" ry="2" />
<text  x="1140.96" y="783.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (2 samples, 0.07%)</title><rect x="1099.5" y="901" width="0.8" height="15.0" fill="rgb(231,90,31)" rx="2" ry="2" />
<text  x="1102.46" y="911.5" ></text>
</g>
<g >
<title>swapper (125 samples, 4.48%)</title><rect x="1137.1" y="1045" width="52.9" height="15.0" fill="rgb(249,133,42)" rx="2" ry="2" />
<text  x="1140.11" y="1055.5" >swapper</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1133.3" y="837" width="0.4" height="15.0" fill="rgb(230,52,49)" rx="2" ry="2" />
<text  x="1136.31" y="847.5" ></text>
</g>
<g >
<title>ksl_bsearch (72 samples, 2.58%)</title><rect x="746.6" y="917" width="30.5" height="15.0" fill="rgb(241,173,3)" rx="2" ry="2" />
<text  x="749.60" y="927.5" >ks..</text>
</g>
<g >
<title>sched_ttwu_pending (10 samples, 0.36%)</title><rect x="1183.7" y="965" width="4.2" height="15.0" fill="rgb(245,168,26)" rx="2" ry="2" />
<text  x="1186.65" y="975.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.04%)</title><rect x="1135.4" y="837" width="0.4" height="15.0" fill="rgb(230,104,52)" rx="2" ry="2" />
<text  x="1138.42" y="847.5" ></text>
</g>
<g >
<title>[bash] (4 samples, 0.14%)</title><rect x="1094.4" y="853" width="1.7" height="15.0" fill="rgb(213,27,36)" rx="2" ry="2" />
<text  x="1097.38" y="863.5" ></text>
</g>
<g >
<title>__pthread_once_slow (1 samples, 0.04%)</title><rect x="1093.1" y="725" width="0.4" height="15.0" fill="rgb(217,4,0)" rx="2" ry="2" />
<text  x="1096.11" y="735.5" ></text>
</g>
<g >
<title>do_syscall_64 (21 samples, 0.75%)</title><rect x="1077.0" y="485" width="8.9" height="15.0" fill="rgb(212,64,19)" rx="2" ry="2" />
<text  x="1080.03" y="495.5" ></text>
</g>
<g >
<title>__opendir (1 samples, 0.04%)</title><rect x="71.8" y="229" width="0.4" height="15.0" fill="rgb(208,50,21)" rx="2" ry="2" />
<text  x="74.77" y="239.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.14%)</title><rect x="1081.7" y="373" width="1.7" height="15.0" fill="rgb(253,132,38)" rx="2" ry="2" />
<text  x="1084.69" y="383.5" ></text>
</g>
<g >
<title>find_get_entry (1 samples, 0.04%)</title><rect x="1098.6" y="661" width="0.4" height="15.0" fill="rgb(242,229,35)" rx="2" ry="2" />
<text  x="1101.61" y="671.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.04%)</title><rect x="1096.9" y="357" width="0.4" height="15.0" fill="rgb(216,148,9)" rx="2" ry="2" />
<text  x="1099.92" y="367.5" ></text>
</g>
<g >
<title>__pthread_once_slow (1 samples, 0.04%)</title><rect x="1092.7" y="917" width="0.4" height="15.0" fill="rgb(234,96,10)" rx="2" ry="2" />
<text  x="1095.69" y="927.5" ></text>
</g>
<g >
<title>__get_xps_queue_idx (1 samples, 0.04%)</title><rect x="1042.3" y="613" width="0.5" height="15.0" fill="rgb(253,7,33)" rx="2" ry="2" />
<text  x="1045.34" y="623.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (5 samples, 0.18%)</title><rect x="1098.6" y="981" width="2.1" height="15.0" fill="rgb(229,74,48)" rx="2" ry="2" />
<text  x="1101.61" y="991.5" ></text>
</g>
<g >
<title>ngtcp2_addr_init (1 samples, 0.04%)</title><rect x="1061.8" y="981" width="0.4" height="15.0" fill="rgb(226,206,15)" rx="2" ry="2" />
<text  x="1064.80" y="991.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="1095.2" y="277" width="0.5" height="15.0" fill="rgb(222,131,29)" rx="2" ry="2" />
<text  x="1098.23" y="287.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.04%)</title><rect x="1186.2" y="885" width="0.4" height="15.0" fill="rgb(251,202,40)" rx="2" ry="2" />
<text  x="1189.19" y="895.5" ></text>
</g>
<g >
<title>std::chrono::operator!=&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (3 samples, 0.11%)</title><rect x="62.9" y="1013" width="1.3" height="15.0" fill="rgb(248,204,49)" rx="2" ry="2" />
<text  x="65.89" y="1023.5" ></text>
</g>
<g >
<title>[bash] (2 samples, 0.07%)</title><rect x="1095.2" y="485" width="0.9" height="15.0" fill="rgb(213,187,0)" rx="2" ry="2" />
<text  x="1098.23" y="495.5" ></text>
</g>
<g >
<title>memcpy (3 samples, 0.11%)</title><rect x="816.0" y="917" width="1.3" height="15.0" fill="rgb(229,74,53)" rx="2" ry="2" />
<text  x="818.99" y="927.5" ></text>
</g>
<g >
<title>get_gconv_fcts (1 samples, 0.04%)</title><rect x="1098.2" y="853" width="0.4" height="15.0" fill="rgb(245,8,39)" rx="2" ry="2" />
<text  x="1101.19" y="863.5" ></text>
</g>
<g >
<title>_dl_start_user (1 samples, 0.04%)</title><rect x="1091.4" y="1029" width="0.4" height="15.0" fill="rgb(205,219,17)" rx="2" ry="2" />
<text  x="1094.42" y="1039.5" ></text>
</g>
<g >
<title>deactivate_task (2 samples, 0.07%)</title><rect x="1082.1" y="357" width="0.9" height="15.0" fill="rgb(208,171,17)" rx="2" ry="2" />
<text  x="1085.11" y="367.5" ></text>
</g>
<g >
<title>_dl_start_final (3 samples, 0.11%)</title><rect x="1135.8" y="997" width="1.3" height="15.0" fill="rgb(234,23,31)" rx="2" ry="2" />
<text  x="1138.84" y="1007.5" ></text>
</g>
<g >
<title>ip_finish_output (14 samples, 0.50%)</title><rect x="1039.4" y="741" width="5.9" height="15.0" fill="rgb(252,18,29)" rx="2" ry="2" />
<text  x="1042.38" y="751.5" ></text>
</g>
<g >
<title>ip_route_output_flow (7 samples, 0.25%)</title><rect x="1034.3" y="805" width="3.0" height="15.0" fill="rgb(239,6,35)" rx="2" ry="2" />
<text  x="1037.30" y="815.5" ></text>
</g>
<g >
<title>ngtcp2_pkt_decode_frame (21 samples, 0.75%)</title><rect x="882.4" y="949" width="8.9" height="15.0" fill="rgb(224,160,6)" rx="2" ry="2" />
<text  x="885.41" y="959.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="1096.1" y="677" width="0.4" height="15.0" fill="rgb(224,16,43)" rx="2" ry="2" />
<text  x="1099.07" y="687.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="71.8" y="325" width="0.4" height="15.0" fill="rgb(250,169,39)" rx="2" ry="2" />
<text  x="74.77" y="335.5" ></text>
</g>
<g >
<title>nghttp3_stream_fill_outq (1 samples, 0.04%)</title><rect x="1048.3" y="949" width="0.4" height="15.0" fill="rgb(244,108,15)" rx="2" ry="2" />
<text  x="1051.26" y="959.5" ></text>
</g>
<g >
<title>_dl_relocate_object (3 samples, 0.11%)</title><rect x="1099.0" y="949" width="1.3" height="15.0" fill="rgb(207,12,25)" rx="2" ry="2" />
<text  x="1102.04" y="959.5" ></text>
</g>
<g >
<title>__x64_sys_wait4 (1 samples, 0.04%)</title><rect x="1096.9" y="437" width="0.4" height="15.0" fill="rgb(220,19,12)" rx="2" ry="2" />
<text  x="1099.92" y="447.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (30 samples, 1.08%)</title><rect x="437.7" y="981" width="12.7" height="15.0" fill="rgb(240,72,25)" rx="2" ry="2" />
<text  x="440.74" y="991.5" ></text>
</g>
<g >
<title>ngtcp2_strm_rx_offset (12 samples, 0.43%)</title><rect x="724.6" y="933" width="5.1" height="15.0" fill="rgb(216,145,29)" rx="2" ry="2" />
<text  x="727.60" y="943.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="71.8" y="565" width="0.4" height="15.0" fill="rgb(253,20,3)" rx="2" ry="2" />
<text  x="74.77" y="575.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1094.0" y="821" width="0.4" height="15.0" fill="rgb(228,220,25)" rx="2" ry="2" />
<text  x="1096.96" y="831.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1095.7" y="229" width="0.4" height="15.0" fill="rgb(213,67,9)" rx="2" ry="2" />
<text  x="1098.65" y="239.5" ></text>
</g>
<g >
<title>h2load::(anonymous namespace)::recv_data (1 samples, 0.04%)</title><rect x="34.5" y="1013" width="0.5" height="15.0" fill="rgb(245,195,50)" rx="2" ry="2" />
<text  x="37.54" y="1023.5" ></text>
</g>
<g >
<title>ngtcp2_ksl_it_begin (1 samples, 0.04%)</title><rect x="859.6" y="917" width="0.4" height="15.0" fill="rgb(211,16,28)" rx="2" ry="2" />
<text  x="862.57" y="927.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1136.3" y="885" width="0.4" height="15.0" fill="rgb(252,106,2)" rx="2" ry="2" />
<text  x="1139.27" y="895.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="71.8" y="965" width="0.4" height="15.0" fill="rgb(247,60,49)" rx="2" ry="2" />
<text  x="74.77" y="975.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, h2load::Session*, std::default_delete&lt;h2load::Session&gt; &gt; (45 samples, 1.61%)</title><rect x="688.6" y="853" width="19.1" height="15.0" fill="rgb(218,9,23)" rx="2" ry="2" />
<text  x="691.64" y="863.5" ></text>
</g>
<g >
<title>__GI__IO_getline_info (1 samples, 0.04%)</title><rect x="1132.9" y="981" width="0.4" height="15.0" fill="rgb(205,6,49)" rx="2" ry="2" />
<text  x="1135.88" y="991.5" ></text>
</g>
<g >
<title>ngtcp2_put_varint (1 samples, 0.04%)</title><rect x="1056.3" y="901" width="0.4" height="15.0" fill="rgb(206,166,20)" rx="2" ry="2" />
<text  x="1059.30" y="911.5" ></text>
</g>
<g >
<title>ksize (1 samples, 0.04%)</title><rect x="1033.0" y="709" width="0.5" height="15.0" fill="rgb(245,91,13)" rx="2" ry="2" />
<text  x="1036.03" y="719.5" ></text>
</g>
<g >
<title>[bash] (2 samples, 0.07%)</title><rect x="1095.2" y="405" width="0.9" height="15.0" fill="rgb(210,108,13)" rx="2" ry="2" />
<text  x="1098.23" y="415.5" ></text>
</g>
<g >
<title>ngtcp2_qlog_metrics_updated (1 samples, 0.04%)</title><rect x="55.7" y="1013" width="0.4" height="15.0" fill="rgb(241,14,46)" rx="2" ry="2" />
<text  x="58.69" y="1023.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.04%)</title><rect x="1186.6" y="901" width="0.4" height="15.0" fill="rgb(221,150,13)" rx="2" ry="2" />
<text  x="1189.62" y="911.5" ></text>
</g>
<g >
<title>__ip_finish_output (12 samples, 0.43%)</title><rect x="1040.2" y="725" width="5.1" height="15.0" fill="rgb(239,225,20)" rx="2" ry="2" />
<text  x="1043.23" y="735.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (2 samples, 0.07%)</title><rect x="436.9" y="949" width="0.8" height="15.0" fill="rgb(207,49,40)" rx="2" ry="2" />
<text  x="439.90" y="959.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.04%)</title><rect x="1098.6" y="645" width="0.4" height="15.0" fill="rgb(207,62,34)" rx="2" ry="2" />
<text  x="1101.61" y="655.5" ></text>
</g>
<g >
<title>ngtcp2_conn_write_vmsg (26 samples, 0.93%)</title><rect x="1050.0" y="981" width="11.0" height="15.0" fill="rgb(233,120,5)" rx="2" ry="2" />
<text  x="1052.96" y="991.5" ></text>
</g>
<g >
<title>insert_work (1 samples, 0.04%)</title><rect x="631.5" y="549" width="0.4" height="15.0" fill="rgb(236,90,2)" rx="2" ry="2" />
<text  x="634.52" y="559.5" ></text>
</g>
<g >
<title>ngtcp2_cpymem (3 samples, 0.11%)</title><rect x="1065.6" y="1013" width="1.3" height="15.0" fill="rgb(241,44,16)" rx="2" ry="2" />
<text  x="1068.61" y="1023.5" ></text>
</g>
<g >
<title>intel_pmu_nhm_enable_all (5 samples, 0.18%)</title><rect x="1138.0" y="757" width="2.1" height="15.0" fill="rgb(235,54,2)" rx="2" ry="2" />
<text  x="1140.96" y="767.5" ></text>
</g>
<g >
<title>[bash] (4 samples, 0.14%)</title><rect x="1094.4" y="805" width="1.7" height="15.0" fill="rgb(239,46,47)" rx="2" ry="2" />
<text  x="1097.38" y="815.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero (1 samples, 0.04%)</title><rect x="62.5" y="1013" width="0.4" height="15.0" fill="rgb(235,66,38)" rx="2" ry="2" />
<text  x="65.46" y="1023.5" ></text>
</g>
<g >
<title>memcpy (21 samples, 0.75%)</title><rect x="908.2" y="917" width="8.9" height="15.0" fill="rgb(250,136,32)" rx="2" ry="2" />
<text  x="911.22" y="927.5" ></text>
</g>
<g >
<title>ngtcp2_acktr_add (56 samples, 2.01%)</title><rect x="851.1" y="933" width="23.7" height="15.0" fill="rgb(211,146,53)" rx="2" ry="2" />
<text  x="854.10" y="943.5" >n..</text>
</g>
<g >
<title>execute_command_internal (3 samples, 0.11%)</title><rect x="1096.1" y="885" width="1.2" height="15.0" fill="rgb(241,100,19)" rx="2" ry="2" />
<text  x="1099.07" y="895.5" ></text>
</g>
<g >
<title>__do_fault (1 samples, 0.04%)</title><rect x="1098.6" y="725" width="0.4" height="15.0" fill="rgb(226,49,19)" rx="2" ry="2" />
<text  x="1101.61" y="735.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.04%)</title><rect x="1132.9" y="885" width="0.4" height="15.0" fill="rgb(219,54,47)" rx="2" ry="2" />
<text  x="1135.88" y="895.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="71.8" y="629" width="0.4" height="15.0" fill="rgb(223,200,11)" rx="2" ry="2" />
<text  x="74.77" y="639.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (2 samples, 0.07%)</title><rect x="64.2" y="1013" width="0.8" height="15.0" fill="rgb(238,20,7)" rx="2" ry="2" />
<text  x="67.16" y="1023.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;, std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;void&gt;, std::__future_base::_Result_base::_Deleter&gt;, std::thread::_Invoker&lt;std::tuple&lt;h2load::main (46 samples, 1.65%)</title><rect x="1071.1" y="693" width="19.5" height="15.0" fill="rgb(243,63,43)" rx="2" ry="2" />
<text  x="1074.11" y="703.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;h2load::Session, std::default_delete&lt;h2load::Session&gt; &gt;::_M_ptr (1 samples, 0.04%)</title><rect x="60.3" y="1013" width="0.5" height="15.0" fill="rgb(234,73,12)" rx="2" ry="2" />
<text  x="63.35" y="1023.5" ></text>
</g>
<g >
<title>perf_event_mmap_output (1 samples, 0.04%)</title><rect x="1099.0" y="789" width="0.5" height="15.0" fill="rgb(248,126,28)" rx="2" ry="2" />
<text  x="1102.04" y="799.5" ></text>
</g>
<g >
<title>remote_function (6 samples, 0.22%)</title><rect x="1137.5" y="853" width="2.6" height="15.0" fill="rgb(227,111,43)" rx="2" ry="2" />
<text  x="1140.54" y="863.5" ></text>
</g>
<g >
<title>fput_many (7 samples, 0.25%)</title><rect x="179.2" y="917" width="3.0" height="15.0" fill="rgb(239,199,15)" rx="2" ry="2" />
<text  x="182.24" y="927.5" ></text>
</g>
<g >
<title>conn_recv_crypto (1 samples, 0.04%)</title><rect x="450.4" y="933" width="0.5" height="15.0" fill="rgb(209,92,21)" rx="2" ry="2" />
<text  x="453.44" y="943.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="69.2" y="917" width="0.5" height="15.0" fill="rgb(243,20,11)" rx="2" ry="2" />
<text  x="72.23" y="927.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned (6 samples, 0.22%)</title><rect x="819.4" y="885" width="2.5" height="15.0" fill="rgb(220,53,49)" rx="2" ry="2" />
<text  x="822.37" y="895.5" ></text>
</g>
<g >
<title>__ip_append_data.isra.0 (1 samples, 0.04%)</title><rect x="1028.0" y="805" width="0.4" height="15.0" fill="rgb(229,33,44)" rx="2" ry="2" />
<text  x="1030.96" y="815.5" ></text>
</g>
<g >
<title>ngtcp2_cid_eq (7 samples, 0.25%)</title><rect x="740.7" y="933" width="2.9" height="15.0" fill="rgb(240,14,35)" rx="2" ry="2" />
<text  x="743.68" y="943.5" ></text>
</g>
<g >
<title>h2load::Http3Session::consume (3 samples, 0.11%)</title><rect x="1124.8" y="1013" width="1.3" height="15.0" fill="rgb(252,104,15)" rx="2" ry="2" />
<text  x="1127.84" y="1023.5" ></text>
</g>
<g >
<title>smp_irq_work_interrupt (1 samples, 0.04%)</title><rect x="1184.1" y="917" width="0.4" height="15.0" fill="rgb(241,85,47)" rx="2" ry="2" />
<text  x="1187.08" y="927.5" ></text>
</g>
<g >
<title>put_cpu_partial (2 samples, 0.07%)</title><rect x="383.6" y="789" width="0.8" height="15.0" fill="rgb(234,181,16)" rx="2" ry="2" />
<text  x="386.59" y="799.5" ></text>
</g>
<g >
<title>ngtcp2_range_cut (3 samples, 0.11%)</title><rect x="957.7" y="917" width="1.3" height="15.0" fill="rgb(235,93,34)" rx="2" ry="2" />
<text  x="960.72" y="927.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="71.8" y="869" width="0.4" height="15.0" fill="rgb(219,108,15)" rx="2" ry="2" />
<text  x="74.77" y="879.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="1096.1" y="725" width="0.4" height="15.0" fill="rgb(228,226,25)" rx="2" ry="2" />
<text  x="1099.07" y="735.5" ></text>
</g>
<g >
<title>ngtcp2_pkt_decode_hd_long (1 samples, 0.04%)</title><rect x="1070.7" y="1013" width="0.4" height="15.0" fill="rgb(244,109,29)" rx="2" ry="2" />
<text  x="1073.69" y="1023.5" ></text>
</g>
<g >
<title>schedule (7 samples, 0.25%)</title><rect x="1081.7" y="389" width="3.0" height="15.0" fill="rgb(212,10,14)" rx="2" ry="2" />
<text  x="1084.69" y="399.5" ></text>
</g>
<g >
<title>glob_vector (1 samples, 0.04%)</title><rect x="71.8" y="245" width="0.4" height="15.0" fill="rgb(236,97,50)" rx="2" ry="2" />
<text  x="74.77" y="255.5" ></text>
</g>
<g >
<title>ngtcp2_gaptr_push (45 samples, 1.61%)</title><rect x="943.3" y="933" width="19.1" height="15.0" fill="rgb(223,201,24)" rx="2" ry="2" />
<text  x="946.34" y="943.5" ></text>
</g>
<g >
<title>conn_recv_pkt (13 samples, 0.47%)</title><rect x="15.5" y="1013" width="5.5" height="15.0" fill="rgb(232,126,34)" rx="2" ry="2" />
<text  x="18.50" y="1023.5" ></text>
</g>
<g >
<title>elf_machine_rela (1 samples, 0.04%)</title><rect x="1136.7" y="917" width="0.4" height="15.0" fill="rgb(214,189,5)" rx="2" ry="2" />
<text  x="1139.69" y="927.5" ></text>
</g>
<g >
<title>copy_user_generic_string (1 samples, 0.04%)</title><rect x="1029.2" y="741" width="0.4" height="15.0" fill="rgb(210,140,11)" rx="2" ry="2" />
<text  x="1032.23" y="751.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="69.2" y="853" width="0.5" height="15.0" fill="rgb(237,149,33)" rx="2" ry="2" />
<text  x="72.23" y="863.5" ></text>
</g>
<g >
<title>__libc_recvfrom (1 samples, 0.04%)</title><rect x="10.0" y="1013" width="0.4" height="15.0" fill="rgb(224,163,20)" rx="2" ry="2" />
<text  x="13.00" y="1023.5" ></text>
</g>
<g >
<title>[bash] (2 samples, 0.07%)</title><rect x="1097.8" y="917" width="0.8" height="15.0" fill="rgb(215,52,28)" rx="2" ry="2" />
<text  x="1100.77" y="927.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;int, int  (2 samples, 0.07%)</title><rect x="1088.0" y="453" width="0.9" height="15.0" fill="rgb(221,80,30)" rx="2" ry="2" />
<text  x="1091.04" y="463.5" ></text>
</g>
<g >
<title>expand_string_assignment (1 samples, 0.04%)</title><rect x="69.2" y="341" width="0.5" height="15.0" fill="rgb(247,129,12)" rx="2" ry="2" />
<text  x="72.23" y="351.5" ></text>
</g>
<g >
<title>_dl_protect_relro (1 samples, 0.04%)</title><rect x="1133.7" y="933" width="0.5" height="15.0" fill="rgb(225,34,7)" rx="2" ry="2" />
<text  x="1136.73" y="943.5" ></text>
</g>
<g >
<title>__consume_stateless_skb (1 samples, 0.04%)</title><rect x="255.8" y="869" width="0.4" height="15.0" fill="rgb(219,35,41)" rx="2" ry="2" />
<text  x="258.82" y="879.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="1135.4" y="949" width="0.4" height="15.0" fill="rgb(244,28,14)" rx="2" ry="2" />
<text  x="1138.42" y="959.5" ></text>
</g>
<g >
<title>strcmp (1 samples, 0.04%)</title><rect x="1136.7" y="853" width="0.4" height="15.0" fill="rgb(240,172,18)" rx="2" ry="2" />
<text  x="1139.69" y="863.5" ></text>
</g>
<g >
<title>__bswap_64 (1 samples, 0.04%)</title><rect x="563.0" y="805" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="565.98" y="815.5" ></text>
</g>
<g >
<title>change_protection (1 samples, 0.04%)</title><rect x="1136.3" y="821" width="0.4" height="15.0" fill="rgb(246,184,26)" rx="2" ry="2" />
<text  x="1139.27" y="831.5" ></text>
</g>
<g >
<title>_nss_compat_getpwuid_r (1 samples, 0.04%)</title><rect x="1135.0" y="901" width="0.4" height="15.0" fill="rgb(217,119,36)" rx="2" ry="2" />
<text  x="1138.00" y="911.5" ></text>
</g>
<g >
<title>ttwu_do_activate (7 samples, 0.25%)</title><rect x="1184.5" y="949" width="3.0" height="15.0" fill="rgb(238,155,48)" rx="2" ry="2" />
<text  x="1187.50" y="959.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;h2load::main (46 samples, 1.65%)</title><rect x="1071.1" y="917" width="19.5" height="15.0" fill="rgb(228,140,4)" rx="2" ry="2" />
<text  x="1074.11" y="927.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;h2load::main (46 samples, 1.65%)</title><rect x="1071.1" y="645" width="19.5" height="15.0" fill="rgb(228,101,31)" rx="2" ry="2" />
<text  x="1074.11" y="655.5" ></text>
</g>
<g >
<title>nghttp3_stream_uni (13 samples, 0.47%)</title><rect x="666.2" y="853" width="5.5" height="15.0" fill="rgb(247,42,2)" rx="2" ry="2" />
<text  x="669.21" y="863.5" ></text>
</g>
<g >
<title>free (1 samples, 0.04%)</title><rect x="519.0" y="917" width="0.4" height="15.0" fill="rgb(237,96,24)" rx="2" ry="2" />
<text  x="521.98" y="927.5" ></text>
</g>
<g >
<title>h2load::Client::write_udp (55 samples, 1.97%)</title><rect x="1025.0" y="997" width="23.3" height="15.0" fill="rgb(227,48,33)" rx="2" ry="2" />
<text  x="1027.99" y="1007.5" >h..</text>
</g>
<g >
<title>entry_SYSCALL_64 (42 samples, 1.51%)</title><rect x="1100.7" y="1029" width="17.8" height="15.0" fill="rgb(213,118,12)" rx="2" ry="2" />
<text  x="1103.73" y="1039.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (12 samples, 0.43%)</title><rect x="148.8" y="965" width="5.1" height="15.0" fill="rgb(226,221,27)" rx="2" ry="2" />
<text  x="151.77" y="975.5" ></text>
</g>
<g >
<title>__sched_text_start (5 samples, 0.18%)</title><rect x="1187.9" y="949" width="2.1" height="15.0" fill="rgb(221,37,14)" rx="2" ry="2" />
<text  x="1190.88" y="959.5" ></text>
</g>
<g >
<title>h2load::Http3Session::read_stream (311 samples, 11.15%)</title><rect x="540.1" y="885" width="131.6" height="15.0" fill="rgb(209,85,14)" rx="2" ry="2" />
<text  x="543.13" y="895.5" >h2load::Http3Ses..</text>
</g>
<g >
<title>irq_work_interrupt (1 samples, 0.04%)</title><rect x="1184.1" y="933" width="0.4" height="15.0" fill="rgb(239,149,51)" rx="2" ry="2" />
<text  x="1187.08" y="943.5" ></text>
</g>
<g >
<title>dbs_irq_work (1 samples, 0.04%)</title><rect x="1184.1" y="869" width="0.4" height="15.0" fill="rgb(218,184,24)" rx="2" ry="2" />
<text  x="1187.08" y="879.5" ></text>
</g>
<g >
<title>SSL_CTX_new (2 samples, 0.07%)</title><rect x="1092.7" y="965" width="0.8" height="15.0" fill="rgb(215,102,36)" rx="2" ry="2" />
<text  x="1095.69" y="975.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="1095.7" y="133" width="0.4" height="15.0" fill="rgb(251,46,49)" rx="2" ry="2" />
<text  x="1098.65" y="143.5" ></text>
</g>
<g >
<title>conn_ppe_write_frame_hd_log (2 samples, 0.07%)</title><rect x="1055.9" y="949" width="0.8" height="15.0" fill="rgb(212,95,1)" rx="2" ry="2" />
<text  x="1058.88" y="959.5" ></text>
</g>
<g >
<title>hash (15 samples, 0.54%)</title><rect x="651.4" y="709" width="6.4" height="15.0" fill="rgb(243,48,0)" rx="2" ry="2" />
<text  x="654.41" y="719.5" ></text>
</g>
<g >
<title>kfree_skbmem (23 samples, 0.82%)</title><rect x="375.1" y="837" width="9.8" height="15.0" fill="rgb(248,98,20)" rx="2" ry="2" />
<text  x="378.13" y="847.5" ></text>
</g>
<g >
<title>__gthread_once (46 samples, 1.65%)</title><rect x="1071.1" y="853" width="19.5" height="15.0" fill="rgb(230,154,6)" rx="2" ry="2" />
<text  x="1074.11" y="863.5" ></text>
</g>
<g >
<title>execute_command (2 samples, 0.07%)</title><rect x="1094.4" y="453" width="0.8" height="15.0" fill="rgb(245,208,41)" rx="2" ry="2" />
<text  x="1097.38" y="463.5" ></text>
</g>
<g >
<title>_copy_from_iter_full (2 samples, 0.07%)</title><rect x="1029.2" y="757" width="0.9" height="15.0" fill="rgb(225,69,12)" rx="2" ry="2" />
<text  x="1032.23" y="767.5" ></text>
</g>
<g >
<title>h2load::Client::restart_timeout (1 samples, 0.04%)</title><rect x="1090.2" y="501" width="0.4" height="15.0" fill="rgb(217,127,28)" rx="2" ry="2" />
<text  x="1093.15" y="511.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.04%)</title><rect x="859.1" y="917" width="0.5" height="15.0" fill="rgb(227,85,24)" rx="2" ry="2" />
<text  x="862.14" y="927.5" ></text>
</g>
<g >
<title>conn_write_pkt (21 samples, 0.75%)</title><rect x="1052.1" y="965" width="8.9" height="15.0" fill="rgb(229,211,21)" rx="2" ry="2" />
<text  x="1055.07" y="975.5" ></text>
</g>
<g >
<title>[bash] (2 samples, 0.07%)</title><rect x="1096.5" y="677" width="0.8" height="15.0" fill="rgb(217,81,46)" rx="2" ry="2" />
<text  x="1099.50" y="687.5" ></text>
</g>
<g >
<title>import_single_range (5 samples, 0.18%)</title><rect x="431.4" y="933" width="2.1" height="15.0" fill="rgb(247,7,44)" rx="2" ry="2" />
<text  x="434.40" y="943.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (11 samples, 0.39%)</title><rect x="634.1" y="741" width="4.6" height="15.0" fill="rgb(235,56,2)" rx="2" ry="2" />
<text  x="637.06" y="751.5" ></text>
</g>
<g >
<title>reader_loop (11 samples, 0.39%)</title><rect x="1094.0" y="981" width="4.6" height="15.0" fill="rgb(242,105,13)" rx="2" ry="2" />
<text  x="1096.96" y="991.5" ></text>
</g>
<g >
<title>[bash] (3 samples, 0.11%)</title><rect x="1096.1" y="741" width="1.2" height="15.0" fill="rgb(217,68,28)" rx="2" ry="2" />
<text  x="1099.07" y="751.5" ></text>
</g>
<g >
<title>h2load::Client::read_quic (2,243 samples, 80.42%)</title><rect x="72.2" y="1013" width="949.0" height="15.0" fill="rgb(235,26,6)" rx="2" ry="2" />
<text  x="75.19" y="1023.5" >h2load::Client::read_quic</text>
</g>
<g >
<title>dl_new_hash (1 samples, 0.04%)</title><rect x="1093.5" y="677" width="0.5" height="15.0" fill="rgb(227,52,38)" rx="2" ry="2" />
<text  x="1096.54" y="687.5" ></text>
</g>
<g >
<title>[h2load] (10 samples, 0.36%)</title><rect x="458.9" y="981" width="4.2" height="15.0" fill="rgb(214,42,47)" rx="2" ry="2" />
<text  x="461.90" y="991.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="1094.0" y="933" width="0.4" height="15.0" fill="rgb(236,23,45)" rx="2" ry="2" />
<text  x="1096.96" y="943.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.07%)</title><rect x="1077.0" y="421" width="0.9" height="15.0" fill="rgb(223,119,46)" rx="2" ry="2" />
<text  x="1080.03" y="431.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1123.2" y="997" width="0.4" height="15.0" fill="rgb(249,80,7)" rx="2" ry="2" />
<text  x="1126.15" y="1007.5" ></text>
</g>
<g >
<title>__mprotect (1 samples, 0.04%)</title><rect x="1099.0" y="917" width="0.5" height="15.0" fill="rgb(238,218,38)" rx="2" ry="2" />
<text  x="1102.04" y="927.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.04%)</title><rect x="1094.8" y="325" width="0.4" height="15.0" fill="rgb(233,72,13)" rx="2" ry="2" />
<text  x="1097.80" y="335.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="631.5" y="693" width="0.4" height="15.0" fill="rgb(214,3,19)" rx="2" ry="2" />
<text  x="634.52" y="703.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.04%)</title><rect x="1184.5" y="917" width="0.4" height="15.0" fill="rgb(219,183,44)" rx="2" ry="2" />
<text  x="1187.50" y="927.5" ></text>
</g>
<g >
<title>[libngtcp2.so.0.0.0] (2 samples, 0.07%)</title><rect x="816.0" y="901" width="0.8" height="15.0" fill="rgb(209,209,49)" rx="2" ry="2" />
<text  x="818.99" y="911.5" ></text>
</g>
<g >
<title>tcache_put (1 samples, 0.04%)</title><rect x="1094.8" y="309" width="0.4" height="15.0" fill="rgb(218,154,22)" rx="2" ry="2" />
<text  x="1097.80" y="319.5" ></text>
</g>
<g >
<title>worker_thread (2 samples, 0.07%)</title><rect x="1134.2" y="997" width="0.8" height="15.0" fill="rgb(242,153,27)" rx="2" ry="2" />
<text  x="1137.15" y="1007.5" ></text>
</g>
<g >
<title>h2load::Client::restart_timeout (1 samples, 0.04%)</title><rect x="1088.9" y="501" width="0.4" height="15.0" fill="rgb(252,111,49)" rx="2" ry="2" />
<text  x="1091.88" y="511.5" ></text>
</g>
<g >
<title>__GI___mbrtowc (2 samples, 0.07%)</title><rect x="1097.8" y="869" width="0.8" height="15.0" fill="rgb(235,109,31)" rx="2" ry="2" />
<text  x="1100.77" y="879.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.14%)</title><rect x="1094.4" y="773" width="1.7" height="15.0" fill="rgb(237,194,4)" rx="2" ry="2" />
<text  x="1097.38" y="783.5" ></text>
</g>
<g >
<title>ev_feed_event (1 samples, 0.04%)</title><rect x="1085.9" y="517" width="0.4" height="15.0" fill="rgb(206,89,40)" rx="2" ry="2" />
<text  x="1088.92" y="527.5" ></text>
</g>
<g >
<title>qlog_pkt_write_end (1 samples, 0.04%)</title><rect x="57.8" y="1013" width="0.4" height="15.0" fill="rgb(212,85,43)" rx="2" ry="2" />
<text  x="60.81" y="1023.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.04%)</title><rect x="1135.4" y="821" width="0.4" height="15.0" fill="rgb(238,177,33)" rx="2" ry="2" />
<text  x="1138.42" y="831.5" ></text>
</g>
<g >
<title>log_pkt_hd (2 samples, 0.07%)</title><rect x="845.2" y="949" width="0.8" height="15.0" fill="rgb(223,164,50)" rx="2" ry="2" />
<text  x="848.18" y="959.5" ></text>
</g>
<g >
<title>std::__invoke&lt;h2load::main (46 samples, 1.65%)</title><rect x="1071.1" y="613" width="19.5" height="15.0" fill="rgb(247,198,18)" rx="2" ry="2" />
<text  x="1074.11" y="623.5" ></text>
</g>
<g >
<title>deactivate_task (1 samples, 0.04%)</title><rect x="1134.6" y="965" width="0.4" height="15.0" fill="rgb(242,32,38)" rx="2" ry="2" />
<text  x="1137.58" y="975.5" ></text>
</g>
<g >
<title>__fget (2 samples, 0.07%)</title><rect x="1077.0" y="405" width="0.9" height="15.0" fill="rgb(205,73,3)" rx="2" ry="2" />
<text  x="1080.03" y="415.5" ></text>
</g>
<g >
<title>[ip] (1 samples, 0.04%)</title><rect x="1132.9" y="1013" width="0.4" height="15.0" fill="rgb(247,30,42)" rx="2" ry="2" />
<text  x="1135.88" y="1023.5" ></text>
</g>
<g >
<title>_init (1 samples, 0.04%)</title><rect x="1135.4" y="965" width="0.4" height="15.0" fill="rgb(247,198,46)" rx="2" ry="2" />
<text  x="1138.42" y="975.5" ></text>
</g>
<g >
<title>h2load::(anonymous namespace)::timestamp (3 samples, 0.11%)</title><rect x="35.0" y="1013" width="1.2" height="15.0" fill="rgb(239,86,18)" rx="2" ry="2" />
<text  x="37.96" y="1023.5" ></text>
</g>
<g >
<title>conn_verify_dcid (15 samples, 0.54%)</title><rect x="21.0" y="1013" width="6.3" height="15.0" fill="rgb(224,185,15)" rx="2" ry="2" />
<text  x="24.00" y="1023.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="69.2" y="229" width="0.5" height="15.0" fill="rgb(252,61,50)" rx="2" ry="2" />
<text  x="72.23" y="239.5" ></text>
</g>
<g >
<title>queue_work_on (1 samples, 0.04%)</title><rect x="1189.2" y="837" width="0.4" height="15.0" fill="rgb(253,191,41)" rx="2" ry="2" />
<text  x="1192.15" y="847.5" ></text>
</g>
<g >
<title>execute_command_internal (2 samples, 0.07%)</title><rect x="1096.5" y="581" width="0.8" height="15.0" fill="rgb(239,97,50)" rx="2" ry="2" />
<text  x="1099.50" y="591.5" ></text>
</g>
<g >
<title>validate_xmit_skb (1 samples, 0.04%)</title><rect x="1044.5" y="629" width="0.4" height="15.0" fill="rgb(239,63,22)" rx="2" ry="2" />
<text  x="1047.46" y="639.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="71.8" y="309" width="0.4" height="15.0" fill="rgb(216,45,0)" rx="2" ry="2" />
<text  x="74.77" y="319.5" ></text>
</g>
<g >
<title>__free_pages (1 samples, 0.04%)</title><rect x="384.0" y="725" width="0.4" height="15.0" fill="rgb(251,133,10)" rx="2" ry="2" />
<text  x="387.01" y="735.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="69.2" y="709" width="0.5" height="15.0" fill="rgb(226,16,11)" rx="2" ry="2" />
<text  x="72.23" y="719.5" ></text>
</g>
<g >
<title>[bash] (2 samples, 0.07%)</title><rect x="1096.5" y="565" width="0.8" height="15.0" fill="rgb(222,2,49)" rx="2" ry="2" />
<text  x="1099.50" y="575.5" ></text>
</g>
<g >
<title>vma_interval_tree_insert (1 samples, 0.04%)</title><rect x="1133.7" y="757" width="0.5" height="15.0" fill="rgb(241,218,35)" rx="2" ry="2" />
<text  x="1136.73" y="767.5" ></text>
</g>
<g >
<title>record_times (1 samples, 0.04%)</title><rect x="1186.2" y="901" width="0.4" height="15.0" fill="rgb(209,195,19)" rx="2" ry="2" />
<text  x="1189.19" y="911.5" ></text>
</g>
<g >
<title>conn_call_recv_stream_data (420 samples, 15.06%)</title><rect x="530.0" y="933" width="177.7" height="15.0" fill="rgb(220,101,23)" rx="2" ry="2" />
<text  x="532.98" y="943.5" >conn_call_recv_stream_d..</text>
</g>
<g >
<title>sock_poll (1 samples, 0.04%)</title><rect x="1079.2" y="373" width="0.4" height="15.0" fill="rgb(234,175,2)" rx="2" ry="2" />
<text  x="1082.15" y="383.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="631.5" y="709" width="0.4" height="15.0" fill="rgb(244,1,22)" rx="2" ry="2" />
<text  x="634.52" y="719.5" ></text>
</g>
<g >
<title>setup_vdso (1 samples, 0.04%)</title><rect x="1100.3" y="949" width="0.4" height="15.0" fill="rgb(222,83,24)" rx="2" ry="2" />
<text  x="1103.30" y="959.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="69.2" y="613" width="0.5" height="15.0" fill="rgb(229,168,47)" rx="2" ry="2" />
<text  x="72.23" y="623.5" ></text>
</g>
<g >
<title>__free_pages_ok (1 samples, 0.04%)</title><rect x="1094.0" y="613" width="0.4" height="15.0" fill="rgb(247,103,27)" rx="2" ry="2" />
<text  x="1096.96" y="623.5" ></text>
</g>
<g >
<title>openaux (1 samples, 0.04%)</title><rect x="1098.6" y="917" width="0.4" height="15.0" fill="rgb(237,214,41)" rx="2" ry="2" />
<text  x="1101.61" y="927.5" ></text>
</g>
<g >
<title>sock_sendmsg (45 samples, 1.61%)</title><rect x="1027.1" y="853" width="19.0" height="15.0" fill="rgb(219,94,36)" rx="2" ry="2" />
<text  x="1030.11" y="863.5" ></text>
</g>
<g >
<title>ngtcp2_ksl_lower_bound (2 samples, 0.07%)</title><rect x="49.3" y="1013" width="0.9" height="15.0" fill="rgb(250,53,24)" rx="2" ry="2" />
<text  x="52.35" y="1023.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="69.2" y="757" width="0.5" height="15.0" fill="rgb(234,202,19)" rx="2" ry="2" />
<text  x="72.23" y="767.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="71.8" y="741" width="0.4" height="15.0" fill="rgb(251,99,38)" rx="2" ry="2" />
<text  x="74.77" y="751.5" ></text>
</g>
<g >
<title>h2load::(anonymous namespace)::recorded (4 samples, 0.14%)</title><rect x="32.8" y="1013" width="1.7" height="15.0" fill="rgb(216,140,17)" rx="2" ry="2" />
<text  x="35.85" y="1023.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="1091.4" y="933" width="0.4" height="15.0" fill="rgb(211,136,43)" rx="2" ry="2" />
<text  x="1094.42" y="943.5" ></text>
</g>
<g >
<title>__gconv_transform_utf8_internal (1 samples, 0.04%)</title><rect x="1096.1" y="565" width="0.4" height="15.0" fill="rgb(247,40,29)" rx="2" ry="2" />
<text  x="1099.07" y="575.5" ></text>
</g>
<g >
<title>queue_work_on (1 samples, 0.04%)</title><rect x="1184.1" y="853" width="0.4" height="15.0" fill="rgb(240,32,54)" rx="2" ry="2" />
<text  x="1187.08" y="863.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1094.0" y="837" width="0.4" height="15.0" fill="rgb(249,185,16)" rx="2" ry="2" />
<text  x="1096.96" y="847.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="1098.6" y="757" width="0.4" height="15.0" fill="rgb(227,14,31)" rx="2" ry="2" />
<text  x="1101.61" y="767.5" ></text>
</g>
<g >
<title>getpwuid (1 samples, 0.04%)</title><rect x="1135.0" y="933" width="0.4" height="15.0" fill="rgb(250,168,16)" rx="2" ry="2" />
<text  x="1138.00" y="943.5" ></text>
</g>
<g >
<title>_dl_catch_exception (1 samples, 0.04%)</title><rect x="1098.6" y="933" width="0.4" height="15.0" fill="rgb(224,176,1)" rx="2" ry="2" />
<text  x="1101.61" y="943.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.14%)</title><rect x="1094.4" y="677" width="1.7" height="15.0" fill="rgb(248,21,37)" rx="2" ry="2" />
<text  x="1097.38" y="687.5" ></text>
</g>
<g >
<title>glob_filename (1 samples, 0.04%)</title><rect x="71.8" y="261" width="0.4" height="15.0" fill="rgb(239,21,0)" rx="2" ry="2" />
<text  x="74.77" y="271.5" ></text>
</g>
<g >
<title>prep_new_page (1 samples, 0.04%)</title><rect x="1091.4" y="789" width="0.4" height="15.0" fill="rgb(234,33,53)" rx="2" ry="2" />
<text  x="1094.42" y="799.5" ></text>
</g>
<g >
<title>std::call_once&lt;void  (46 samples, 1.65%)</title><rect x="1071.1" y="805" width="19.5" height="15.0" fill="rgb(250,66,12)" rx="2" ry="2" />
<text  x="1074.11" y="815.5" ></text>
</g>
<g >
<title>get_user_pages_remote (1 samples, 0.04%)</title><rect x="1095.7" y="165" width="0.4" height="15.0" fill="rgb(245,67,49)" rx="2" ry="2" />
<text  x="1098.65" y="175.5" ></text>
</g>
<g >
<title>OPENSSL_cleanup (1 samples, 0.04%)</title><rect x="1091.8" y="965" width="0.5" height="15.0" fill="rgb(249,19,39)" rx="2" ry="2" />
<text  x="1094.84" y="975.5" ></text>
</g>
<g >
<title>sock_recvmsg (515 samples, 18.47%)</title><rect x="193.6" y="917" width="217.9" height="15.0" fill="rgb(234,88,29)" rx="2" ry="2" />
<text  x="196.62" y="927.5" >sock_recvmsg</text>
</g>
<g >
<title>conn_compute_pto (1 samples, 0.04%)</title><rect x="1051.2" y="949" width="0.4" height="15.0" fill="rgb(241,11,44)" rx="2" ry="2" />
<text  x="1054.23" y="959.5" ></text>
</g>
<g >
<title>do_wait (1 samples, 0.04%)</title><rect x="1094.0" y="757" width="0.4" height="15.0" fill="rgb(250,74,27)" rx="2" ry="2" />
<text  x="1096.96" y="767.5" ></text>
</g>
<g >
<title>_dl_start_final (5 samples, 0.18%)</title><rect x="1098.6" y="997" width="2.1" height="15.0" fill="rgb(213,195,22)" rx="2" ry="2" />
<text  x="1101.61" y="1007.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.04%)</title><rect x="1096.9" y="373" width="0.4" height="15.0" fill="rgb(212,47,53)" rx="2" ry="2" />
<text  x="1099.92" y="383.5" ></text>
</g>
<g >
<title>ngtcp2_get_varint_len (4 samples, 0.14%)</title><rect x="926.0" y="933" width="1.7" height="15.0" fill="rgb(226,178,51)" rx="2" ry="2" />
<text  x="928.99" y="943.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, h2load::main (46 samples, 1.65%)</title><rect x="1071.1" y="597" width="19.5" height="15.0" fill="rgb(212,81,9)" rx="2" ry="2" />
<text  x="1074.11" y="607.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="71.8" y="773" width="0.4" height="15.0" fill="rgb(222,152,46)" rx="2" ry="2" />
<text  x="74.77" y="783.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;int, int  (2 samples, 0.07%)</title><rect x="1088.0" y="437" width="0.9" height="15.0" fill="rgb(250,180,21)" rx="2" ry="2" />
<text  x="1091.04" y="447.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="69.2" y="725" width="0.5" height="15.0" fill="rgb(210,42,11)" rx="2" ry="2" />
<text  x="72.23" y="735.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.04%)</title><rect x="1134.2" y="933" width="0.4" height="15.0" fill="rgb(222,61,19)" rx="2" ry="2" />
<text  x="1137.15" y="943.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="71.8" y="469" width="0.4" height="15.0" fill="rgb(245,228,26)" rx="2" ry="2" />
<text  x="74.77" y="479.5" ></text>
</g>
<g >
<title>__getpwuid_r (1 samples, 0.04%)</title><rect x="1135.0" y="917" width="0.4" height="15.0" fill="rgb(250,44,13)" rx="2" ry="2" />
<text  x="1138.00" y="927.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (633 samples, 22.70%)</title><rect x="169.1" y="949" width="267.8" height="15.0" fill="rgb(230,101,7)" rx="2" ry="2" />
<text  x="172.08" y="959.5" >__x64_sys_recvfrom</text>
</g>
<g >
<title>copy_strings.isra.0 (1 samples, 0.04%)</title><rect x="1096.5" y="405" width="0.4" height="15.0" fill="rgb(243,92,16)" rx="2" ry="2" />
<text  x="1099.50" y="415.5" ></text>
</g>
<g >
<title>__GI_epoll_ctl (8 samples, 0.29%)</title><rect x="1072.4" y="517" width="3.4" height="15.0" fill="rgb(212,184,53)" rx="2" ry="2" />
<text  x="1075.38" y="527.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="71.8" y="645" width="0.4" height="15.0" fill="rgb(225,223,30)" rx="2" ry="2" />
<text  x="74.77" y="655.5" ></text>
</g>
<g >
<title>elf_dynamic_do_Rela (1 samples, 0.04%)</title><rect x="1135.0" y="677" width="0.4" height="15.0" fill="rgb(249,13,14)" rx="2" ry="2" />
<text  x="1138.00" y="687.5" ></text>
</g>
<g >
<title>SSL_do_handshake (1 samples, 0.04%)</title><rect x="450.4" y="853" width="0.5" height="15.0" fill="rgb(231,41,5)" rx="2" ry="2" />
<text  x="453.44" y="863.5" ></text>
</g>
<g >
<title>check_stack_object (2 samples, 0.07%)</title><rect x="187.7" y="901" width="0.8" height="15.0" fill="rgb(232,176,49)" rx="2" ry="2" />
<text  x="190.70" y="911.5" ></text>
</g>
<g >
<title>__sys_sendmsg (51 samples, 1.83%)</title><rect x="1026.7" y="901" width="21.6" height="15.0" fill="rgb(254,206,23)" rx="2" ry="2" />
<text  x="1029.69" y="911.5" >_..</text>
</g>
<g >
<title>sched_idle_set_state (1 samples, 0.04%)</title><rect x="1182.0" y="917" width="0.4" height="15.0" fill="rgb(205,51,45)" rx="2" ry="2" />
<text  x="1184.96" y="927.5" ></text>
</g>
<g >
<title>free_one_page (1 samples, 0.04%)</title><rect x="384.0" y="693" width="0.4" height="15.0" fill="rgb(224,88,49)" rx="2" ry="2" />
<text  x="387.01" y="703.5" ></text>
</g>
<g >
<title>__x64_sys_mprotect (1 samples, 0.04%)</title><rect x="1133.7" y="869" width="0.5" height="15.0" fill="rgb(247,197,3)" rx="2" ry="2" />
<text  x="1136.73" y="879.5" ></text>
</g>
<g >
<title>ngtcp2_crypto_encrypt_unsecure (1 samples, 0.04%)</title><rect x="1058.4" y="917" width="0.4" height="15.0" fill="rgb(208,211,42)" rx="2" ry="2" />
<text  x="1061.42" y="927.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="71.8" y="693" width="0.4" height="15.0" fill="rgb(244,65,28)" rx="2" ry="2" />
<text  x="74.77" y="703.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="1135.4" y="933" width="0.4" height="15.0" fill="rgb(229,174,35)" rx="2" ry="2" />
<text  x="1138.42" y="943.5" ></text>
</g>
<g >
<title>conn_prepare_key_update (1 samples, 0.04%)</title><rect x="69.7" y="1013" width="0.4" height="15.0" fill="rgb(207,163,20)" rx="2" ry="2" />
<text  x="72.66" y="1023.5" ></text>
</g>
<g >
<title>ip_make_skb (14 samples, 0.50%)</title><rect x="1028.4" y="805" width="5.9" height="15.0" fill="rgb(232,123,46)" rx="2" ry="2" />
<text  x="1031.38" y="815.5" ></text>
</g>
<g >
<title>nghttp3_conn_read_stream (1 samples, 0.04%)</title><rect x="40.5" y="1013" width="0.4" height="15.0" fill="rgb(250,94,15)" rx="2" ry="2" />
<text  x="43.46" y="1023.5" ></text>
</g>
<g >
<title>release_sock (4 samples, 0.14%)</title><rect x="371.7" y="869" width="1.7" height="15.0" fill="rgb(219,22,19)" rx="2" ry="2" />
<text  x="374.74" y="879.5" ></text>
</g>
<g >
<title>__sys_recvfrom (619 samples, 22.19%)</title><rect x="169.1" y="933" width="261.9" height="15.0" fill="rgb(230,204,48)" rx="2" ry="2" />
<text  x="172.08" y="943.5" >__sys_recvfrom</text>
</g>
<g >
<title>_dl_map_segments (1 samples, 0.04%)</title><rect x="1098.6" y="869" width="0.4" height="15.0" fill="rgb(247,35,49)" rx="2" ry="2" />
<text  x="1101.61" y="879.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="1135.4" y="917" width="0.4" height="15.0" fill="rgb(207,17,21)" rx="2" ry="2" />
<text  x="1138.42" y="927.5" ></text>
</g>
<g >
<title>nghttp2::util::make_mt19937 (1 samples, 0.04%)</title><rect x="1092.3" y="949" width="0.4" height="15.0" fill="rgb(226,74,40)" rx="2" ry="2" />
<text  x="1095.27" y="959.5" ></text>
</g>
<g >
<title>h2load::Http3Session::write_stream (4 samples, 0.14%)</title><rect x="1048.3" y="997" width="1.7" height="15.0" fill="rgb(236,6,29)" rx="2" ry="2" />
<text  x="1051.26" y="1007.5" ></text>
</g>
<g >
<title>__free_pages (1 samples, 0.04%)</title><rect x="1094.0" y="629" width="0.4" height="15.0" fill="rgb(236,42,51)" rx="2" ry="2" />
<text  x="1096.96" y="639.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="71.8" y="885" width="0.4" height="15.0" fill="rgb(219,3,43)" rx="2" ry="2" />
<text  x="74.77" y="895.5" ></text>
</g>
<g >
<title>do_mprotect_pkey (1 samples, 0.04%)</title><rect x="1099.0" y="853" width="0.5" height="15.0" fill="rgb(209,127,24)" rx="2" ry="2" />
<text  x="1102.04" y="863.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="1096.1" y="693" width="0.4" height="15.0" fill="rgb(221,219,14)" rx="2" ry="2" />
<text  x="1099.07" y="703.5" ></text>
</g>
<g >
<title>aa_sk_perm (27 samples, 0.97%)</title><rect x="399.7" y="869" width="11.4" height="15.0" fill="rgb(240,64,22)" rx="2" ry="2" />
<text  x="402.67" y="879.5" ></text>
</g>
<g >
<title>__check_object_size (5 samples, 0.18%)</title><rect x="185.6" y="901" width="2.1" height="15.0" fill="rgb(240,192,15)" rx="2" ry="2" />
<text  x="188.58" y="911.5" ></text>
</g>
<g >
<title>conn_recv_crypto (1 samples, 0.04%)</title><rect x="450.4" y="917" width="0.5" height="15.0" fill="rgb(235,137,38)" rx="2" ry="2" />
<text  x="453.44" y="927.5" ></text>
</g>
<g >
<title>[bash] (2 samples, 0.07%)</title><rect x="1096.5" y="549" width="0.8" height="15.0" fill="rgb(244,105,5)" rx="2" ry="2" />
<text  x="1099.50" y="559.5" ></text>
</g>
<g >
<title>h2load::(anonymous namespace)::timestamp (1 samples, 0.04%)</title><rect x="1023.7" y="997" width="0.4" height="15.0" fill="rgb(250,57,41)" rx="2" ry="2" />
<text  x="1026.73" y="1007.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="69.2" y="245" width="0.5" height="15.0" fill="rgb(218,225,28)" rx="2" ry="2" />
<text  x="72.23" y="255.5" ></text>
</g>
<g >
<title>irq_work_interrupt (2 samples, 0.07%)</title><rect x="1188.7" y="917" width="0.9" height="15.0" fill="rgb(221,127,50)" rx="2" ry="2" />
<text  x="1191.73" y="927.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.04%)</title><rect x="1189.2" y="789" width="0.4" height="15.0" fill="rgb(227,11,21)" rx="2" ry="2" />
<text  x="1192.15" y="799.5" ></text>
</g>
<g >
<title>[ls] (1 samples, 0.04%)</title><rect x="1135.0" y="981" width="0.4" height="15.0" fill="rgb(221,84,7)" rx="2" ry="2" />
<text  x="1138.00" y="991.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.04%)</title><rect x="740.3" y="869" width="0.4" height="15.0" fill="rgb(232,175,0)" rx="2" ry="2" />
<text  x="743.25" y="879.5" ></text>
</g>
<g >
<title>validate_xmit_xfrm (1 samples, 0.04%)</title><rect x="1044.9" y="629" width="0.4" height="15.0" fill="rgb(229,118,12)" rx="2" ry="2" />
<text  x="1047.88" y="639.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.04%)</title><rect x="1135.0" y="629" width="0.4" height="15.0" fill="rgb(240,113,39)" rx="2" ry="2" />
<text  x="1138.00" y="639.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, h2load::Session*, false&gt;::_M_head (5 samples, 0.18%)</title><rect x="705.6" y="805" width="2.1" height="15.0" fill="rgb(243,204,35)" rx="2" ry="2" />
<text  x="708.56" y="815.5" ></text>
</g>
<g >
<title>OPENSSL_init_crypto (1 samples, 0.04%)</title><rect x="1093.1" y="933" width="0.4" height="15.0" fill="rgb(233,123,33)" rx="2" ry="2" />
<text  x="1096.11" y="943.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="1094.0" y="917" width="0.4" height="15.0" fill="rgb(207,117,9)" rx="2" ry="2" />
<text  x="1096.96" y="927.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="740.3" y="885" width="0.4" height="15.0" fill="rgb(231,127,39)" rx="2" ry="2" />
<text  x="743.25" y="895.5" ></text>
</g>
<g >
<title>_dl_relocate_object (1 samples, 0.04%)</title><rect x="1135.0" y="693" width="0.4" height="15.0" fill="rgb(230,217,21)" rx="2" ry="2" />
<text  x="1138.00" y="703.5" ></text>
</g>
<g >
<title>copy_user_generic_string (11 samples, 0.39%)</title><rect x="188.5" y="901" width="4.7" height="15.0" fill="rgb(233,73,12)" rx="2" ry="2" />
<text  x="191.54" y="911.5" ></text>
</g>
<g >
<title>ngtcp2_path_storage_zero (3 samples, 0.11%)</title><rect x="1061.0" y="997" width="1.2" height="15.0" fill="rgb(235,219,43)" rx="2" ry="2" />
<text  x="1063.96" y="1007.5" ></text>
</g>
<g >
<title>datagram_poll (1 samples, 0.04%)</title><rect x="1079.2" y="341" width="0.4" height="15.0" fill="rgb(213,128,49)" rx="2" ry="2" />
<text  x="1082.15" y="351.5" ></text>
</g>
<g >
<title>kthread (2 samples, 0.07%)</title><rect x="1134.2" y="1013" width="0.8" height="15.0" fill="rgb(213,219,45)" rx="2" ry="2" />
<text  x="1137.15" y="1023.5" ></text>
</g>
<g >
<title>mmput (1 samples, 0.04%)</title><rect x="1121.0" y="917" width="0.5" height="15.0" fill="rgb(244,222,30)" rx="2" ry="2" />
<text  x="1124.04" y="927.5" ></text>
</g>
<g >
<title>init_cacheinfo (1 samples, 0.04%)</title><rect x="1091.4" y="965" width="0.4" height="15.0" fill="rgb(214,216,41)" rx="2" ry="2" />
<text  x="1094.42" y="975.5" ></text>
</g>
<g >
<title>__memcmp_sse4_1 (1 samples, 0.04%)</title><rect x="743.2" y="917" width="0.4" height="15.0" fill="rgb(250,119,50)" rx="2" ry="2" />
<text  x="746.22" y="927.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;h2load::main (46 samples, 1.65%)</title><rect x="1071.1" y="949" width="19.5" height="15.0" fill="rgb(216,49,41)" rx="2" ry="2" />
<text  x="1074.11" y="959.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="69.2" y="517" width="0.5" height="15.0" fill="rgb(231,2,50)" rx="2" ry="2" />
<text  x="72.23" y="527.5" ></text>
</g>
<g >
<title>ret_from_fork (2 samples, 0.07%)</title><rect x="1134.2" y="1029" width="0.8" height="15.0" fill="rgb(238,98,37)" rx="2" ry="2" />
<text  x="1137.15" y="1039.5" ></text>
</g>
<g >
<title>path_openat (1 samples, 0.04%)</title><rect x="1092.3" y="805" width="0.4" height="15.0" fill="rgb(229,132,53)" rx="2" ry="2" />
<text  x="1095.27" y="815.5" ></text>
</g>
<g >
<title>nss_load_library (1 samples, 0.04%)</title><rect x="1135.0" y="837" width="0.4" height="15.0" fill="rgb(234,139,2)" rx="2" ry="2" />
<text  x="1138.00" y="847.5" ></text>
</g>
<g >
<title>ngtcp2_ksl_range_exclusive_compar (1 samples, 0.04%)</title><rect x="951.8" y="885" width="0.4" height="15.0" fill="rgb(232,37,43)" rx="2" ry="2" />
<text  x="954.80" y="895.5" ></text>
</g>
<g >
<title>ossl_init_ssl_base_ossl_ (1 samples, 0.04%)</title><rect x="1092.7" y="901" width="0.4" height="15.0" fill="rgb(213,61,13)" rx="2" ry="2" />
<text  x="1095.69" y="911.5" ></text>
</g>
<g >
<title>qlog_pkt_write_end (1 samples, 0.04%)</title><rect x="994.5" y="949" width="0.5" height="15.0" fill="rgb(234,127,2)" rx="2" ry="2" />
<text  x="997.53" y="959.5" ></text>
</g>
<g >
<title>conn_extend_max_stream_offset (2 samples, 0.07%)</title><rect x="671.7" y="869" width="0.9" height="15.0" fill="rgb(243,181,28)" rx="2" ry="2" />
<text  x="674.71" y="879.5" ></text>
</g>
<g >
<title>__slab_free (1 samples, 0.04%)</title><rect x="375.1" y="821" width="0.5" height="15.0" fill="rgb(249,10,15)" rx="2" ry="2" />
<text  x="378.13" y="831.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (55 samples, 1.97%)</title><rect x="821.9" y="885" width="23.3" height="15.0" fill="rgb(220,176,16)" rx="2" ry="2" />
<text  x="824.91" y="895.5" >_..</text>
</g>
<g >
<title>conn_recv_stream (2 samples, 0.07%)</title><rect x="20.2" y="997" width="0.8" height="15.0" fill="rgb(232,55,13)" rx="2" ry="2" />
<text  x="23.15" y="1007.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.04%)</title><rect x="1121.0" y="869" width="0.5" height="15.0" fill="rgb(235,104,2)" rx="2" ry="2" />
<text  x="1124.04" y="879.5" ></text>
</g>
<g >
<title>proc_cgroup_show (1 samples, 0.04%)</title><rect x="1132.9" y="789" width="0.4" height="15.0" fill="rgb(217,24,17)" rx="2" ry="2" />
<text  x="1135.88" y="799.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1132.9" y="1029" width="0.4" height="15.0" fill="rgb(224,96,1)" rx="2" ry="2" />
<text  x="1135.88" y="1039.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1099.0" y="885" width="0.5" height="15.0" fill="rgb(220,192,40)" rx="2" ry="2" />
<text  x="1102.04" y="895.5" ></text>
</g>
<g >
<title>command_substitute (1 samples, 0.04%)</title><rect x="71.8" y="389" width="0.4" height="15.0" fill="rgb(206,229,42)" rx="2" ry="2" />
<text  x="74.77" y="399.5" ></text>
</g>
<g >
<title>sysmalloc (1 samples, 0.04%)</title><rect x="71.8" y="149" width="0.4" height="15.0" fill="rgb(213,165,10)" rx="2" ry="2" />
<text  x="74.77" y="159.5" ></text>
</g>
<g >
<title>EVP_PKEY_CTX_ctrl (1 samples, 0.04%)</title><rect x="450.4" y="757" width="0.5" height="15.0" fill="rgb(252,69,42)" rx="2" ry="2" />
<text  x="453.44" y="767.5" ></text>
</g>
<g >
<title>__libc_sendmsg (53 samples, 1.90%)</title><rect x="1025.8" y="965" width="22.5" height="15.0" fill="rgb(248,85,26)" rx="2" ry="2" />
<text  x="1028.84" y="975.5" >_..</text>
</g>
<g >
<title>std::chrono::operator!=&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (29 samples, 1.04%)</title><rect x="621.4" y="741" width="12.2" height="15.0" fill="rgb(212,153,46)" rx="2" ry="2" />
<text  x="624.37" y="751.5" ></text>
</g>
<g >
<title>[ls] (1 samples, 0.04%)</title><rect x="1135.0" y="949" width="0.4" height="15.0" fill="rgb(251,50,5)" rx="2" ry="2" />
<text  x="1138.00" y="959.5" ></text>
</g>
<g >
<title>ngtcp2_ksl_lower_bound (77 samples, 2.76%)</title><rect x="744.5" y="933" width="32.6" height="15.0" fill="rgb(230,94,12)" rx="2" ry="2" />
<text  x="747.49" y="943.5" >ng..</text>
</g>
<g >
<title>[h2load] (1 samples, 0.04%)</title><rect x="66.3" y="1029" width="0.4" height="15.0" fill="rgb(209,35,3)" rx="2" ry="2" />
<text  x="69.27" y="1039.5" ></text>
</g>
<g >
<title>conn_prepare_key_update (4 samples, 0.14%)</title><rect x="487.7" y="981" width="1.7" height="15.0" fill="rgb(232,142,12)" rx="2" ry="2" />
<text  x="490.67" y="991.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (6 samples, 0.22%)</title><rect x="1137.5" y="901" width="2.6" height="15.0" fill="rgb(223,75,12)" rx="2" ry="2" />
<text  x="1140.54" y="911.5" ></text>
</g>
<g >
<title>decrypt_hp (13 samples, 0.47%)</title><rect x="27.3" y="1013" width="5.5" height="15.0" fill="rgb(245,148,18)" rx="2" ry="2" />
<text  x="30.35" y="1023.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="71.8" y="1013" width="0.4" height="15.0" fill="rgb(232,179,23)" rx="2" ry="2" />
<text  x="74.77" y="1023.5" ></text>
</g>
<g >
<title>ngtcp2_rtb_lost_pkt_ts (1 samples, 0.04%)</title><rect x="1024.6" y="949" width="0.4" height="15.0" fill="rgb(226,229,28)" rx="2" ry="2" />
<text  x="1027.57" y="959.5" ></text>
</g>
<g >
<title>__get_user_pages (1 samples, 0.04%)</title><rect x="1095.7" y="149" width="0.4" height="15.0" fill="rgb(249,212,49)" rx="2" ry="2" />
<text  x="1098.65" y="159.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned (1 samples, 0.04%)</title><rect x="858.7" y="917" width="0.4" height="15.0" fill="rgb(227,66,29)" rx="2" ry="2" />
<text  x="861.72" y="927.5" ></text>
</g>
<g >
<title>ksl_bsearch (4 samples, 0.14%)</title><rect x="872.7" y="901" width="1.7" height="15.0" fill="rgb(220,217,4)" rx="2" ry="2" />
<text  x="875.68" y="911.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (1 samples, 0.04%)</title><rect x="1136.7" y="901" width="0.4" height="15.0" fill="rgb(212,74,52)" rx="2" ry="2" />
<text  x="1139.69" y="911.5" ></text>
</g>
<g >
<title>psi_task_change (5 samples, 0.18%)</title><rect x="1184.9" y="917" width="2.1" height="15.0" fill="rgb(251,32,9)" rx="2" ry="2" />
<text  x="1187.92" y="927.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1133.7" y="901" width="0.5" height="15.0" fill="rgb(213,222,22)" rx="2" ry="2" />
<text  x="1136.73" y="911.5" ></text>
</g>
<g >
<title>deactivate_task (1 samples, 0.04%)</title><rect x="1096.9" y="341" width="0.4" height="15.0" fill="rgb(211,75,48)" rx="2" ry="2" />
<text  x="1099.92" y="351.5" ></text>
</g>
<g >
<title>conn_recv_handshake_cpkt (1 samples, 0.04%)</title><rect x="450.4" y="981" width="0.5" height="15.0" fill="rgb(234,55,39)" rx="2" ry="2" />
<text  x="453.44" y="991.5" ></text>
</g>
<g >
<title>__mprotect (1 samples, 0.04%)</title><rect x="1136.3" y="917" width="0.4" height="15.0" fill="rgb(248,59,36)" rx="2" ry="2" />
<text  x="1139.27" y="927.5" ></text>
</g>
<g >
<title>ngtcp2_ksl_range_compar (1 samples, 0.04%)</title><rect x="954.3" y="885" width="0.5" height="15.0" fill="rgb(242,17,43)" rx="2" ry="2" />
<text  x="957.34" y="895.5" ></text>
</g>
<g >
<title>std::function&lt;int  (2 samples, 0.07%)</title><rect x="1088.0" y="485" width="0.9" height="15.0" fill="rgb(206,2,15)" rx="2" ry="2" />
<text  x="1091.04" y="495.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.04%)</title><rect x="1184.5" y="885" width="0.4" height="15.0" fill="rgb(250,13,36)" rx="2" ry="2" />
<text  x="1187.50" y="895.5" ></text>
</g>
<g >
<title>ip4_datagram_release_cb (3 samples, 0.11%)</title><rect x="369.2" y="869" width="1.3" height="15.0" fill="rgb(223,189,5)" rx="2" ry="2" />
<text  x="372.20" y="879.5" ></text>
</g>
<g >
<title>std::call_once&lt;void  (46 samples, 1.65%)</title><rect x="1071.1" y="789" width="19.5" height="15.0" fill="rgb(235,151,27)" rx="2" ry="2" />
<text  x="1074.11" y="799.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;std::__future_base::_Async_state_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;h2load::main (46 samples, 1.65%)</title><rect x="1071.1" y="965" width="19.5" height="15.0" fill="rgb(236,12,0)" rx="2" ry="2" />
<text  x="1074.11" y="975.5" ></text>
</g>
<g >
<title>[ls] (1 samples, 0.04%)</title><rect x="1135.0" y="965" width="0.4" height="15.0" fill="rgb(230,28,22)" rx="2" ry="2" />
<text  x="1138.00" y="975.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (1 samples, 0.04%)</title><rect x="1136.3" y="789" width="0.4" height="15.0" fill="rgb(216,100,2)" rx="2" ry="2" />
<text  x="1139.27" y="799.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (3 samples, 0.11%)</title><rect x="1031.8" y="693" width="1.2" height="15.0" fill="rgb(218,195,15)" rx="2" ry="2" />
<text  x="1034.76" y="703.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="1096.1" y="597" width="0.4" height="15.0" fill="rgb(247,142,1)" rx="2" ry="2" />
<text  x="1099.07" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_sendmsg (51 samples, 1.83%)</title><rect x="1026.7" y="917" width="21.6" height="15.0" fill="rgb(213,209,11)" rx="2" ry="2" />
<text  x="1029.69" y="927.5" >_..</text>
</g>
<g >
<title>flush_smp_call_function_queue (6 samples, 0.22%)</title><rect x="1137.5" y="869" width="2.6" height="15.0" fill="rgb(228,10,4)" rx="2" ry="2" />
<text  x="1140.54" y="879.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (1 samples, 0.04%)</title><rect x="193.2" y="917" width="0.4" height="15.0" fill="rgb(250,157,6)" rx="2" ry="2" />
<text  x="196.20" y="927.5" ></text>
</g>
<g >
<title>[bash] (2 samples, 0.07%)</title><rect x="1096.5" y="645" width="0.8" height="15.0" fill="rgb(218,174,52)" rx="2" ry="2" />
<text  x="1099.50" y="655.5" ></text>
</g>
<g >
<title>execute_command_internal (2 samples, 0.07%)</title><rect x="1095.2" y="357" width="0.9" height="15.0" fill="rgb(209,21,8)" rx="2" ry="2" />
<text  x="1098.23" y="367.5" ></text>
</g>
<g >
<title>execute_command (4 samples, 0.14%)</title><rect x="1094.4" y="549" width="1.7" height="15.0" fill="rgb(234,136,39)" rx="2" ry="2" />
<text  x="1097.38" y="559.5" ></text>
</g>
<g >
<title>cid_less (1 samples, 0.04%)</title><rect x="759.3" y="901" width="0.4" height="15.0" fill="rgb(216,205,26)" rx="2" ry="2" />
<text  x="762.29" y="911.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="1094.8" y="229" width="0.4" height="15.0" fill="rgb(252,145,8)" rx="2" ry="2" />
<text  x="1097.80" y="239.5" ></text>
</g>
<g >
<title>ngtcp2_rtb_entry_new (2 samples, 0.07%)</title><rect x="1060.1" y="949" width="0.9" height="15.0" fill="rgb(209,194,42)" rx="2" ry="2" />
<text  x="1063.11" y="959.5" ></text>
</g>
<g >
<title>std::array&lt;unsigned char, 65536ul&gt;::data (9 samples, 0.32%)</title><rect x="1126.1" y="1029" width="3.8" height="15.0" fill="rgb(249,98,26)" rx="2" ry="2" />
<text  x="1129.11" y="1039.5" ></text>
</g>
<g >
<title>ixgbe_select_queue (1 samples, 0.04%)</title><rect x="1042.3" y="645" width="0.5" height="15.0" fill="rgb(244,26,14)" rx="2" ry="2" />
<text  x="1045.34" y="655.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="1135.4" y="901" width="0.4" height="15.0" fill="rgb(233,185,12)" rx="2" ry="2" />
<text  x="1138.42" y="911.5" ></text>
</g>
<g >
<title>OPENSSL_LH_insert (1 samples, 0.04%)</title><rect x="1093.1" y="645" width="0.4" height="15.0" fill="rgb(215,217,18)" rx="2" ry="2" />
<text  x="1096.11" y="655.5" ></text>
</g>
<g >
<title>split_vma (1 samples, 0.04%)</title><rect x="1133.7" y="821" width="0.5" height="15.0" fill="rgb(213,110,4)" rx="2" ry="2" />
<text  x="1136.73" y="831.5" ></text>
</g>
<g >
<title>copy_user_generic_string (189 samples, 6.78%)</title><rect x="278.2" y="853" width="80.0" height="15.0" fill="rgb(250,174,11)" rx="2" ry="2" />
<text  x="281.24" y="863.5" >copy_user..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1096.5" y="469" width="0.4" height="15.0" fill="rgb(211,166,22)" rx="2" ry="2" />
<text  x="1099.50" y="479.5" ></text>
</g>
<g >
<title>_dl_map_object_deps (1 samples, 0.04%)</title><rect x="1133.3" y="949" width="0.4" height="15.0" fill="rgb(212,215,21)" rx="2" ry="2" />
<text  x="1136.31" y="959.5" ></text>
</g>
<g >
<title>tls13_final_finish_mac (1 samples, 0.04%)</title><rect x="450.4" y="789" width="0.5" height="15.0" fill="rgb(206,61,27)" rx="2" ry="2" />
<text  x="453.44" y="799.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1072.8" y="501" width="0.4" height="15.0" fill="rgb(230,92,3)" rx="2" ry="2" />
<text  x="1075.80" y="511.5" ></text>
</g>
<g >
<title>select_estimate_accuracy (3 samples, 0.11%)</title><rect x="1084.7" y="421" width="1.2" height="15.0" fill="rgb(238,116,24)" rx="2" ry="2" />
<text  x="1087.65" y="431.5" ></text>
</g>
<g >
<title>expand_string_assignment (1 samples, 0.04%)</title><rect x="71.8" y="437" width="0.4" height="15.0" fill="rgb(219,121,16)" rx="2" ry="2" />
<text  x="74.77" y="447.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (46 samples, 1.65%)</title><rect x="411.5" y="917" width="19.5" height="15.0" fill="rgb(226,7,47)" rx="2" ry="2" />
<text  x="414.51" y="927.5" ></text>
</g>
<g >
<title>epoll_wait (24 samples, 0.86%)</title><rect x="1075.8" y="517" width="10.1" height="15.0" fill="rgb(254,64,49)" rx="2" ry="2" />
<text  x="1078.77" y="527.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="1184.1" y="949" width="0.4" height="15.0" fill="rgb(232,131,22)" rx="2" ry="2" />
<text  x="1187.08" y="959.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="71.8" y="597" width="0.4" height="15.0" fill="rgb(207,140,27)" rx="2" ry="2" />
<text  x="74.77" y="607.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="1189.2" y="773" width="0.4" height="15.0" fill="rgb(223,84,4)" rx="2" ry="2" />
<text  x="1192.15" y="783.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="69.2" y="549" width="0.5" height="15.0" fill="rgb(214,111,38)" rx="2" ry="2" />
<text  x="72.23" y="559.5" ></text>
</g>
<g >
<title>__pthread_once_slow (46 samples, 1.65%)</title><rect x="1071.1" y="837" width="19.5" height="15.0" fill="rgb(219,36,18)" rx="2" ry="2" />
<text  x="1074.11" y="847.5" ></text>
</g>
<g >
<title>__x64_sys_mprotect (1 samples, 0.04%)</title><rect x="1136.3" y="869" width="0.4" height="15.0" fill="rgb(218,64,2)" rx="2" ry="2" />
<text  x="1139.27" y="879.5" ></text>
</g>
<g >
<title>expand_string_assignment (1 samples, 0.04%)</title><rect x="1094.8" y="341" width="0.4" height="15.0" fill="rgb(240,219,32)" rx="2" ry="2" />
<text  x="1097.80" y="351.5" ></text>
</g>
<g >
<title>ERR_get_state (1 samples, 0.04%)</title><rect x="1093.1" y="773" width="0.4" height="15.0" fill="rgb(253,223,14)" rx="2" ry="2" />
<text  x="1096.11" y="783.5" ></text>
</g>
<g >
<title>move_addr_to_user (4 samples, 0.14%)</title><rect x="433.5" y="933" width="1.7" height="15.0" fill="rgb(249,179,16)" rx="2" ry="2" />
<text  x="436.51" y="943.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (46 samples, 1.65%)</title><rect x="1071.1" y="757" width="19.5" height="15.0" fill="rgb(240,112,28)" rx="2" ry="2" />
<text  x="1074.11" y="767.5" ></text>
</g>
<g >
<title>filemap_fault (1 samples, 0.04%)</title><rect x="1098.6" y="693" width="0.4" height="15.0" fill="rgb(251,75,30)" rx="2" ry="2" />
<text  x="1101.61" y="703.5" ></text>
</g>
<g >
<title>copy_strings.isra.0 (1 samples, 0.04%)</title><rect x="1095.7" y="181" width="0.4" height="15.0" fill="rgb(242,61,26)" rx="2" ry="2" />
<text  x="1098.65" y="191.5" ></text>
</g>
<g >
<title>ngtcp2_cid_less (7 samples, 0.25%)</title><rect x="41.3" y="1013" width="3.0" height="15.0" fill="rgb(236,111,4)" rx="2" ry="2" />
<text  x="44.31" y="1023.5" ></text>
</g>
<g >
<title>execute_command (2 samples, 0.07%)</title><rect x="1094.4" y="501" width="0.8" height="15.0" fill="rgb(238,124,10)" rx="2" ry="2" />
<text  x="1097.38" y="511.5" ></text>
</g>
<g >
<title>execute_command_internal (8 samples, 0.29%)</title><rect x="1094.4" y="917" width="3.4" height="15.0" fill="rgb(245,53,26)" rx="2" ry="2" />
<text  x="1097.38" y="927.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="71.8" y="453" width="0.4" height="15.0" fill="rgb(245,197,38)" rx="2" ry="2" />
<text  x="74.77" y="463.5" ></text>
</g>
<g >
<title>[bash] (2 samples, 0.07%)</title><rect x="1095.2" y="293" width="0.9" height="15.0" fill="rgb(238,26,8)" rx="2" ry="2" />
<text  x="1098.23" y="303.5" ></text>
</g>
<g >
<title>_dl_map_object_from_fd (1 samples, 0.04%)</title><rect x="1098.6" y="885" width="0.4" height="15.0" fill="rgb(242,56,31)" rx="2" ry="2" />
<text  x="1101.61" y="895.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="1135.4" y="869" width="0.4" height="15.0" fill="rgb(210,84,17)" rx="2" ry="2" />
<text  x="1138.42" y="879.5" ></text>
</g>
<g >
<title>check_stack_object (3 samples, 0.11%)</title><rect x="367.1" y="869" width="1.3" height="15.0" fill="rgb(244,16,48)" rx="2" ry="2" />
<text  x="370.09" y="879.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (20 samples, 0.72%)</title><rect x="612.9" y="741" width="8.5" height="15.0" fill="rgb(240,35,23)" rx="2" ry="2" />
<text  x="615.90" y="751.5" ></text>
</g>
<g >
<title>[bash] (4 samples, 0.14%)</title><rect x="1094.4" y="661" width="1.7" height="15.0" fill="rgb(208,15,54)" rx="2" ry="2" />
<text  x="1097.38" y="671.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="125.9" y="981" width="0.9" height="15.0" fill="rgb(253,102,50)" rx="2" ry="2" />
<text  x="128.93" y="991.5" ></text>
</g>
</g>
</svg>
