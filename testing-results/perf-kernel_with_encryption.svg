<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="550" onload="init(evt)" viewBox="0 0 1200 550" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="550.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="533" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="533" > </text>
<g id="frames">
<g >
<title>ip_make_skb (2 samples, 0.29%)</title><rect x="49.4" y="261" width="3.5" height="15.0" fill="rgb(219,222,5)" rx="2" ry="2" />
<text  x="52.45" y="271.5" ></text>
</g>
<g >
<title>__skb_try_recv_from_queue (1 samples, 0.15%)</title><rect x="1081.9" y="325" width="1.8" height="15.0" fill="rgb(241,70,19)" rx="2" ry="2" />
<text  x="1084.95" y="335.5" ></text>
</g>
<g >
<title>wp_page_copy (1 samples, 0.15%)</title><rect x="1171.1" y="293" width="1.7" height="15.0" fill="rgb(210,132,53)" rx="2" ry="2" />
<text  x="1174.13" y="303.5" ></text>
</g>
<g >
<title>__ip_finish_output (1 samples, 0.15%)</title><rect x="52.9" y="181" width="1.7" height="15.0" fill="rgb(242,48,25)" rx="2" ry="2" />
<text  x="55.88" y="191.5" ></text>
</g>
<g >
<title>load_elf_binary (4 samples, 0.58%)</title><rect x="1172.8" y="373" width="6.9" height="15.0" fill="rgb(243,20,29)" rx="2" ry="2" />
<text  x="1175.85" y="383.5" ></text>
</g>
<g >
<title>skb_consume_udp (2 samples, 0.29%)</title><rect x="1087.1" y="341" width="3.4" height="15.0" fill="rgb(206,216,19)" rx="2" ry="2" />
<text  x="1090.09" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.58%)</title><rect x="1183.1" y="437" width="6.9" height="15.0" fill="rgb(252,130,9)" rx="2" ry="2" />
<text  x="1186.14" y="447.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.15%)</title><rect x="1171.1" y="469" width="1.7" height="15.0" fill="rgb(250,169,17)" rx="2" ry="2" />
<text  x="1174.13" y="479.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.15%)</title><rect x="1131.7" y="373" width="1.7" height="15.0" fill="rgb(205,68,19)" rx="2" ry="2" />
<text  x="1134.69" y="383.5" ></text>
</g>
<g >
<title>conn_recv_pkt (1 samples, 0.15%)</title><rect x="593.1" y="453" width="1.8" height="15.0" fill="rgb(228,168,29)" rx="2" ry="2" />
<text  x="596.14" y="463.5" ></text>
</g>
<g >
<title>hash (1 samples, 0.15%)</title><rect x="1150.6" y="469" width="1.7" height="15.0" fill="rgb(247,27,45)" rx="2" ry="2" />
<text  x="1153.55" y="479.5" ></text>
</g>
<g >
<title>ngtcp2_gaptr_is_pushed (2 samples, 0.29%)</title><rect x="1155.7" y="469" width="3.4" height="15.0" fill="rgb(234,162,2)" rx="2" ry="2" />
<text  x="1158.70" y="479.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1 samples, 0.15%)</title><rect x="1083.7" y="325" width="1.7" height="15.0" fill="rgb(244,75,13)" rx="2" ry="2" />
<text  x="1086.66" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (31 samples, 4.51%)</title><rect x="1076.8" y="453" width="53.2" height="15.0" fill="rgb(226,53,24)" rx="2" ry="2" />
<text  x="1079.80" y="463.5" >entry..</text>
</g>
<g >
<title>__skb_datagram_iter (19 samples, 2.76%)</title><rect x="1090.5" y="325" width="32.6" height="15.0" fill="rgb(238,5,8)" rx="2" ry="2" />
<text  x="1093.52" y="335.5" >__..</text>
</g>
<g >
<title>update_curr (1 samples, 0.15%)</title><rect x="1143.7" y="261" width="1.7" height="15.0" fill="rgb(246,99,37)" rx="2" ry="2" />
<text  x="1146.69" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1 samples, 0.15%)</title><rect x="1181.4" y="421" width="1.7" height="15.0" fill="rgb(214,75,22)" rx="2" ry="2" />
<text  x="1184.42" y="431.5" ></text>
</g>
<g >
<title>nghttp3_conn_read_bidi (1 samples, 0.15%)</title><rect x="1016.8" y="453" width="1.7" height="15.0" fill="rgb(226,52,28)" rx="2" ry="2" />
<text  x="1019.77" y="463.5" ></text>
</g>
<g >
<title>____sys_sendmsg (4 samples, 0.58%)</title><rect x="47.7" y="325" width="6.9" height="15.0" fill="rgb(235,169,30)" rx="2" ry="2" />
<text  x="50.73" y="335.5" ></text>
</g>
<g >
<title>__consume_stateless_skb (2 samples, 0.29%)</title><rect x="1087.1" y="325" width="3.4" height="15.0" fill="rgb(205,167,39)" rx="2" ry="2" />
<text  x="1090.09" y="335.5" ></text>
</g>
<g >
<title>ip_local_out (1 samples, 0.15%)</title><rect x="52.9" y="229" width="1.7" height="15.0" fill="rgb(243,112,53)" rx="2" ry="2" />
<text  x="55.88" y="239.5" ></text>
</g>
<g >
<title>nghttp3_get_varint (2 samples, 0.29%)</title><rect x="1018.5" y="453" width="3.4" height="15.0" fill="rgb(247,39,25)" rx="2" ry="2" />
<text  x="1021.49" y="463.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.15%)</title><rect x="1020.2" y="389" width="1.7" height="15.0" fill="rgb(217,75,36)" rx="2" ry="2" />
<text  x="1023.20" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_sched_setaffinity (4 samples, 0.58%)</title><rect x="1183.1" y="405" width="6.9" height="15.0" fill="rgb(215,189,12)" rx="2" ry="2" />
<text  x="1186.14" y="415.5" ></text>
</g>
<g >
<title>nghttp3_get_varint_len (1 samples, 0.15%)</title><rect x="1021.9" y="453" width="1.7" height="15.0" fill="rgb(226,203,2)" rx="2" ry="2" />
<text  x="1024.92" y="463.5" ></text>
</g>
<g >
<title>udp_recvmsg (28 samples, 4.07%)</title><rect x="1076.8" y="357" width="48.0" height="15.0" fill="rgb(237,45,41)" rx="2" ry="2" />
<text  x="1079.80" y="367.5" >udp_..</text>
</g>
<g >
<title>setup_new_exec (4 samples, 0.58%)</title><rect x="1172.8" y="357" width="6.9" height="15.0" fill="rgb(224,23,12)" rx="2" ry="2" />
<text  x="1175.85" y="367.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (4 samples, 0.58%)</title><rect x="1183.1" y="453" width="6.9" height="15.0" fill="rgb(236,0,17)" rx="2" ry="2" />
<text  x="1186.14" y="463.5" ></text>
</g>
<g >
<title>ixgbe_tx_map (1 samples, 0.15%)</title><rect x="52.9" y="53" width="1.7" height="15.0" fill="rgb(214,137,5)" rx="2" ry="2" />
<text  x="55.88" y="63.5" ></text>
</g>
<g >
<title>sched_setaffinity (4 samples, 0.58%)</title><rect x="1183.1" y="389" width="6.9" height="15.0" fill="rgb(225,217,12)" rx="2" ry="2" />
<text  x="1186.14" y="399.5" ></text>
</g>
<g >
<title>nghttp3_http_on_data_chunk (1 samples, 0.15%)</title><rect x="1147.1" y="453" width="1.7" height="15.0" fill="rgb(226,198,52)" rx="2" ry="2" />
<text  x="1150.12" y="463.5" ></text>
</g>
<g >
<title>intel_pmu_nhm_enable_all (4 samples, 0.58%)</title><rect x="1183.1" y="229" width="6.9" height="15.0" fill="rgb(248,77,37)" rx="2" ry="2" />
<text  x="1186.14" y="239.5" ></text>
</g>
<g >
<title>do_anonymous_page (1 samples, 0.15%)</title><rect x="1131.7" y="357" width="1.7" height="15.0" fill="rgb(215,101,42)" rx="2" ry="2" />
<text  x="1134.69" y="367.5" ></text>
</g>
<g >
<title>aes_gcm_ctrl (1 samples, 0.15%)</title><rect x="591.4" y="453" width="1.7" height="15.0" fill="rgb(253,66,16)" rx="2" ry="2" />
<text  x="594.42" y="463.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.15%)</title><rect x="52.9" y="117" width="1.7" height="15.0" fill="rgb(205,98,11)" rx="2" ry="2" />
<text  x="55.88" y="127.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.15%)</title><rect x="52.9" y="133" width="1.7" height="15.0" fill="rgb(245,32,7)" rx="2" ry="2" />
<text  x="55.88" y="143.5" ></text>
</g>
<g >
<title>gcm_ghash_4bit (246 samples, 35.76%)</title><rect x="594.9" y="453" width="421.9" height="15.0" fill="rgb(235,78,17)" rx="2" ry="2" />
<text  x="597.85" y="463.5" >gcm_ghash_4bit</text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.15%)</title><rect x="1171.1" y="357" width="1.7" height="15.0" fill="rgb(246,107,48)" rx="2" ry="2" />
<text  x="1174.13" y="367.5" ></text>
</g>
<g >
<title>nghttp3_stream_read_state_reset (1 samples, 0.15%)</title><rect x="1023.6" y="453" width="1.7" height="15.0" fill="rgb(239,32,4)" rx="2" ry="2" />
<text  x="1026.63" y="463.5" ></text>
</g>
<g >
<title>page_frag_free (1 samples, 0.15%)</title><rect x="1088.8" y="293" width="1.7" height="15.0" fill="rgb(234,203,47)" rx="2" ry="2" />
<text  x="1091.81" y="303.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.15%)</title><rect x="1020.2" y="437" width="1.7" height="15.0" fill="rgb(235,90,38)" rx="2" ry="2" />
<text  x="1023.20" y="447.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.15%)</title><rect x="1171.1" y="405" width="1.7" height="15.0" fill="rgb(231,211,10)" rx="2" ry="2" />
<text  x="1174.13" y="415.5" ></text>
</g>
<g >
<title>preempt_schedule_common (4 samples, 0.58%)</title><rect x="1183.1" y="325" width="6.9" height="15.0" fill="rgb(217,52,17)" rx="2" ry="2" />
<text  x="1186.14" y="335.5" ></text>
</g>
<g >
<title>stop_one_cpu (4 samples, 0.58%)</title><rect x="1183.1" y="357" width="6.9" height="15.0" fill="rgb(225,204,21)" rx="2" ry="2" />
<text  x="1186.14" y="367.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame_ring (1 samples, 0.15%)</title><rect x="52.9" y="69" width="1.7" height="15.0" fill="rgb(254,96,44)" rx="2" ry="2" />
<text  x="55.88" y="79.5" ></text>
</g>
<g >
<title>do_wp_page (1 samples, 0.15%)</title><rect x="1171.1" y="309" width="1.7" height="15.0" fill="rgb(244,136,16)" rx="2" ry="2" />
<text  x="1174.13" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.58%)</title><rect x="1183.1" y="421" width="6.9" height="15.0" fill="rgb(214,170,7)" rx="2" ry="2" />
<text  x="1186.14" y="431.5" ></text>
</g>
<g >
<title>h2load::(anonymous namespace)::stream_close (2 samples, 0.29%)</title><rect x="1147.1" y="469" width="3.5" height="15.0" fill="rgb(254,101,12)" rx="2" ry="2" />
<text  x="1150.12" y="479.5" ></text>
</g>
<g >
<title>__do_execve_file.isra.0 (1 samples, 0.15%)</title><rect x="1181.4" y="405" width="1.7" height="15.0" fill="rgb(223,226,1)" rx="2" ry="2" />
<text  x="1184.42" y="415.5" ></text>
</g>
<g >
<title>[unknown] (618 samples, 89.83%)</title><rect x="11.7" y="469" width="1060.0" height="15.0" fill="rgb(245,83,36)" rx="2" ry="2" />
<text  x="14.72" y="479.5" >[unknown]</text>
</g>
<g >
<title>__libc_sendmsg (5 samples, 0.73%)</title><rect x="46.0" y="421" width="8.6" height="15.0" fill="rgb(233,190,18)" rx="2" ry="2" />
<text  x="49.02" y="431.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.15%)</title><rect x="1131.7" y="309" width="1.7" height="15.0" fill="rgb(208,104,47)" rx="2" ry="2" />
<text  x="1134.69" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (3 samples, 0.44%)</title><rect x="1140.3" y="421" width="5.1" height="15.0" fill="rgb(237,43,21)" rx="2" ry="2" />
<text  x="1143.26" y="431.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.15%)</title><rect x="1143.7" y="325" width="1.7" height="15.0" fill="rgb(209,197,4)" rx="2" ry="2" />
<text  x="1146.69" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.58%)</title><rect x="1172.8" y="437" width="6.9" height="15.0" fill="rgb(219,187,6)" rx="2" ry="2" />
<text  x="1175.85" y="447.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 0.15%)</title><rect x="1143.7" y="373" width="1.7" height="15.0" fill="rgb(227,96,1)" rx="2" ry="2" />
<text  x="1146.69" y="383.5" ></text>
</g>
<g >
<title>memcpy@GLIBC_2.2.5 (1 samples, 0.15%)</title><rect x="54.6" y="437" width="1.7" height="15.0" fill="rgb(217,128,16)" rx="2" ry="2" />
<text  x="57.59" y="447.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.58%)</title><rect x="1183.1" y="277" width="6.9" height="15.0" fill="rgb(245,9,35)" rx="2" ry="2" />
<text  x="1186.14" y="287.5" ></text>
</g>
<g >
<title>ixgbe_xmit_frame (1 samples, 0.15%)</title><rect x="52.9" y="85" width="1.7" height="15.0" fill="rgb(216,202,42)" rx="2" ry="2" />
<text  x="55.88" y="95.5" ></text>
</g>
<g >
<title>__libc_recvfrom (35 samples, 5.09%)</title><rect x="1071.7" y="469" width="60.0" height="15.0" fill="rgb(245,77,44)" rx="2" ry="2" />
<text  x="1074.66" y="479.5" >__libc..</text>
</g>
<g >
<title>simple_copy_to_iter (17 samples, 2.47%)</title><rect x="1094.0" y="309" width="29.1" height="15.0" fill="rgb(232,32,6)" rx="2" ry="2" />
<text  x="1096.95" y="319.5" >si..</text>
</g>
<g >
<title>native_write_msr (4 samples, 0.58%)</title><rect x="1183.1" y="213" width="6.9" height="15.0" fill="rgb(211,105,16)" rx="2" ry="2" />
<text  x="1186.14" y="223.5" ></text>
</g>
<g >
<title>inet_sendmsg (3 samples, 0.44%)</title><rect x="49.4" y="293" width="5.2" height="15.0" fill="rgb(220,228,33)" rx="2" ry="2" />
<text  x="52.45" y="303.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.15%)</title><rect x="42.6" y="437" width="1.7" height="15.0" fill="rgb(241,226,52)" rx="2" ry="2" />
<text  x="45.59" y="447.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.15%)</title><rect x="1020.2" y="421" width="1.7" height="15.0" fill="rgb(205,134,34)" rx="2" ry="2" />
<text  x="1023.20" y="431.5" ></text>
</g>
<g >
<title>ngtcp2_pkt_decode_stream_frame (2 samples, 0.29%)</title><rect x="1028.8" y="453" width="3.4" height="15.0" fill="rgb(211,215,34)" rx="2" ry="2" />
<text  x="1031.78" y="463.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.15%)</title><rect x="1087.1" y="293" width="1.7" height="15.0" fill="rgb(250,99,17)" rx="2" ry="2" />
<text  x="1090.09" y="303.5" ></text>
</g>
<g >
<title>EVP_CIPHER_nid (1 samples, 0.15%)</title><rect x="39.2" y="437" width="1.7" height="15.0" fill="rgb(211,86,43)" rx="2" ry="2" />
<text  x="42.16" y="447.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (1 samples, 0.15%)</title><rect x="1131.7" y="469" width="1.7" height="15.0" fill="rgb(211,21,52)" rx="2" ry="2" />
<text  x="1134.69" y="479.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.15%)</title><rect x="1143.7" y="293" width="1.7" height="15.0" fill="rgb(247,187,1)" rx="2" ry="2" />
<text  x="1146.69" y="303.5" ></text>
</g>
<g >
<title>lock_sock_nested (1 samples, 0.15%)</title><rect x="1085.4" y="341" width="1.7" height="15.0" fill="rgb(212,54,29)" rx="2" ry="2" />
<text  x="1088.38" y="351.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.15%)</title><rect x="1171.1" y="325" width="1.7" height="15.0" fill="rgb(252,154,19)" rx="2" ry="2" />
<text  x="1174.13" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (31 samples, 4.51%)</title><rect x="1076.8" y="421" width="53.2" height="15.0" fill="rgb(215,198,14)" rx="2" ry="2" />
<text  x="1079.80" y="431.5" >__x64..</text>
</g>
<g >
<title>ip (1 samples, 0.15%)</title><rect x="1171.1" y="485" width="1.7" height="15.0" fill="rgb(217,134,34)" rx="2" ry="2" />
<text  x="1174.13" y="495.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (3 samples, 0.44%)</title><rect x="1124.8" y="389" width="5.2" height="15.0" fill="rgb(245,21,5)" rx="2" ry="2" />
<text  x="1127.83" y="399.5" ></text>
</g>
<g >
<title>h2load (677 samples, 98.40%)</title><rect x="10.0" y="485" width="1161.1" height="15.0" fill="rgb(252,140,42)" rx="2" ry="2" />
<text  x="13.00" y="495.5" >h2load</text>
</g>
<g >
<title>perf_pmu_enable.part.0 (4 samples, 0.58%)</title><rect x="1183.1" y="261" width="6.9" height="15.0" fill="rgb(208,219,9)" rx="2" ry="2" />
<text  x="1186.14" y="271.5" ></text>
</g>
<g >
<title>__skb_recv_udp (2 samples, 0.29%)</title><rect x="1081.9" y="341" width="3.5" height="15.0" fill="rgb(244,19,29)" rx="2" ry="2" />
<text  x="1084.95" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_sendmsg (5 samples, 0.73%)</title><rect x="46.0" y="373" width="8.6" height="15.0" fill="rgb(236,78,28)" rx="2" ry="2" />
<text  x="49.02" y="383.5" ></text>
</g>
<g >
<title>vpaes_encrypt (22 samples, 3.20%)</title><rect x="1033.9" y="453" width="37.8" height="15.0" fill="rgb(250,160,32)" rx="2" ry="2" />
<text  x="1036.92" y="463.5" >vpa..</text>
</g>
<g >
<title>do_epoll_wait (3 samples, 0.44%)</title><rect x="1140.3" y="405" width="5.1" height="15.0" fill="rgb(228,153,10)" rx="2" ry="2" />
<text  x="1143.26" y="415.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.15%)</title><rect x="1131.7" y="389" width="1.7" height="15.0" fill="rgb(208,131,35)" rx="2" ry="2" />
<text  x="1134.69" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.15%)</title><rect x="1015.1" y="437" width="1.7" height="15.0" fill="rgb(247,15,18)" rx="2" ry="2" />
<text  x="1018.06" y="447.5" ></text>
</g>
<g >
<title>ngtcp2_pkt_decode_frame (1 samples, 0.15%)</title><rect x="1162.6" y="469" width="1.7" height="15.0" fill="rgb(250,126,1)" rx="2" ry="2" />
<text  x="1165.56" y="479.5" ></text>
</g>
<g >
<title>deactivate_task (1 samples, 0.15%)</title><rect x="1143.7" y="309" width="1.7" height="15.0" fill="rgb(215,152,31)" rx="2" ry="2" />
<text  x="1146.69" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.15%)</title><rect x="1181.4" y="437" width="1.7" height="15.0" fill="rgb(217,202,53)" rx="2" ry="2" />
<text  x="1184.42" y="447.5" ></text>
</g>
<g >
<title>__do_execve_file.isra.0 (4 samples, 0.58%)</title><rect x="1172.8" y="405" width="6.9" height="15.0" fill="rgb(223,158,8)" rx="2" ry="2" />
<text  x="1175.85" y="415.5" ></text>
</g>
<g >
<title>ngtcp2_strm_rx_offset (1 samples, 0.15%)</title><rect x="1167.7" y="469" width="1.7" height="15.0" fill="rgb(246,81,36)" rx="2" ry="2" />
<text  x="1170.70" y="479.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.15%)</title><rect x="1143.7" y="341" width="1.7" height="15.0" fill="rgb(239,217,10)" rx="2" ry="2" />
<text  x="1146.69" y="351.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.15%)</title><rect x="1094.0" y="293" width="1.7" height="15.0" fill="rgb(240,46,25)" rx="2" ry="2" />
<text  x="1096.95" y="303.5" ></text>
</g>
<g >
<title>ngtcp2_cid_eq (1 samples, 0.15%)</title><rect x="1025.3" y="453" width="1.8" height="15.0" fill="rgb(226,139,33)" rx="2" ry="2" />
<text  x="1028.35" y="463.5" ></text>
</g>
<g >
<title>sock_recvmsg (28 samples, 4.07%)</title><rect x="1076.8" y="389" width="48.0" height="15.0" fill="rgb(231,227,46)" rx="2" ry="2" />
<text  x="1079.80" y="399.5" >sock..</text>
</g>
<g >
<title>ngtcp2_crypto_client_initial_cb (1 samples, 0.15%)</title><rect x="1152.3" y="469" width="1.7" height="15.0" fill="rgb(243,69,50)" rx="2" ry="2" />
<text  x="1155.27" y="479.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.15%)</title><rect x="52.9" y="197" width="1.7" height="15.0" fill="rgb(217,124,29)" rx="2" ry="2" />
<text  x="55.88" y="207.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 1.60%)</title><rect x="39.2" y="453" width="18.8" height="15.0" fill="rgb(231,144,1)" rx="2" ry="2" />
<text  x="42.16" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.73%)</title><rect x="46.0" y="405" width="8.6" height="15.0" fill="rgb(245,114,23)" rx="2" ry="2" />
<text  x="49.02" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.58%)</title><rect x="1172.8" y="453" width="6.9" height="15.0" fill="rgb(248,100,29)" rx="2" ry="2" />
<text  x="1175.85" y="463.5" ></text>
</g>
<g >
<title>page_mapping (1 samples, 0.15%)</title><rect x="1131.7" y="277" width="1.7" height="15.0" fill="rgb(214,142,4)" rx="2" ry="2" />
<text  x="1134.69" y="287.5" ></text>
</g>
<g >
<title>__sys_sendmsg (5 samples, 0.73%)</title><rect x="46.0" y="357" width="8.6" height="15.0" fill="rgb(254,194,0)" rx="2" ry="2" />
<text  x="49.02" y="367.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.58%)</title><rect x="1183.1" y="293" width="6.9" height="15.0" fill="rgb(212,50,27)" rx="2" ry="2" />
<text  x="1186.14" y="303.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.15%)</title><rect x="1171.1" y="389" width="1.7" height="15.0" fill="rgb(239,135,35)" rx="2" ry="2" />
<text  x="1174.13" y="399.5" ></text>
</g>
<g >
<title>ip_send_skb (1 samples, 0.15%)</title><rect x="52.9" y="245" width="1.7" height="15.0" fill="rgb(250,111,6)" rx="2" ry="2" />
<text  x="55.88" y="255.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.15%)</title><rect x="1131.7" y="453" width="1.7" height="15.0" fill="rgb(216,226,22)" rx="2" ry="2" />
<text  x="1134.69" y="463.5" ></text>
</g>
<g >
<title>perf (4 samples, 0.58%)</title><rect x="1172.8" y="485" width="6.9" height="15.0" fill="rgb(230,204,41)" rx="2" ry="2" />
<text  x="1175.85" y="495.5" ></text>
</g>
<g >
<title>_dl_relocate_object (1 samples, 0.15%)</title><rect x="1171.1" y="421" width="1.7" height="15.0" fill="rgb(210,88,20)" rx="2" ry="2" />
<text  x="1174.13" y="431.5" ></text>
</g>
<g >
<title>aes_gcm_ctrl (1 samples, 0.15%)</title><rect x="44.3" y="437" width="1.7" height="15.0" fill="rgb(225,165,33)" rx="2" ry="2" />
<text  x="47.30" y="447.5" ></text>
</g>
<g >
<title>ngtcp2_rtb_recv_ack (1 samples, 0.15%)</title><rect x="1152.3" y="453" width="1.7" height="15.0" fill="rgb(232,115,8)" rx="2" ry="2" />
<text  x="1155.27" y="463.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.15%)</title><rect x="52.9" y="149" width="1.7" height="15.0" fill="rgb(251,177,29)" rx="2" ry="2" />
<text  x="55.88" y="159.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.15%)</title><rect x="52.9" y="165" width="1.7" height="15.0" fill="rgb(239,196,46)" rx="2" ry="2" />
<text  x="55.88" y="175.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (1 samples, 0.15%)</title><rect x="1020.2" y="357" width="1.7" height="15.0" fill="rgb(242,102,20)" rx="2" ry="2" />
<text  x="1023.20" y="367.5" ></text>
</g>
<g >
<title>copy_user_generic_string (15 samples, 2.18%)</title><rect x="1097.4" y="277" width="25.7" height="15.0" fill="rgb(252,168,51)" rx="2" ry="2" />
<text  x="1100.38" y="287.5" >c..</text>
</g>
<g >
<title>EVP_EncryptFinal_ex (1 samples, 0.15%)</title><rect x="40.9" y="437" width="1.7" height="15.0" fill="rgb(228,96,7)" rx="2" ry="2" />
<text  x="43.87" y="447.5" ></text>
</g>
<g >
<title>skb_clone_tx_timestamp (1 samples, 0.15%)</title><rect x="52.9" y="37" width="1.7" height="15.0" fill="rgb(244,174,44)" rx="2" ry="2" />
<text  x="55.88" y="47.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.15%)</title><rect x="1080.2" y="341" width="1.7" height="15.0" fill="rgb(249,183,51)" rx="2" ry="2" />
<text  x="1083.23" y="351.5" ></text>
</g>
<g >
<title>__fget (3 samples, 0.44%)</title><rect x="1124.8" y="341" width="5.2" height="15.0" fill="rgb(212,63,42)" rx="2" ry="2" />
<text  x="1127.83" y="351.5" ></text>
</g>
<g >
<title>perf_event_exec (4 samples, 0.58%)</title><rect x="1172.8" y="341" width="6.9" height="15.0" fill="rgb(236,16,37)" rx="2" ry="2" />
<text  x="1175.85" y="351.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.15%)</title><rect x="1171.1" y="453" width="1.7" height="15.0" fill="rgb(208,23,26)" rx="2" ry="2" />
<text  x="1174.13" y="463.5" ></text>
</g>
<g >
<title>conn_recv_pkt (2 samples, 0.29%)</title><rect x="1133.4" y="469" width="3.4" height="15.0" fill="rgb(229,152,34)" rx="2" ry="2" />
<text  x="1136.40" y="479.5" ></text>
</g>
<g >
<title>__set_cpus_allowed_ptr (4 samples, 0.58%)</title><rect x="1183.1" y="373" width="6.9" height="15.0" fill="rgb(214,220,23)" rx="2" ry="2" />
<text  x="1186.14" y="383.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.73%)</title><rect x="1181.4" y="469" width="8.6" height="15.0" fill="rgb(238,158,25)" rx="2" ry="2" />
<text  x="1184.42" y="479.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.58%)</title><rect x="1172.8" y="293" width="6.9" height="15.0" fill="rgb(252,23,36)" rx="2" ry="2" />
<text  x="1175.85" y="303.5" ></text>
</g>
<g >
<title>ngtcp2_pkt_adjust_pkt_num (1 samples, 0.15%)</title><rect x="1027.1" y="453" width="1.7" height="15.0" fill="rgb(251,65,3)" rx="2" ry="2" />
<text  x="1030.06" y="463.5" ></text>
</g>
<g >
<title>ngtcp2_rob_first_gap_offset (1 samples, 0.15%)</title><rect x="1166.0" y="469" width="1.7" height="15.0" fill="rgb(233,95,32)" rx="2" ry="2" />
<text  x="1168.99" y="479.5" ></text>
</g>
<g >
<title>inet_recvmsg (28 samples, 4.07%)</title><rect x="1076.8" y="373" width="48.0" height="15.0" fill="rgb(217,124,48)" rx="2" ry="2" />
<text  x="1079.80" y="383.5" >inet..</text>
</g>
<g >
<title>all (688 samples, 100%)</title><rect x="10.0" y="501" width="1180.0" height="15.0" fill="rgb(251,46,48)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>conn_verify_dcid (1 samples, 0.15%)</title><rect x="1136.8" y="469" width="1.7" height="15.0" fill="rgb(242,157,5)" rx="2" ry="2" />
<text  x="1139.83" y="479.5" ></text>
</g>
<g >
<title>__fget_light (3 samples, 0.44%)</title><rect x="1124.8" y="357" width="5.2" height="15.0" fill="rgb(213,189,45)" rx="2" ry="2" />
<text  x="1127.83" y="367.5" ></text>
</g>
<g >
<title>udp_send_skb.isra.0 (1 samples, 0.15%)</title><rect x="52.9" y="261" width="1.7" height="15.0" fill="rgb(222,88,46)" rx="2" ry="2" />
<text  x="55.88" y="271.5" ></text>
</g>
<g >
<title>[libngtcp2_crypto_openssl.so.0.0.0] (1 samples, 0.15%)</title><rect x="37.4" y="453" width="1.8" height="15.0" fill="rgb(207,177,16)" rx="2" ry="2" />
<text  x="40.44" y="463.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.15%)</title><rect x="1131.7" y="405" width="1.7" height="15.0" fill="rgb(239,155,23)" rx="2" ry="2" />
<text  x="1134.69" y="415.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.15%)</title><rect x="1123.1" y="325" width="1.7" height="15.0" fill="rgb(212,3,10)" rx="2" ry="2" />
<text  x="1126.11" y="335.5" ></text>
</g>
<g >
<title>sock_sendmsg (4 samples, 0.58%)</title><rect x="47.7" y="309" width="6.9" height="15.0" fill="rgb(249,111,6)" rx="2" ry="2" />
<text  x="50.73" y="319.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.15%)</title><rect x="1130.0" y="453" width="1.7" height="15.0" fill="rgb(247,46,52)" rx="2" ry="2" />
<text  x="1132.97" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_execve (4 samples, 0.58%)</title><rect x="1172.8" y="421" width="6.9" height="15.0" fill="rgb(249,184,13)" rx="2" ry="2" />
<text  x="1175.85" y="431.5" ></text>
</g>
<g >
<title>__lru_cache_add (1 samples, 0.15%)</title><rect x="1131.7" y="325" width="1.7" height="15.0" fill="rgb(213,17,5)" rx="2" ry="2" />
<text  x="1134.69" y="335.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_sock_addr (1 samples, 0.15%)</title><rect x="1078.5" y="341" width="1.7" height="15.0" fill="rgb(242,18,32)" rx="2" ry="2" />
<text  x="1081.52" y="351.5" ></text>
</g>
<g >
<title>ngtcp2_map_find (2 samples, 0.29%)</title><rect x="1159.1" y="469" width="3.5" height="15.0" fill="rgb(218,6,31)" rx="2" ry="2" />
<text  x="1162.13" y="479.5" ></text>
</g>
<g >
<title>ngtcp2_range_cut (1 samples, 0.15%)</title><rect x="56.3" y="437" width="1.7" height="15.0" fill="rgb(225,57,45)" rx="2" ry="2" />
<text  x="59.31" y="447.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.15%)</title><rect x="1020.2" y="373" width="1.7" height="15.0" fill="rgb(206,61,20)" rx="2" ry="2" />
<text  x="1023.20" y="383.5" ></text>
</g>
<g >
<title>epoll_wait (5 samples, 0.73%)</title><rect x="1138.5" y="469" width="8.6" height="15.0" fill="rgb(245,225,24)" rx="2" ry="2" />
<text  x="1141.55" y="479.5" ></text>
</g>
<g >
<title>ngtcp2_crypto_create_nonce (1 samples, 0.15%)</title><rect x="1154.0" y="469" width="1.7" height="15.0" fill="rgb(211,128,12)" rx="2" ry="2" />
<text  x="1156.98" y="479.5" ></text>
</g>
<g >
<title>do_epoll_wait (1 samples, 0.15%)</title><rect x="1145.4" y="421" width="1.7" height="15.0" fill="rgb(238,223,12)" rx="2" ry="2" />
<text  x="1148.41" y="431.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.15%)</title><rect x="1171.1" y="373" width="1.7" height="15.0" fill="rgb(246,80,15)" rx="2" ry="2" />
<text  x="1174.13" y="383.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.15%)</title><rect x="1171.1" y="341" width="1.7" height="15.0" fill="rgb(209,131,51)" rx="2" ry="2" />
<text  x="1174.13" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.58%)</title><rect x="1140.3" y="453" width="6.8" height="15.0" fill="rgb(232,119,8)" rx="2" ry="2" />
<text  x="1143.26" y="463.5" ></text>
</g>
<g >
<title>[libngtcp2.so.0.0.0] (1 samples, 0.15%)</title><rect x="35.7" y="453" width="1.7" height="15.0" fill="rgb(233,68,21)" rx="2" ry="2" />
<text  x="38.73" y="463.5" ></text>
</g>
<g >
<title>ipv4_mtu (1 samples, 0.15%)</title><rect x="51.2" y="245" width="1.7" height="15.0" fill="rgb(215,218,30)" rx="2" ry="2" />
<text  x="54.16" y="255.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (1 samples, 0.15%)</title><rect x="58.0" y="453" width="1.7" height="15.0" fill="rgb(205,122,3)" rx="2" ry="2" />
<text  x="61.02" y="463.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (1 samples, 0.15%)</title><rect x="1131.7" y="293" width="1.7" height="15.0" fill="rgb(217,123,16)" rx="2" ry="2" />
<text  x="1134.69" y="303.5" ></text>
</g>
<g >
<title>_cond_resched (4 samples, 0.58%)</title><rect x="1183.1" y="341" width="6.9" height="15.0" fill="rgb(236,144,11)" rx="2" ry="2" />
<text  x="1186.14" y="351.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.15%)</title><rect x="52.9" y="101" width="1.7" height="15.0" fill="rgb(208,45,7)" rx="2" ry="2" />
<text  x="55.88" y="111.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (3 samples, 0.44%)</title><rect x="1071.7" y="453" width="5.1" height="15.0" fill="rgb(251,214,35)" rx="2" ry="2" />
<text  x="1074.66" y="463.5" ></text>
</g>
<g >
<title>ep_poll (2 samples, 0.29%)</title><rect x="1142.0" y="389" width="3.4" height="15.0" fill="rgb(252,178,44)" rx="2" ry="2" />
<text  x="1144.98" y="399.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.15%)</title><rect x="1020.2" y="405" width="1.7" height="15.0" fill="rgb(234,28,38)" rx="2" ry="2" />
<text  x="1023.20" y="415.5" ></text>
</g>
<g >
<title>__fdget (3 samples, 0.44%)</title><rect x="1124.8" y="373" width="5.2" height="15.0" fill="rgb(249,216,42)" rx="2" ry="2" />
<text  x="1127.83" y="383.5" ></text>
</g>
<g >
<title>__sched_text_start (4 samples, 0.58%)</title><rect x="1183.1" y="309" width="6.9" height="15.0" fill="rgb(249,165,49)" rx="2" ry="2" />
<text  x="1186.14" y="319.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.15%)</title><rect x="52.9" y="213" width="1.7" height="15.0" fill="rgb(243,41,22)" rx="2" ry="2" />
<text  x="55.88" y="223.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 0.15%)</title><rect x="1143.7" y="357" width="1.7" height="15.0" fill="rgb(251,161,7)" rx="2" ry="2" />
<text  x="1146.69" y="367.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (1 samples, 0.15%)</title><rect x="47.7" y="293" width="1.7" height="15.0" fill="rgb(230,93,33)" rx="2" ry="2" />
<text  x="50.73" y="303.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.15%)</title><rect x="1085.4" y="325" width="1.7" height="15.0" fill="rgb(240,126,12)" rx="2" ry="2" />
<text  x="1088.38" y="335.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.15%)</title><rect x="1171.1" y="277" width="1.7" height="15.0" fill="rgb(251,215,1)" rx="2" ry="2" />
<text  x="1174.13" y="287.5" ></text>
</g>
<g >
<title>dl_main (1 samples, 0.15%)</title><rect x="1171.1" y="437" width="1.7" height="15.0" fill="rgb(252,90,20)" rx="2" ry="2" />
<text  x="1174.13" y="447.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (20 samples, 2.91%)</title><rect x="1090.5" y="341" width="34.3" height="15.0" fill="rgb(252,141,31)" rx="2" ry="2" />
<text  x="1093.52" y="351.5" >sk..</text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.15%)</title><rect x="1083.7" y="309" width="1.7" height="15.0" fill="rgb(216,87,28)" rx="2" ry="2" />
<text  x="1086.66" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.73%)</title><rect x="46.0" y="389" width="8.6" height="15.0" fill="rgb(219,67,37)" rx="2" ry="2" />
<text  x="49.02" y="399.5" ></text>
</g>
<g >
<title>___sys_sendmsg (4 samples, 0.58%)</title><rect x="47.7" y="341" width="6.9" height="15.0" fill="rgb(231,18,46)" rx="2" ry="2" />
<text  x="50.73" y="351.5" ></text>
</g>
<g >
<title>CRYPTO_gcm128_decrypt (14 samples, 2.03%)</title><rect x="11.7" y="453" width="24.0" height="15.0" fill="rgb(239,185,22)" rx="2" ry="2" />
<text  x="14.72" y="463.5" >C..</text>
</g>
<g >
<title>skb_release_data (1 samples, 0.15%)</title><rect x="1088.8" y="309" width="1.7" height="15.0" fill="rgb(232,26,30)" rx="2" ry="2" />
<text  x="1091.81" y="319.5" ></text>
</g>
<g >
<title>load_elf_binary (1 samples, 0.15%)</title><rect x="1181.4" y="373" width="1.7" height="15.0" fill="rgb(230,89,29)" rx="2" ry="2" />
<text  x="1184.42" y="383.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.15%)</title><rect x="1131.7" y="437" width="1.7" height="15.0" fill="rgb(221,54,36)" rx="2" ry="2" />
<text  x="1134.69" y="447.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (4 samples, 0.58%)</title><rect x="1172.8" y="309" width="6.9" height="15.0" fill="rgb(239,106,24)" rx="2" ry="2" />
<text  x="1175.85" y="319.5" ></text>
</g>
<g >
<title>h2load::(anonymous namespace)::writecb (5 samples, 0.73%)</title><rect x="46.0" y="437" width="8.6" height="15.0" fill="rgb(231,3,38)" rx="2" ry="2" />
<text  x="49.02" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (31 samples, 4.51%)</title><rect x="1076.8" y="437" width="53.2" height="15.0" fill="rgb(211,70,1)" rx="2" ry="2" />
<text  x="1079.80" y="447.5" >do_sy..</text>
</g>
<g >
<title>_raw_write_lock_irq (1 samples, 0.15%)</title><rect x="1140.3" y="389" width="1.7" height="15.0" fill="rgb(229,164,1)" rx="2" ry="2" />
<text  x="1143.26" y="399.5" ></text>
</g>
<g >
<title>__sys_recvfrom (31 samples, 4.51%)</title><rect x="1076.8" y="405" width="53.2" height="15.0" fill="rgb(241,95,12)" rx="2" ry="2" />
<text  x="1079.80" y="415.5" >__sys..</text>
</g>
<g >
<title>__ip_append_data.isra.0 (1 samples, 0.15%)</title><rect x="49.4" y="245" width="1.8" height="15.0" fill="rgb(248,100,5)" rx="2" ry="2" />
<text  x="52.45" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.58%)</title><rect x="1140.3" y="437" width="6.8" height="15.0" fill="rgb(246,225,23)" rx="2" ry="2" />
<text  x="1143.26" y="447.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.58%)</title><rect x="1172.8" y="261" width="6.9" height="15.0" fill="rgb(238,211,26)" rx="2" ry="2" />
<text  x="1175.85" y="271.5" ></text>
</g>
<g >
<title>_vpaes_encrypt_core (306 samples, 44.48%)</title><rect x="59.7" y="453" width="524.9" height="15.0" fill="rgb(209,25,45)" rx="2" ry="2" />
<text  x="62.74" y="463.5" >_vpaes_encrypt_core</text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.15%)</title><rect x="1087.1" y="309" width="1.7" height="15.0" fill="rgb(238,0,17)" rx="2" ry="2" />
<text  x="1090.09" y="319.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.58%)</title><rect x="1183.1" y="245" width="6.9" height="15.0" fill="rgb(230,113,48)" rx="2" ry="2" />
<text  x="1186.14" y="255.5" ></text>
</g>
<g >
<title>__calc_delta (1 samples, 0.15%)</title><rect x="1143.7" y="245" width="1.7" height="15.0" fill="rgb(212,166,46)" rx="2" ry="2" />
<text  x="1146.69" y="255.5" ></text>
</g>
<g >
<title>_vpaes_preheat (4 samples, 0.58%)</title><rect x="584.6" y="453" width="6.8" height="15.0" fill="rgb(215,37,5)" rx="2" ry="2" />
<text  x="587.56" y="463.5" ></text>
</g>
<g >
<title>[taskset] (1 samples, 0.15%)</title><rect x="1179.7" y="469" width="1.7" height="15.0" fill="rgb(222,52,6)" rx="2" ry="2" />
<text  x="1182.71" y="479.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.15%)</title><rect x="1171.1" y="229" width="1.7" height="15.0" fill="rgb(213,123,5)" rx="2" ry="2" />
<text  x="1174.13" y="239.5" ></text>
</g>
<g >
<title>ctx_resched (4 samples, 0.58%)</title><rect x="1172.8" y="325" width="6.9" height="15.0" fill="rgb(209,212,6)" rx="2" ry="2" />
<text  x="1175.85" y="335.5" ></text>
</g>
<g >
<title>setup_arg_pages (1 samples, 0.15%)</title><rect x="1181.4" y="357" width="1.7" height="15.0" fill="rgb(247,124,38)" rx="2" ry="2" />
<text  x="1184.42" y="367.5" ></text>
</g>
<g >
<title>mprotect_fixup (1 samples, 0.15%)</title><rect x="1181.4" y="341" width="1.7" height="15.0" fill="rgb(254,56,33)" rx="2" ry="2" />
<text  x="1184.42" y="351.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.15%)</title><rect x="1131.7" y="421" width="1.7" height="15.0" fill="rgb(225,179,50)" rx="2" ry="2" />
<text  x="1134.69" y="431.5" ></text>
</g>
<g >
<title>ngtcp2_strm_update_rx_offset (1 samples, 0.15%)</title><rect x="1169.4" y="469" width="1.7" height="15.0" fill="rgb(209,218,31)" rx="2" ry="2" />
<text  x="1172.42" y="479.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.58%)</title><rect x="1172.8" y="469" width="6.9" height="15.0" fill="rgb(217,52,21)" rx="2" ry="2" />
<text  x="1175.85" y="479.5" ></text>
</g>
<g >
<title>intel_pmu_nhm_enable_all (4 samples, 0.58%)</title><rect x="1172.8" y="277" width="6.9" height="15.0" fill="rgb(205,149,53)" rx="2" ry="2" />
<text  x="1175.85" y="287.5" ></text>
</g>
<g >
<title>ngtcp2_conn_extend_max_offset (1 samples, 0.15%)</title><rect x="1148.8" y="453" width="1.8" height="15.0" fill="rgb(236,161,14)" rx="2" ry="2" />
<text  x="1151.84" y="463.5" ></text>
</g>
<g >
<title>search_binary_handler (1 samples, 0.15%)</title><rect x="1181.4" y="389" width="1.7" height="15.0" fill="rgb(228,214,9)" rx="2" ry="2" />
<text  x="1184.42" y="399.5" ></text>
</g>
<g >
<title>CRYPTO_gcm128_finish (1 samples, 0.15%)</title><rect x="10.0" y="469" width="1.7" height="15.0" fill="rgb(206,1,23)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>ngtcp2_rob_first_gap_offset (1 samples, 0.15%)</title><rect x="42.6" y="421" width="1.7" height="15.0" fill="rgb(219,60,16)" rx="2" ry="2" />
<text  x="45.59" y="431.5" ></text>
</g>
<g >
<title>change_protection_range (1 samples, 0.15%)</title><rect x="1181.4" y="325" width="1.7" height="15.0" fill="rgb(224,119,12)" rx="2" ry="2" />
<text  x="1184.42" y="335.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.15%)</title><rect x="1171.1" y="245" width="1.7" height="15.0" fill="rgb(206,206,37)" rx="2" ry="2" />
<text  x="1174.13" y="255.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.15%)</title><rect x="1171.1" y="261" width="1.7" height="15.0" fill="rgb(215,47,13)" rx="2" ry="2" />
<text  x="1174.13" y="271.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.0 (1 samples, 0.15%)</title><rect x="1142.0" y="373" width="1.7" height="15.0" fill="rgb(229,83,20)" rx="2" ry="2" />
<text  x="1144.98" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.15%)</title><rect x="1181.4" y="453" width="1.7" height="15.0" fill="rgb(237,136,3)" rx="2" ry="2" />
<text  x="1184.42" y="463.5" ></text>
</g>
<g >
<title>ngtcp2_put_varint (1 samples, 0.15%)</title><rect x="1032.2" y="453" width="1.7" height="15.0" fill="rgb(243,83,16)" rx="2" ry="2" />
<text  x="1035.21" y="463.5" ></text>
</g>
<g >
<title>_copy_to_iter (16 samples, 2.33%)</title><rect x="1095.7" y="293" width="27.4" height="15.0" fill="rgb(235,127,7)" rx="2" ry="2" />
<text  x="1098.67" y="303.5" >_..</text>
</g>
<g >
<title>search_binary_handler (4 samples, 0.58%)</title><rect x="1172.8" y="389" width="6.9" height="15.0" fill="rgb(240,115,14)" rx="2" ry="2" />
<text  x="1175.85" y="399.5" ></text>
</g>
<g >
<title>ngtcp2_qlog_metrics_updated (1 samples, 0.15%)</title><rect x="1164.3" y="469" width="1.7" height="15.0" fill="rgb(215,164,26)" rx="2" ry="2" />
<text  x="1167.27" y="479.5" ></text>
</g>
<g >
<title>taskset (6 samples, 0.87%)</title><rect x="1179.7" y="485" width="10.3" height="15.0" fill="rgb(250,24,29)" rx="2" ry="2" />
<text  x="1182.71" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.15%)</title><rect x="1138.5" y="453" width="1.8" height="15.0" fill="rgb(207,20,8)" rx="2" ry="2" />
<text  x="1141.55" y="463.5" ></text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.15%)</title><rect x="1143.7" y="277" width="1.7" height="15.0" fill="rgb(212,33,14)" rx="2" ry="2" />
<text  x="1146.69" y="287.5" ></text>
</g>
<g >
<title>udp_sendmsg (3 samples, 0.44%)</title><rect x="49.4" y="277" width="5.2" height="15.0" fill="rgb(206,138,46)" rx="2" ry="2" />
<text  x="52.45" y="287.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (1 samples, 0.15%)</title><rect x="1131.7" y="341" width="1.7" height="15.0" fill="rgb(232,225,9)" rx="2" ry="2" />
<text  x="1134.69" y="351.5" ></text>
</g>
</g>
</svg>
